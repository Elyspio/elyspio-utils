{
	"x-generator": "NSwag v13.10.3.0 (NJsonSchema v10.3.6.0 (Newtonsoft.Json v13.0.0.0))",
	"swagger": "2.0",
	"info": {
		"title": "APISante.REST",
		"description": "API web de l'APISante.REST",
		"contact": {
			"name": "GCS SARA"
		},
		"version": "V1"
	},
	"host": "inte_service_spu.lyon-dev2.local",
	"basePath": "/APISante.Rest.V1",
	"schemes": [
		"http"
	],
	"consumes": [
		"application/json"
	],
	"produces": [
		"application/json"
	],
	"paths": {
		"/documents/contenu": {
			"post": {
				"tags": [
					"Documents"
				],
				"summary": "Permet de récupérer le contenu d'un fichier sans ses métadonnées",
				"operationId": "Documents_GetContenuDocument",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"name": "getContenuDocumentPayload",
						"in": "body",
						"description": "Paramètre de requete pour récupérer le contenu du document",
						"schema": {
							"$ref": "#/definitions/GetContenuDocumentPayload"
						},
						"x-nullable": true
					}
				],
				"responses": {
					"200": {
						"x-nullable": false,
						"description": "Le contenu du document",
						"schema": {
							"$ref": "#/definitions/DocumentContenu"
						}
					},
					"404": {
						"description": ""
					},
					"500": {
						"description": ""
					}
				}
			}
		},
		"/documents/multidocs": {
			"get": {
				"tags": [
					"Documents"
				],
				"summary": "Récupération des documents en vérifiant les droits de l'utilisateur idTechPs",
				"operationId": "Documents_GetMultiDocCheckingRights",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"type": "string",
						"name": "idTechPSIdentifie",
						"in": "query",
						"required": true,
						"x-nullable": true
					},
					{
						"type": "string",
						"name": "idLocalDoc",
						"in": "query",
						"x-nullable": true
					},
					{
						"type": "integer",
						"name": "idEts",
						"in": "query",
						"format": "int32",
						"x-nullable": true
					},
					{
						"type": "integer",
						"name": "idPiece",
						"in": "query",
						"format": "int32",
						"x-nullable": true
					},
					{
						"type": "array",
						"name": "listeFormats",
						"in": "query",
						"collectionFormat": "multi",
						"x-nullable": true,
						"items": {
							"$ref": "#/definitions/FormatDocEnum"
						}
					},
					{
						"type": "integer",
						"name": "priorite",
						"in": "query",
						"x-schema": {
							"$ref": "#/definitions/ProcessPriorityClass"
						},
						"x-nullable": true,
						"enum": [
							32,
							64,
							128,
							256,
							16384,
							32768
						]
					}
				],
				"responses": {
					"200": {
						"x-nullable": false,
						"description": "",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/MultiDoc"
							}
						}
					},
					"404": {
						"description": ""
					},
					"403": {
						"description": "Ps non habilité"
					}
				}
			}
		},
		"/documents/metadata": {
			"get": {
				"tags": [
					"Documents"
				],
				"summary": "Récupération des métadonnées relative au document ",
				"operationId": "Documents_GetMetadataDocCheckingRights",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"type": "string",
						"name": "idTechPSIdentifie",
						"in": "query",
						"required": true,
						"x-nullable": true
					},
					{
						"type": "string",
						"name": "idLocalDoc",
						"in": "query",
						"x-nullable": true
					},
					{
						"type": "integer",
						"name": "idEts",
						"in": "query",
						"format": "int32",
						"x-nullable": true
					},
					{
						"type": "integer",
						"name": "idPiece",
						"in": "query",
						"format": "int32",
						"x-nullable": true
					}
				],
				"responses": {
					"200": {
						"x-nullable": false,
						"description": "",
						"schema": {
							"$ref": "#/definitions/FullMetadataDoc"
						}
					},
					"404": {
						"description": ""
					},
					"403": {
						"description": "Ps non habilité"
					}
				}
			}
		},
		"/documents/isInvalidable": {
			"get": {
				"tags": [
					"Documents"
				],
				"summary": "Récupération de l'info si le document est invalidable",
				"operationId": "Documents_IsDocumentInvalidable",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"type": "string",
						"name": "idTechPs",
						"in": "query",
						"required": true,
						"x-nullable": true
					},
					{
						"type": "string",
						"name": "idLocalDoc",
						"in": "query",
						"required": true,
						"x-nullable": true
					},
					{
						"type": "integer",
						"name": "idEts",
						"in": "query",
						"required": true,
						"format": "int32",
						"x-nullable": false
					},
					{
						"type": "number",
						"name": "idPiece",
						"in": "query",
						"required": true,
						"format": "decimal",
						"x-nullable": true
					},
					{
						"type": "string",
						"name": "idPsAuteur",
						"in": "query",
						"required": true,
						"x-nullable": true
					},
					{
						"type": "string",
						"name": "isPsExpediteur",
						"in": "query",
						"required": true,
						"x-nullable": true
					}
				],
				"responses": {
					"200": {
						"x-nullable": false,
						"description": "",
						"schema": {
							"type": "boolean"
						}
					},
					"404": {
						"description": ""
					}
				}
			}
		},
		"/documents/invalider": {
			"post": {
				"tags": [
					"Documents"
				],
				"summary": "Invalider un document ",
				"operationId": "Documents_InvaliderDocument",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"type": "string",
						"name": "idLocalDoc",
						"in": "query",
						"required": true,
						"x-nullable": true
					},
					{
						"type": "integer",
						"name": "idEts",
						"in": "query",
						"required": true,
						"format": "int32",
						"x-nullable": false
					},
					{
						"type": "string",
						"name": "commentaire",
						"in": "query",
						"required": true,
						"x-nullable": true
					},
					{
						"type": "string",
						"name": "idTechPsIdentifie",
						"in": "query",
						"required": true,
						"x-nullable": true
					}
				],
				"responses": {
					"200": {
						"description": "Invalidation réussie"
					},
					"404": {
						"description": ""
					},
					"204": {
						"description": "Invalidation réussie"
					}
				}
			}
		},
		"/documents/PasseDroit": {
			"post": {
				"tags": [
					"Documents"
				],
				"summary": "Vérifie la validité du jeton du passe droit",
				"operationId": "Documents_CheckTokenPasseDroit",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"type": "string",
						"name": "tokenId",
						"in": "query",
						"required": true,
						"x-nullable": true
					},
					{
						"type": "string",
						"name": "idLocalDoc",
						"in": "query",
						"x-nullable": true
					},
					{
						"type": "integer",
						"name": "idEts",
						"in": "query",
						"format": "int32",
						"x-nullable": true
					},
					{
						"type": "integer",
						"name": "idPiece",
						"in": "query",
						"format": "int32",
						"x-nullable": true
					}
				],
				"responses": {
					"200": {
						"description": "Jeton valide"
					},
					"403": {
						"description": "Jeton invalide"
					}
				}
			}
		},
		"/documents/pdfpivot": {
			"post": {
				"tags": [
					"Documents"
				],
				"summary": "Génère le document au format PDF PIVOT à partir de l'original, s'il n'existe pas dans l'entrepôt central.",
				"operationId": "Documents_GenererPdfPivot",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"type": "string",
						"name": "idLocalDoc",
						"in": "query",
						"required": true,
						"description": "Identifiant local du document",
						"x-nullable": true
					},
					{
						"type": "integer",
						"name": "domaineIdLocalDoc",
						"in": "query",
						"required": true,
						"description": "Domaine d'identification du document (= idStic de l'établissement).",
						"format": "int32",
						"x-nullable": false
					},
					{
						"type": "boolean",
						"name": "checkPdfPivotExistence",
						"in": "query",
						"description": "Booléen pour bloquer la génération du PDF pivot s'il existe déjà",
						"default": true,
						"x-nullable": false
					}
				],
				"responses": {
					"200": {
						"description": "PDF pivot généré"
					},
					"404": {
						"description": ""
					}
				}
			}
		},
		"/conversations/{id}/visio/active": {
			"get": {
				"tags": [
					"Conversations"
				],
				"summary": "récupération de la visioconférence active associée à une conversation",
				"operationId": "Conversations_GetActiveVisio",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"type": "number",
						"name": "id",
						"in": "path",
						"required": true,
						"description": "id de la visioconférence",
						"format": "decimal",
						"x-nullable": false
					}
				],
				"responses": {
					"200": {
						"x-nullable": true,
						"description": "",
						"schema": {
							"$ref": "#/definitions/Visio"
						}
					}
				}
			}
		},
		"/conversations/patient/{ippr}/all": {
			"get": {
				"tags": [
					"Conversations"
				],
				"summary": "Récupération de la liste des conversations avec ce patient et le Patient HIMSELF",
				"operationId": "Conversations_GetConversations",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"type": "string",
						"name": "ippr",
						"in": "path",
						"required": true,
						"description": "Identifiant du patient",
						"x-nullable": false
					}
				],
				"responses": {
					"200": {
						"x-nullable": false,
						"description": "",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/ConversationPatient"
							}
						}
					}
				}
			}
		},
		"/conversations/patient/{ippr}/{idConversation}": {
			"get": {
				"tags": [
					"Conversations"
				],
				"summary": "Récupération de la liste des échanges d'une conversation",
				"operationId": "Conversations_GetConversationEchanges",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"type": "integer",
						"name": "idConversation",
						"in": "path",
						"required": true,
						"description": "Identifiant de la conversation",
						"format": "int32",
						"x-nullable": false
					},
					{
						"type": "string",
						"name": "ippr",
						"in": "path",
						"required": true,
						"description": "Identifiant du patient (utilisé dans la vérification des droits du patient)",
						"x-nullable": false
					}
				],
				"responses": {
					"200": {
						"x-nullable": false,
						"description": "",
						"schema": {
							"$ref": "#/definitions/ConversationEchangesPatient"
						}
					}
				}
			},
			"post": {
				"tags": [
					"Conversations"
				],
				"summary": "Création d'un échange avec un message et/ou des pièces jointes.",
				"operationId": "Conversations_AddEchangeInConversation",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"type": "integer",
						"name": "idConversation",
						"in": "path",
						"required": true,
						"description": "Identifiant de la conversation",
						"format": "int32",
						"x-nullable": false
					},
					{
						"type": "string",
						"name": "ippr",
						"in": "path",
						"required": true,
						"description": "Identifiant du patient",
						"x-nullable": false
					},
					{
						"name": "payload",
						"in": "body",
						"description": "Message + fichiers à envoyer",
						"schema": {
							"$ref": "#/definitions/AddEchangeInConversationPayload"
						},
						"x-nullable": true
					}
				],
				"responses": {
					"201": {
						"x-nullable": false,
						"description": "Fichiers enregistré avec succes",
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					},
					"415": {
						"description": "Le format du fichier n'est pas supporté"
					},
					"500": {
						"description": "Erreur pendant l'enregistrement du fichier"
					}
				}
			}
		},
		"/conversations/patient/{ippr}/{idConversation}/lue": {
			"patch": {
				"tags": [
					"Conversations"
				],
				"summary": "Indique qu'une conversation a été lue par le patient",
				"operationId": "Conversations_SetConversationLue",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"type": "integer",
						"name": "idConversation",
						"in": "path",
						"required": true,
						"description": "Identifiant de la conversation",
						"format": "int32",
						"x-nullable": false
					},
					{
						"type": "string",
						"name": "ippr",
						"in": "path",
						"required": true,
						"description": "Identifiant du patient (utilisé dans la vérification des droits du patient)",
						"x-nullable": false
					}
				],
				"responses": {
					"204": {
						"description": "La conversation est a été lue par le patient"
					}
				}
			}
		},
		"/conversations/{idConversation}": {
			"patch": {
				"tags": [
					"Conversations"
				],
				"summary": "Mets à jour la conversation",
				"operationId": "Conversations_UpdateConversationUtilisateur",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"type": "integer",
						"name": "idConversation",
						"in": "path",
						"required": true,
						"description": "Identifiant de la conversation",
						"format": "int32",
						"x-nullable": false
					},
					{
						"name": "conversationUtilisateurDto",
						"in": "body",
						"schema": {
							"$ref": "#/definitions/ConversationUtilisateurDto"
						},
						"x-nullable": true
					}
				],
				"responses": {
					"204": {
						"description": "Mets à jour la conversation"
					}
				}
			}
		},
		"/conversations/patient/{ippr}/{idConversation}/documents/{idStic}/{idDoc}": {
			"get": {
				"tags": [
					"Conversations"
				],
				"operationId": "Conversations_GetDocument",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"type": "string",
						"name": "idDoc",
						"in": "path",
						"required": true,
						"x-nullable": false
					},
					{
						"type": "string",
						"name": "ippr",
						"in": "path",
						"required": true,
						"description": "Identifiant du patient (utilisé dans le filtre VerifyPatientInConversation)",
						"x-nullable": false
					},
					{
						"type": "integer",
						"name": "idConversation",
						"in": "path",
						"required": true,
						"description": "Identifiant de la conversation (utilisé dans le filtre VerifyPatientInConversation)",
						"format": "int32",
						"x-nullable": false
					},
					{
						"type": "array",
						"name": "formats",
						"in": "query",
						"collectionFormat": "multi",
						"x-nullable": true,
						"items": {
							"$ref": "#/definitions/FormatDocEnum"
						}
					},
					{
						"type": "integer",
						"name": "idStic",
						"in": "path",
						"required": true,
						"format": "int32",
						"x-nullable": false
					}
				],
				"responses": {
					"200": {
						"x-nullable": false,
						"description": "Les documents demandés",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/MultiDoc"
							}
						}
					}
				}
			}
		},
		"/conversations/patient/notifymyhop": {
			"post": {
				"tags": [
					"Conversations"
				],
				"summary": "Envoi d'une notification MyHop au Patient dans le cas d'un nouveau message reçu dans une conversation de MaSantéConnectée",
				"operationId": "Conversations_NotifyMyHopForUnreadInConversation",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"name": "payLoad",
						"in": "body",
						"schema": {
							"$ref": "#/definitions/MyHopNotifyPayLoad"
						},
						"x-nullable": true
					}
				],
				"responses": {
					"200": {
						"description": "Message de notification envoyé avec succes"
					},
					"500": {
						"description": "Erreur lors de l'envoi du message de notification"
					}
				}
			}
		},
		"/conversations/sollicitation/{idConversation}": {
			"post": {
				"tags": [
					"Conversations"
				],
				"summary": "Envoi d'un message dans une conversation ",
				"operationId": "Conversations_AddMessageToConversation",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"type": "integer",
						"name": "idConversation",
						"in": "path",
						"required": true,
						"description": "Identifiant de la conversation",
						"format": "int32",
						"x-nullable": false
					},
					{
						"name": "payload",
						"in": "body",
						"required": true,
						"description": "Données liées au message",
						"schema": {
							"$ref": "#/definitions/AddMessageToConversationPayload"
						},
						"x-nullable": false
					}
				],
				"responses": {
					"201": {
						"x-nullable": false,
						"description": "Identifiant de l'échange créé",
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					},
					"415": {
						"description": "Le format du fichier n'est pas supporté"
					},
					"500": {
						"description": "Erreur pendant l'enregistrement du fichier"
					}
				}
			}
		},
		"/conversations/infoEchange": {
			"get": {
				"tags": [
					"Conversations"
				],
				"summary": "Recupération des infos relatives à l'échange lié à un document à savoir : \n-\tListe des destinataires (avec pour chacun d’eux l’information lu/ non lu)\n-\tDate d’envoi",
				"operationId": "Conversations_GetInfoEchange",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"type": "string",
						"name": "idTechPsIdentifie",
						"in": "query",
						"required": true,
						"x-nullable": true
					},
					{
						"type": "integer",
						"name": "idConversation",
						"in": "query",
						"required": true,
						"format": "int32",
						"x-nullable": true
					},
					{
						"type": "integer",
						"name": "idEchange",
						"in": "query",
						"required": true,
						"format": "int32",
						"x-nullable": true
					}
				],
				"responses": {
					"200": {
						"x-nullable": false,
						"description": "",
						"schema": {
							"$ref": "#/definitions/InfoEchange"
						}
					},
					"404": {
						"description": ""
					}
				}
			}
		},
		"/conversations/count": {
			"get": {
				"tags": [
					"Conversations"
				],
				"summary": "Compte le nombre de conversations non lus avec un détail par status (EstArchive, EstFavori, EstAtraiter)",
				"operationId": "Conversations_CountConversationsByTypes",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"type": "array",
						"name": "idTechPsCibles",
						"in": "query",
						"collectionFormat": "multi",
						"x-nullable": true,
						"items": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"x-nullable": false,
						"description": "",
						"schema": {
							"type": "object",
							"x-dictionaryKey": {
								"$ref": "#/definitions/ConversationTypeEnum"
							},
							"additionalProperties": {
								"$ref": "#/definitions/CountByConversationStatus"
							}
						}
					},
					"404": {
						"description": ""
					}
				}
			}
		},
		"/conversations/v2/status": {
			"patch": {
				"tags": [
					"Conversations"
				],
				"summary": "Marque toutes les conversations de l'utilisateur comme lues/archivées",
				"operationId": "Conversations_UpdateConversationsUtilisateurV2",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"name": "req",
						"in": "body",
						"schema": {
							"$ref": "#/definitions/UpdateConversationsUtilisateurV2"
						},
						"x-nullable": true
					}
				],
				"responses": {
					"204": {
						"description": ""
					}
				}
			}
		},
		"/documents-travail": {
			"get": {
				"tags": [
					"documentsTravail"
				],
				"summary": "Récupération de l'ensemble des documents de travail liés",
				"operationId": "documentsTravail_GetAll",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"type": "string",
						"name": "ippr",
						"in": "query",
						"description": "Identifiant régional du dossier patient",
						"x-nullable": true
					},
					{
						"type": "integer",
						"name": "offset",
						"in": "query",
						"description": "Index du premier élément à retourner (défaut : 0)",
						"format": "int32",
						"x-nullable": true
					},
					{
						"type": "integer",
						"name": "limit",
						"in": "query",
						"description": "Nombre maximum d'éléments à retourner (défaut : 100)",
						"format": "int32",
						"x-nullable": true
					},
					{
						"type": "string",
						"name": "idTechPsIdentifie",
						"in": "query",
						"description": "Identifiant du professionnel de santé identifié",
						"x-nullable": true
					}
				],
				"responses": {
					"200": {
						"x-nullable": false,
						"description": "",
						"schema": {
							"$ref": "#/definitions/IPagedResultsOfDocumentTravail"
						}
					}
				}
			},
			"post": {
				"tags": [
					"documentsTravail"
				],
				"summary": "Création d'un document de travail",
				"operationId": "documentsTravail_Post",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"name": "value",
						"in": "body",
						"description": "Document de travail à créer",
						"schema": {
							"$ref": "#/definitions/DocumentTravail2"
						},
						"x-nullable": true
					},
					{
						"type": "string",
						"name": "idTechPsIdentifie",
						"in": "query",
						"description": "Identifiant du professionnel de santé identifié",
						"x-nullable": true
					}
				],
				"responses": {
					"201": {
						"x-nullable": false,
						"description": "Created",
						"schema": {
							"type": "number",
							"format": "decimal"
						}
					}
				}
			}
		},
		"/documents-travail/{id}": {
			"get": {
				"tags": [
					"documentsTravail"
				],
				"summary": "Récupération d'un document de travail à partir de son identifiant technique",
				"operationId": "documentsTravail_Get",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"type": "integer",
						"name": "id",
						"in": "path",
						"required": true,
						"description": "Identifiant technique du document de travail",
						"format": "int32",
						"x-nullable": false
					},
					{
						"type": "string",
						"name": "idTechPsIdentifie",
						"in": "query",
						"description": "Identifiant du professionnel de santé identifié",
						"x-nullable": true
					}
				],
				"responses": {
					"200": {
						"x-nullable": false,
						"description": "",
						"schema": {
							"$ref": "#/definitions/DocumentTravail"
						}
					},
					"404": {
						"description": ""
					}
				}
			},
			"put": {
				"tags": [
					"documentsTravail"
				],
				"summary": "Mise à jour complète d'un document de travail",
				"operationId": "documentsTravail_Put",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"type": "integer",
						"name": "id",
						"in": "path",
						"required": true,
						"description": "Identifiant technique du document de travail",
						"format": "int32",
						"x-nullable": false
					},
					{
						"name": "value",
						"in": "body",
						"description": "Document de travail à mettre à jour",
						"schema": {
							"$ref": "#/definitions/DocumentTravail"
						},
						"x-nullable": true
					},
					{
						"type": "string",
						"name": "idTechPsIdentifie",
						"in": "query",
						"description": "Identifiant du professionnel de santé identifié",
						"x-nullable": true
					}
				],
				"responses": {
					"204": {
						"description": ""
					}
				}
			},
			"delete": {
				"tags": [
					"documentsTravail"
				],
				"summary": "Suppression d'un document de travail",
				"operationId": "documentsTravail_Delete",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"type": "integer",
						"name": "id",
						"in": "path",
						"required": true,
						"description": "Identifiant technique du document de travail",
						"format": "int32",
						"x-nullable": false
					},
					{
						"type": "string",
						"name": "idTechPsIdentifie",
						"in": "query",
						"description": "Identifiant du professionnel de santé identifié",
						"x-nullable": true
					}
				],
				"responses": {
					"204": {
						"description": ""
					}
				}
			}
		},
		"/documents-travail/{id}/send": {
			"post": {
				"tags": [
					"documentsTravail"
				],
				"summary": "Envoi d'un document de travail",
				"description": "Le document de travail envoyé doit obligatoirement avoir les champs suivants renseignés :\n* Auteur\n* Expéditeur\n* Contenu OU Commentaire OU IdFichierTravail\n* IdTypePiece",
				"operationId": "documentsTravail_Send",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"type": "number",
						"name": "id",
						"in": "path",
						"required": true,
						"description": "Identifiant technique du document de travail",
						"format": "decimal",
						"x-nullable": false
					},
					{
						"type": "string",
						"name": "idTechPsIdentifie",
						"in": "query",
						"description": "Identifiant du professionnel de santé identifié",
						"x-nullable": true
					}
				],
				"responses": {
					"200": {
						"x-nullable": true,
						"description": "",
						"schema": {
							"$ref": "#/definitions/DocumentTravailSendResult"
						}
					}
				}
			}
		},
		"/documents-travail/{idDocumentTravail}/send-demande-avis": {
			"post": {
				"tags": [
					"documentsTravail"
				],
				"summary": "Envoi d'une demande d'avis à partir d'un document de travail",
				"description": "Le document de travail envoyé doit obligatoirement avoir les champs suivants renseignés :\n* Auteur\n* Expéditeur\n* Contenu OU Commentaire OU IdFichierTravail\n* IdTypePiece",
				"operationId": "documentsTravail_SendDemandeAvis",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"type": "number",
						"name": "idDocumentTravail",
						"in": "path",
						"required": true,
						"description": "Identifiant technique du document de travail",
						"format": "decimal",
						"x-nullable": false
					},
					{
						"name": "request",
						"in": "body",
						"schema": {
							"$ref": "#/definitions/SendDemandeAvisRequest"
						},
						"x-nullable": true
					}
				],
				"responses": {
					"200": {
						"x-nullable": true,
						"description": "",
						"schema": {
							"$ref": "#/definitions/DocumentTravailSendResult"
						}
					}
				}
			}
		},
		"/documents-travail/send-reponse-auteur": {
			"post": {
				"tags": [
					"documentsTravail"
				],
				"summary": "Envoi réponse à un auteur de doc",
				"operationId": "documentsTravail_SendReponseAuteur",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"type": "string",
						"name": "idTechPsIdentifie",
						"in": "query",
						"required": true,
						"x-nullable": true
					},
					{
						"name": "reponseInfos",
						"in": "body",
						"schema": {
							"$ref": "#/definitions/ReponseInfos"
						},
						"x-nullable": true
					}
				],
				"responses": {
					"200": {
						"x-nullable": true,
						"description": "",
						"schema": {
							"$ref": "#/definitions/DocumentTravailSendResult"
						}
					}
				}
			}
		},
		"/Delegation/CanUseIdentity": {
			"get": {
				"tags": [
					"Delegation"
				],
				"summary": "connected user can use identity of identified user ?",
				"operationId": "Delegation_CanUseIdentityOrGetFromCache",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"type": "string",
						"name": "idTechPsConnecte",
						"in": "query",
						"required": true,
						"description": "Connected user technical id",
						"x-nullable": true
					},
					{
						"type": "string",
						"name": "idTechPsIdentifie",
						"in": "query",
						"required": true,
						"description": "Identified user technical id",
						"x-nullable": true
					}
				],
				"responses": {
					"200": {
						"x-nullable": false,
						"description": "Identité utilisable",
						"schema": {
							"type": "boolean"
						}
					}
				}
			}
		},
		"/nomenclature/alltypespiece": {
			"get": {
				"tags": [
					"Nomenclature"
				],
				"summary": "Gets All types of piece.",
				"operationId": "Nomenclature_GetAllTypesPiece",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					}
				],
				"responses": {
					"200": {
						"x-nullable": true,
						"description": "",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/TypePiece"
							}
						}
					}
				}
			}
		},
		"/nomenclature/allstructures": {
			"get": {
				"tags": [
					"Nomenclature"
				],
				"summary": "Gets All structures.",
				"operationId": "Nomenclature_GetAllStructures",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					}
				],
				"responses": {
					"200": {
						"x-nullable": true,
						"description": "",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Etablissement"
							}
						}
					}
				}
			}
		},
		"/nomenclature/allcpam": {
			"get": {
				"tags": [
					"Nomenclature"
				],
				"summary": "Get al CPAM",
				"operationId": "Nomenclature_GetAllCPAM",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					}
				],
				"responses": {
					"200": {
						"x-nullable": true,
						"description": "",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/CPAM"
							}
						}
					}
				}
			}
		},
		"/nomenclature/allpiececategories": {
			"get": {
				"tags": [
					"Nomenclature"
				],
				"summary": "Get all pieces categories",
				"operationId": "Nomenclature_GetAllPieceCategories",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					}
				],
				"responses": {
					"200": {
						"x-nullable": true,
						"description": "",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/CategorieTypePiece"
							}
						}
					}
				}
			}
		},
		"/nomenclature/alltypesintervention": {
			"get": {
				"tags": [
					"Nomenclature"
				],
				"summary": "Gets all types of intervention",
				"operationId": "Nomenclature_GetAllTypesIntervention",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					}
				],
				"responses": {
					"200": {
						"x-nullable": true,
						"description": "",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/TypeIntervention"
							}
						}
					}
				}
			}
		},
		"/nomenclature/allinterventioncategories": {
			"get": {
				"tags": [
					"Nomenclature"
				],
				"summary": "Gets All intervention categories",
				"operationId": "Nomenclature_GetAllInterventionCategories",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					}
				],
				"responses": {
					"200": {
						"x-nullable": true,
						"description": "",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/CategorieIntervention"
							}
						}
					}
				}
			}
		},
		"/nomenclature/allstatutsacteur": {
			"get": {
				"tags": [
					"Nomenclature"
				],
				"summary": "Gets All statuts acteur",
				"operationId": "Nomenclature_GetAllStatutsActeur",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					}
				],
				"responses": {
					"200": {
						"x-nullable": true,
						"description": "",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/StatutActeur"
							}
						}
					}
				}
			}
		},
		"/nomenclature/allplanifications": {
			"get": {
				"tags": [
					"Nomenclature"
				],
				"summary": "Gets All planifications",
				"operationId": "Nomenclature_GetAllPlanifications",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					}
				],
				"responses": {
					"200": {
						"x-nullable": true,
						"description": "",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Planification"
							}
						}
					}
				}
			}
		},
		"/nomenclature/allpathologies": {
			"get": {
				"tags": [
					"Nomenclature"
				],
				"summary": "Gets all pathologies",
				"operationId": "Nomenclature_GetAllPathologies",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					}
				],
				"responses": {
					"200": {
						"x-nullable": true,
						"description": "",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Pathologie"
							}
						}
					}
				}
			}
		},
		"/nomenclature/modalitesexercice": {
			"get": {
				"tags": [
					"Nomenclature"
				],
				"summary": "Recherche de toutes les modalités d'exercice",
				"operationId": "Nomenclature_GetModalitesExercice",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					}
				],
				"responses": {
					"200": {
						"x-nullable": true,
						"description": "",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/ModaliteExercice"
							}
						}
					}
				}
			}
		},
		"/nomenclature/cadresexercice": {
			"get": {
				"tags": [
					"Nomenclature"
				],
				"summary": "Recherche de tous les cadres d'exercice",
				"operationId": "Nomenclature_GetCadresExercice",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					}
				],
				"responses": {
					"200": {
						"x-nullable": true,
						"description": "",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/CadreExercice"
							}
						}
					}
				}
			}
		},
		"/nomenclature/allprofessions": {
			"get": {
				"tags": [
					"Nomenclature"
				],
				"summary": "Recherche de toutes les professions existantes",
				"operationId": "Nomenclature_GetAllProfessions",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					}
				],
				"responses": {
					"200": {
						"x-nullable": true,
						"description": "",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Profession"
							}
						}
					}
				}
			}
		},
		"/nomenclature/allspecialites": {
			"get": {
				"tags": [
					"Nomenclature"
				],
				"summary": "Recherche de toutes les spécialités existantes",
				"operationId": "Nomenclature_GetAllSpecialites",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					}
				],
				"responses": {
					"200": {
						"x-nullable": true,
						"description": "",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Specialite"
							}
						}
					}
				}
			}
		},
		"/nomenclature/allregionaleetiquettes": {
			"get": {
				"tags": [
					"Nomenclature"
				],
				"summary": "Récupère toutes les étiquettes régionales existantes",
				"operationId": "Nomenclature_GetAllRegionaleEtiquettes",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					}
				],
				"responses": {
					"200": {
						"x-nullable": true,
						"description": "",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Etiquette"
							}
						}
					}
				}
			}
		},
		"/nomenclature/coordoneesgps": {
			"post": {
				"tags": [
					"Nomenclature"
				],
				"summary": "get coordonees GPS by IdsTechPs (array inside body)",
				"operationId": "Nomenclature_GetCoordonneesGPSByIdTechPs",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"name": "request",
						"in": "body",
						"schema": {
							"$ref": "#/definitions/GetCoordonneesGPSByIdTechPsRequest"
						},
						"x-nullable": true
					}
				],
				"responses": {
					"200": {
						"x-nullable": true,
						"description": "",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/CoordonneesGPS"
							}
						}
					}
				}
			}
		},
		"/couchbaseCache/professions/refresh": {
			"post": {
				"tags": [
					"CouchBaseCache"
				],
				"summary": "Rafraichit le cache couchbase des professions",
				"operationId": "CouchBaseCache_RefreshProfessioCache",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					}
				],
				"responses": {
					"204": {
						"description": ""
					}
				}
			}
		},
		"/Trace": {
			"post": {
				"tags": [
					"TraceJournal"
				],
				"summary": "Trace d'une action",
				"operationId": "TraceJournal_TraceActionAutomatiqueAPIMesPatients",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"name": "actionUtilisateur",
						"in": "body",
						"schema": {
							"$ref": "#/definitions/ActionUtilisateur"
						},
						"x-nullable": true
					}
				],
				"responses": {
					"200": {
						"description": "Trace emise"
					},
					"500": {
						"description": ""
					}
				}
			}
		},
		"/Professionnels": {
			"post": {
				"tags": [
					"Professionnels"
				],
				"operationId": "Professionnels_FindPsByCriteria",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"name": "searchParams",
						"in": "body",
						"description": "un objet contenant la chaine de caractère 'nomsPrenom', le tableau (la liste) 'idsTechAexclure', et le nombre 'maxResults'",
						"schema": {
							"$ref": "#/definitions/SearchRequestModel"
						},
						"x-nullable": true
					}
				],
				"responses": {
					"200": {
						"x-nullable": false,
						"description": "",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/UtilisateurActeurLight"
							}
						}
					},
					"404": {
						"description": ""
					}
				}
			}
		},
		"/Professionnels/idTechPs/{idTechPs}/idTechPsIdentifie/{idTechPsIdentifie}": {
			"get": {
				"tags": [
					"Professionnels"
				],
				"summary": "Trouve le PS via son identifiant technique : PS détaillé renvoyé",
				"operationId": "Professionnels_FindPsByIdTech",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"type": "string",
						"name": "idTechPsIdentifie",
						"in": "path",
						"required": true,
						"x-nullable": false
					},
					{
						"type": "string",
						"name": "idTechPs",
						"in": "path",
						"required": true,
						"x-nullable": false
					}
				],
				"responses": {
					"200": {
						"x-nullable": false,
						"description": "",
						"schema": {
							"$ref": "#/definitions/UtilisateurExtended"
						}
					},
					"404": {
						"description": ""
					}
				}
			}
		},
		"/Professionnels/idTechUser/{idNatPs}": {
			"get": {
				"tags": [
					"Professionnels"
				],
				"summary": "Recherche de l'identifiant technique d'un PS à partir de son IdCart ou RPPS ou Adeli",
				"operationId": "Professionnels_FindIdTechUtilisateurByIdNat",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"type": "string",
						"name": "idNatPs",
						"in": "path",
						"required": true,
						"x-nullable": false
					}
				],
				"responses": {
					"200": {
						"x-nullable": false,
						"description": "",
						"schema": {
							"type": "string"
						}
					},
					"404": {
						"description": ""
					}
				}
			}
		},
		"/Professionnels/delegantsAndConnectedUser": {
			"get": {
				"tags": [
					"Professionnels"
				],
				"summary": "Recherche les infos du PS connecté et ses delegants",
				"operationId": "Professionnels_GetDelegantsAndConnectedUser",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					}
				],
				"responses": {
					"200": {
						"x-nullable": false,
						"description": "",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Utilisateur"
							}
						}
					},
					"404": {
						"description": ""
					}
				}
			}
		},
		"/Professionnels/visionneuse/delegantsAndConnectedUser": {
			"get": {
				"tags": [
					"Professionnels"
				],
				"summary": "Recherche les infos du PS connecté et ses delegants",
				"operationId": "Professionnels_GetVisionneuseDelegantsAndConnectedUser",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					}
				],
				"responses": {
					"200": {
						"x-nullable": false,
						"description": "",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/UtilisateurVisionneuse"
							}
						}
					},
					"404": {
						"description": ""
					}
				}
			}
		},
		"/Professionnels/delegants": {
			"get": {
				"tags": [
					"Professionnels"
				],
				"summary": "Liste des délégants d'un Ps",
				"operationId": "Professionnels_GetDelegantsPS",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					}
				],
				"responses": {
					"200": {
						"x-nullable": false,
						"description": "",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Utilisateur"
							}
						}
					}
				}
			}
		},
		"/Professionnels/GetFileActive": {
			"get": {
				"tags": [
					"Professionnels"
				],
				"summary": "Récupère la file active du PS c.a.d les patients suivis par le PS (dans MesPatients)\nService utilisé par MonSisra pour charger la liste des patients à inclure à une conversation",
				"operationId": "Professionnels_GetFileActive",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"type": "string",
						"name": "idTechPsIdentifie",
						"in": "query",
						"required": true,
						"x-nullable": true
					}
				],
				"responses": {
					"200": {
						"x-nullable": false,
						"description": "",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/PatientFileActive"
							}
						}
					},
					"404": {
						"description": ""
					}
				}
			}
		},
		"/Dossiers/{ippr}/Proscrits": {
			"get": {
				"tags": [
					"HabilitationDossierPatient"
				],
				"summary": "Récuperer la liste des utilisateurs proscrit pour un patient donné (ippr) ",
				"operationId": "HabilitationDossierPatient_GetProscrits",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"type": "string",
						"name": "ippr",
						"in": "path",
						"required": true,
						"description": "ippr du patient pour lequel on cherche les proscrits",
						"x-nullable": false
					}
				],
				"responses": {
					"200": {
						"x-nullable": false,
						"description": "Liste des utilisateurs proscrits sur le dossier",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/UtilisateurActeurLight"
							}
						}
					},
					"404": {
						"description": ""
					}
				}
			}
		},
		"/Dossiers/{ippr}/Proscrits/{idTechPsCible}": {
			"delete": {
				"tags": [
					"HabilitationDossierPatient"
				],
				"summary": "Retirer un proscrit dans la liste des proscrits sur un dossier (ippr)",
				"operationId": "HabilitationDossierPatient_RetirerProscrit",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"type": "string",
						"name": "ippr",
						"in": "path",
						"required": true,
						"description": "ippr du patient pour lequel on cherche les proscrits",
						"x-nullable": false
					},
					{
						"type": "string",
						"name": "idTechPsCible",
						"in": "path",
						"required": true,
						"description": "suppression un PS dans la liste des proscrits",
						"x-nullable": false
					}
				],
				"responses": {
					"200": {
						"description": "Suppresssion réussie"
					},
					"404": {
						"description": "le PS n'existait pas dans la table des proscrit"
					}
				}
			},
			"post": {
				"tags": [
					"HabilitationDossierPatient"
				],
				"summary": "Ajouter un proscrit dans la liste des proscrit sur un dossier (ippr)",
				"operationId": "HabilitationDossierPatient_AjouterProscrit",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"type": "string",
						"name": "ippr",
						"in": "path",
						"required": true,
						"description": "ippr du patient pour lequel on cherche les proscrits",
						"x-nullable": false
					},
					{
						"type": "string",
						"name": "idTechPsCible",
						"in": "path",
						"required": true,
						"description": "ajouter un PS dans la liste des proscrits",
						"x-nullable": false
					}
				],
				"responses": {
					"200": {
						"description": "Ajout réussi"
					}
				}
			}
		},
		"/Dossiers/{ippr}/Mandats": {
			"get": {
				"tags": [
					"HabilitationDossierPatient"
				],
				"summary": "Récupère la liste des utilisateurs habilités sur le dossier patient (d'ippr passé en paramètre).",
				"operationId": "HabilitationDossierPatient_GetHabilitesWithInfoActeur",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"type": "string",
						"name": "ippr",
						"in": "path",
						"required": true,
						"description": "ippr du patient pour lequel on cherche les mandats",
						"x-nullable": false
					}
				],
				"responses": {
					"200": {
						"x-nullable": false,
						"description": "",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/UtilisateurActeurLight"
							}
						}
					}
				}
			}
		},
		"/Dossiers/{ippr}/Mandats/HabilitationDesactivee": {
			"get": {
				"tags": [
					"HabilitationDossierPatient"
				],
				"summary": "Récupère la liste des utilisateurs ayant une habilitation désactivée sur le DP.",
				"operationId": "HabilitationDossierPatient_GetHabilitesDesactivesWithInfo",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"type": "string",
						"name": "ippr",
						"in": "path",
						"required": true,
						"description": "ippr du patient pour lequel on cherche les mandats",
						"x-nullable": false
					}
				],
				"responses": {
					"200": {
						"x-nullable": false,
						"description": "",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/UtilisateurActeurLight"
							}
						}
					}
				}
			}
		},
		"/Dossiers/Delegants": {
			"get": {
				"tags": [
					"HabilitationDossierPatient"
				],
				"summary": "Liste des délégants d'un Ps (liste des PS ayant donné la délégation à l'utilisateur)",
				"operationId": "HabilitationDossierPatient_GetDelegantsPS",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"type": "string",
						"name": "idTechPsConnecte",
						"in": "query",
						"required": true,
						"description": "Le PS connecté ",
						"x-nullable": true
					}
				],
				"responses": {
					"200": {
						"x-nullable": false,
						"description": "",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Utilisateur"
							}
						}
					}
				}
			}
		},
		"/Dossiers/Delegues": {
			"get": {
				"tags": [
					"HabilitationDossierPatient"
				],
				"summary": "Liste des délégués d'un Ps (liste des PS ayant accès au compte du PS donné en paramètre)",
				"operationId": "HabilitationDossierPatient_GetDeleguesPS",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"type": "string",
						"name": "idTechPs",
						"in": "query",
						"required": true,
						"description": "Le PS connecté ",
						"x-nullable": true
					}
				],
				"responses": {
					"200": {
						"x-nullable": false,
						"description": "",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Utilisateur"
							}
						}
					}
				}
			}
		},
		"/Dossiers/{ippr}/Mandats/{idTechPsCible}": {
			"delete": {
				"tags": [
					"HabilitationDossierPatient"
				],
				"summary": "Permet de supprimer le mandat d'un PS pour un dossier donné (ippr)",
				"operationId": "HabilitationDossierPatient_RetirerHab",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"type": "string",
						"name": "ippr",
						"in": "path",
						"required": true,
						"description": "ippr du patient pour lequel on veut supprimer le mandat",
						"x-nullable": false
					},
					{
						"type": "string",
						"name": "idTechPsCible",
						"in": "path",
						"required": true,
						"description": "id du PS dont on veut supprimer le mandat",
						"x-nullable": false
					}
				],
				"responses": {
					"200": {
						"description": "Suppresssion réussie"
					}
				}
			},
			"post": {
				"tags": [
					"HabilitationDossierPatient"
				],
				"summary": "Ajouter une habilitation d'un ps sur un dossier (ippr) ",
				"operationId": "HabilitationDossierPatient_AjouterHab",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"type": "string",
						"name": "ippr",
						"in": "path",
						"required": true,
						"description": "ippr du patient pour lequel on cherche les proscrits",
						"x-nullable": false
					},
					{
						"type": "string",
						"name": "idTechPsCible",
						"in": "path",
						"required": true,
						"description": "ajouter un PS dans la liste des proscrits",
						"x-nullable": false
					}
				],
				"responses": {
					"200": {
						"description": "Ajout réussi"
					}
				}
			}
		},
		"/Dossiers/{ippr}/Acteurs/{idTechPsCible}": {
			"post": {
				"tags": [
					"HabilitationDossierPatient"
				],
				"summary": "Ajouter un acteur au dossier patient ",
				"operationId": "HabilitationDossierPatient_AjouterActeur",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"type": "string",
						"name": "ippr",
						"in": "path",
						"required": true,
						"description": "ippr du patient pour lequel on cherche les proscrits",
						"x-nullable": false
					},
					{
						"type": "string",
						"name": "idTechPsCible",
						"in": "path",
						"required": true,
						"description": "ajouter un PS dans la liste des proscrits",
						"x-nullable": false
					}
				],
				"responses": {
					"200": {
						"description": "Ajout réussi"
					}
				}
			},
			"delete": {
				"tags": [
					"HabilitationDossierPatient"
				],
				"summary": "Retirer un acteur du dossier patient",
				"operationId": "HabilitationDossierPatient_RetirerActeur",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"type": "string",
						"name": "ippr",
						"in": "path",
						"required": true,
						"description": "ippr du patient pour lequel on cherche les proscrits",
						"x-nullable": false
					},
					{
						"type": "string",
						"name": "idTechPsCible",
						"in": "path",
						"required": true,
						"description": "ajouter un PS dans la liste des proscrits",
						"x-nullable": false
					}
				],
				"responses": {
					"200": {
						"description": "Supprression réussie"
					}
				}
			}
		},
		"/Dossiers/{ippr}/Acteurs/NonHabilites": {
			"get": {
				"tags": [
					"HabilitationDossierPatient"
				],
				"summary": "Récupération des acteurs non habilités d'un dossier (ippr)",
				"operationId": "HabilitationDossierPatient_GetActeursDossierNonHabilites",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"type": "string",
						"name": "ippr",
						"in": "path",
						"required": true,
						"description": "ippr du patient pour lequel on cherche les proscrits",
						"x-nullable": false
					}
				],
				"responses": {
					"200": {
						"x-nullable": false,
						"description": "",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/UtilisateurActeurLight"
							}
						}
					},
					"404": {
						"description": ""
					}
				}
			}
		},
		"/Dossiers/{ippr}/HabilitationPS/{idTechPsIdentifie}": {
			"get": {
				"tags": [
					"HabilitationDossierPatient"
				],
				"summary": "Permet de récupérer l'habilitation du ps identifié sur le dossier du patient lié à l'ippr (en prenant en compte si le ps connecté est proscrit)\nLié aux habilitations actu",
				"operationId": "HabilitationDossierPatient_GetHabilitationInfoForPs",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"type": "string",
						"name": "ippr",
						"in": "path",
						"required": true,
						"x-nullable": false
					},
					{
						"type": "string",
						"name": "idTechPsIdentifie",
						"in": "path",
						"required": true,
						"x-nullable": false
					}
				],
				"responses": {
					"200": {
						"x-nullable": false,
						"description": "",
						"schema": {
							"$ref": "#/definitions/HabilitationsActusPatient"
						}
					}
				}
			}
		},
		"/Dossiers/{ippr}/HabilitationDossier/{idTechPsIdentifie}": {
			"get": {
				"tags": [
					"HabilitationDossierPatient"
				],
				"summary": "Permet de récupérer l'habilitation du ps identifié sur le dossier du patient lié à l'ippr (en prenant en compte si le ps connecté est proscrit)\nHabilitations générales",
				"operationId": "HabilitationDossierPatient_GetHabilitationDossier",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"type": "string",
						"name": "ippr",
						"in": "path",
						"required": true,
						"x-nullable": false
					},
					{
						"type": "string",
						"name": "idTechPsIdentifie",
						"in": "path",
						"required": true,
						"x-nullable": false
					}
				],
				"responses": {
					"200": {
						"x-nullable": false,
						"description": "",
						"schema": {
							"$ref": "#/definitions/HabilitationDossierPatient"
						}
					}
				}
			}
		},
		"/Dossiers/{ippr}/IsHabiliteDossier/{idTechPsIdentifie}": {
			"get": {
				"tags": [
					"HabilitationDossierPatient"
				],
				"summary": "Permet de récupérer savoir si le PS est habilité sur le dossier IPPR\nHabilitations générales",
				"operationId": "HabilitationDossierPatient_IsHabiliteDossier",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"type": "string",
						"name": "ippr",
						"in": "path",
						"required": true,
						"x-nullable": false
					},
					{
						"type": "string",
						"name": "idTechPsIdentifie",
						"in": "path",
						"required": true,
						"x-nullable": false
					}
				],
				"responses": {
					"200": {
						"x-nullable": false,
						"description": "",
						"schema": {
							"type": "boolean"
						}
					}
				}
			}
		},
		"/Dossiers/{ippr}/BrisGlaceAuthorized": {
			"get": {
				"tags": [
					"HabilitationDossierPatient"
				],
				"summary": "Renvoie si le ps a le droit d'accès à un dossier patient (via mode bris de glace)",
				"operationId": "HabilitationDossierPatient_HasAccesBrisGlaceAuthorized",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"type": "string",
						"name": "ippr",
						"in": "path",
						"required": true,
						"x-nullable": false
					}
				],
				"responses": {
					"200": {
						"x-nullable": false,
						"description": "",
						"schema": {
							"type": "boolean"
						}
					}
				}
			}
		},
		"/Dossiers/{ippr}/BrisGlace": {
			"post": {
				"tags": [
					"HabilitationDossierPatient"
				],
				"summary": "Active/Désactive l'interdiction d'accès à un dossier patient (via mode bris de glace)",
				"operationId": "HabilitationDossierPatient_MajAccesDossierViaBrisGlace",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"type": "string",
						"name": "ippr",
						"in": "path",
						"required": true,
						"x-nullable": false
					},
					{
						"name": "accesBrisGlace",
						"in": "body",
						"schema": {
							"type": "boolean"
						},
						"x-nullable": false
					}
				],
				"responses": {
					"200": {
						"description": "MAJ réussie"
					}
				}
			}
		},
		"/rappels/{idEvenement}": {
			"post": {
				"tags": [
					"Rappel"
				],
				"summary": "Envoi d'un rappel",
				"operationId": "Rappel_SendRappels",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"type": "string",
						"name": "idEvenement",
						"in": "path",
						"required": true,
						"description": "Id de l'évènement dont il faut envoyer le (ou les) rappel(s)",
						"x-nullable": false
					},
					{
						"type": "string",
						"name": "dateHeureRappel",
						"in": "query",
						"required": true,
						"description": "Date du rappel",
						"format": "date-time",
						"x-nullable": false
					},
					{
						"type": "string",
						"name": "dateEvenement",
						"in": "query",
						"required": true,
						"description": "Date de l'évènement correspondant au rappel",
						"format": "date-time",
						"x-nullable": false
					}
				],
				"responses": {
					"200": {
						"description": ""
					},
					"404": {
						"description": ""
					}
				}
			}
		},
		"/soumission/IHE": {
			"post": {
				"tags": [
					"soumission"
				],
				"summary": "Dépôt d'un message IHE  dans la file MSMQ appropriée",
				"description": "Ce service met en queue le message mais ne garantit pas son bon traitement par la suite.\n            ",
				"operationId": "soumission_DeposeIhe",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"name": "iheZepra",
						"in": "body",
						"description": "Requête zepraSynchrone IHE",
						"schema": {
							"$ref": "#/definitions/ProvideAndRegisterDocumentSetRequestType"
						},
						"x-nullable": true
					}
				],
				"responses": {
					"200": {
						"description": "Envoi du message réussi"
					},
					"500": {
						"description": "Erreur interne"
					},
					"400": {
						"description": "Requête invalide"
					}
				}
			}
		},
		"/soumission/CDA": {
			"post": {
				"tags": [
					"soumission"
				],
				"summary": "Dépôt d'un message CDA HL7 dans la file MSMQ appropriée",
				"description": "Ce service met en queue le message mais ne garantit pas son bon traitement par la suite.\n            ",
				"operationId": "soumission_DeposeCda",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"name": "documentCDA",
						"in": "body",
						"description": "Document CDA HL7",
						"schema": {
							"$ref": "#/definitions/POCD_MT000040ClinicalDocument"
						},
						"x-nullable": true
					}
				],
				"responses": {
					"200": {
						"description": "Envoi du message réussi"
					},
					"500": {
						"description": "Erreur interne"
					},
					"400": {
						"description": "Requête invalide"
					}
				}
			}
		},
		"/fichiersTravail/upload": {
			"post": {
				"tags": [
					"fichiersTravail"
				],
				"summary": "Upload d'un fichier travail",
				"operationId": "fichiersTravail_Upload",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"type": "integer",
						"name": "idDocumentTravail",
						"in": "query",
						"required": true,
						"description": "Id du document travail auquel la piece jointe est attachée",
						"format": "int32",
						"x-nullable": false
					},
					{
						"type": "number",
						"name": "idTypePiece",
						"in": "query",
						"description": "Id du type de la piece jointe ",
						"format": "decimal",
						"x-nullable": true
					},
					{
						"type": "string",
						"name": "idTechPsIdentifie",
						"in": "query",
						"x-nullable": true
					},
					{
						"type": "file",
						"name": "file",
						"in": "formData",
						"required": true,
						"description": "Fichier"
					}
				],
				"responses": {
					"201": {
						"description": "Fichier enregistré avec succes"
					},
					"415": {
						"description": "Le format du fichier n'est pas supporté"
					},
					"500": {
						"description": "Erreur pendant l'enregistrement du fichier"
					}
				}
			}
		},
		"/fichiersTravail/uploadFromConversation": {
			"post": {
				"tags": [
					"fichiersTravail"
				],
				"summary": "Upload d'un fichier travail à partir de l'id conversation\nCrée un document de travail et y ajoute un fichier",
				"operationId": "fichiersTravail_UploadFromConversation",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"type": "integer",
						"name": "idConversation",
						"in": "query",
						"required": true,
						"description": "Id de la conversation à laquelle la piece jointe est attachée",
						"format": "int32",
						"x-nullable": false
					},
					{
						"type": "string",
						"name": "ippr",
						"in": "query",
						"required": true,
						"description": "IPPR (11550)",
						"x-nullable": true
					},
					{
						"type": "number",
						"name": "idTypePiece",
						"in": "query",
						"description": "Id du type de la piece jointe ",
						"format": "decimal",
						"x-nullable": true
					},
					{
						"type": "string",
						"name": "idTechPsIdentifie",
						"in": "query",
						"x-nullable": true
					},
					{
						"type": "file",
						"name": "file",
						"in": "formData",
						"required": true,
						"description": "Fichier"
					}
				],
				"responses": {
					"201": {
						"description": "Fichier enregistré avec succes"
					},
					"415": {
						"description": "Le format du fichier n'est pas supporté"
					},
					"500": {
						"description": "Erreur pendant l'enregistrement du fichier"
					}
				}
			}
		},
		"/fichiersTravail/{idFichierTravail}/type": {
			"put": {
				"tags": [
					"fichiersTravail"
				],
				"summary": "Met a jour le type d'un fichierTravail",
				"operationId": "fichiersTravail_UpdateFichierTravailType",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"type": "string",
						"name": "idFichierTravail",
						"in": "path",
						"required": true,
						"description": "identifiant du fichierTravail",
						"x-nullable": false
					},
					{
						"type": "integer",
						"name": "idTypePiece",
						"in": "query",
						"required": true,
						"description": "nouveau typePiece du fichierTravail",
						"format": "int32",
						"x-nullable": false
					}
				],
				"responses": {
					"204": {
						"description": "Type Fichier Travail modifié avec succes"
					},
					"400": {
						"description": ""
					}
				}
			}
		},
		"/fichiersTravail/{idFichierTravail}/date": {
			"put": {
				"tags": [
					"fichiersTravail"
				],
				"summary": "Met a jour le type d'un fichierTravail",
				"operationId": "fichiersTravail_UpdateFichierTravailDate",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"type": "string",
						"name": "idFichierTravail",
						"in": "path",
						"required": true,
						"description": "identifiant du fichierTravail",
						"x-nullable": false
					},
					{
						"type": "string",
						"name": "datePiece",
						"in": "query",
						"required": true,
						"description": "nouvelle date du fichierTravail",
						"format": "date-time",
						"x-nullable": false
					}
				],
				"responses": {
					"204": {
						"description": "Date Fichier Travail modifié avec succes"
					},
					"400": {
						"description": ""
					}
				}
			}
		},
		"/syntheseformulaire/GenerateExportSynthesePDF": {
			"post": {
				"tags": [
					"SyntheseFormulairePDF"
				],
				"summary": "Génération de l'export de la synthèse en fonction d'un IPPR et d'une liste de formulaires",
				"operationId": "SyntheseFormulairePDF_GenerateExportSynthesePDF",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"type": "string",
						"name": "idTechPsIdentifie",
						"in": "query",
						"required": true,
						"description": "idTechPs identifié",
						"x-nullable": true
					},
					{
						"type": "string",
						"name": "ippr",
						"in": "query",
						"required": true,
						"x-nullable": true
					},
					{
						"type": "boolean",
						"name": "condense",
						"in": "query",
						"required": true,
						"x-nullable": false
					},
					{
						"name": "listeSections",
						"in": "body",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/TypeSectionExportPDF"
							}
						},
						"x-nullable": true
					}
				],
				"responses": {
					"200": {
						"x-nullable": true,
						"description": "",
						"schema": {
							"$ref": "#/definitions/FichierNomme"
						}
					}
				}
			}
		},
		"/syntheseformulaire/SendExportSynthesePDF": {
			"post": {
				"tags": [
					"SyntheseFormulairePDF"
				],
				"summary": "Génération et envoi de l'export de la synthèse en fonction d'un IPPR et d'une liste de formulaires à une liste de destinataires",
				"operationId": "SyntheseFormulairePDF_SendExportSynthesePDF",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"type": "string",
						"name": "idTechPsIdentifie",
						"in": "query",
						"required": true,
						"description": "idTechPs identifié",
						"x-nullable": true
					},
					{
						"type": "string",
						"name": "ippr",
						"in": "query",
						"required": true,
						"x-nullable": true
					},
					{
						"type": "boolean",
						"name": "condense",
						"in": "query",
						"required": true,
						"x-nullable": false
					},
					{
						"type": "boolean",
						"name": "copiePatient",
						"in": "query",
						"required": true,
						"x-nullable": false
					},
					{
						"name": "request",
						"in": "body",
						"schema": {
							"$ref": "#/definitions/SendExportSynthesePDFRequest"
						},
						"x-nullable": true
					},
					{
						"type": "integer",
						"name": "idConversation",
						"in": "query",
						"format": "int32",
						"x-nullable": true
					}
				],
				"responses": {
					"200": {
						"x-nullable": true,
						"description": "",
						"schema": {
							"$ref": "#/definitions/DocumentTravailSendResult2"
						}
					}
				}
			}
		},
		"/visios": {
			"post": {
				"tags": [
					"Visios"
				],
				"summary": "Création d'une visioconférence",
				"operationId": "Visios_Post",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"name": "visio",
						"in": "body",
						"description": "visioconférence à créer",
						"schema": {
							"$ref": "#/definitions/Visio"
						},
						"x-nullable": true
					},
					{
						"type": "string",
						"name": "idTechPsIdentifie",
						"in": "query",
						"required": true,
						"description": "idTechPs identifié",
						"x-nullable": true
					}
				],
				"responses": {
					"201": {
						"x-nullable": false,
						"description": "id de la visio",
						"schema": {
							"type": "string"
						}
					}
				}
			}
		},
		"/visios/{roomName}/keepalive": {
			"post": {
				"tags": [
					"Visios"
				],
				"summary": "Met à jour la date de modification d'un participant à une visioconférence après réception d'un keepAlive.",
				"operationId": "Visios_KeepAlive",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"type": "string",
						"name": "roomName",
						"in": "path",
						"required": true,
						"description": "Nom de la salle de visioconférence",
						"x-nullable": false
					},
					{
						"type": "string",
						"name": "idTechPsIdentifie",
						"in": "query",
						"description": "login du participant",
						"x-nullable": true
					}
				],
				"responses": {
					"200": {
						"x-nullable": true,
						"description": "Nom et prénom du participant",
						"schema": {
							"type": "string"
						}
					}
				}
			}
		},
		"/visios/participant": {
			"get": {
				"tags": [
					"Visios"
				],
				"summary": "Récupération d'un participant à une visioconférence par son identifiant",
				"operationId": "Visios_GetVisioParticipant",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"type": "string",
						"name": "roomName",
						"in": "query",
						"required": true,
						"description": "Nom de la salle de visio",
						"x-nullable": true
					},
					{
						"type": "string",
						"name": "idTechPs",
						"in": "query",
						"required": true,
						"description": "Login du participant",
						"x-nullable": true
					}
				],
				"responses": {
					"200": {
						"x-nullable": false,
						"description": "Le participant de la visioconférence",
						"schema": {
							"$ref": "#/definitions/VisioParticipant"
						}
					},
					"404": {
						"description": ""
					}
				}
			}
		},
		"/ValueSet/professions": {
			"get": {
				"tags": [
					"ValueSet"
				],
				"summary": "Récupère la liste de toutes les professions avec leurs différents identifiants",
				"operationId": "ValueSet_GetAllProfessions",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					}
				],
				"responses": {
					"200": {
						"x-nullable": false,
						"description": "",
						"schema": {
							"$ref": "#/definitions/ValueSet"
						}
					}
				}
			}
		},
		"/ValueSet/specialites": {
			"get": {
				"tags": [
					"ValueSet"
				],
				"summary": "Récupère la liste de toutes les spécialités",
				"operationId": "ValueSet_GetAllSpecialites",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					}
				],
				"responses": {
					"200": {
						"x-nullable": false,
						"description": "",
						"schema": {
							"$ref": "#/definitions/ValueSet"
						}
					}
				}
			}
		},
		"/ValueSet/pathologies": {
			"get": {
				"tags": [
					"ValueSet"
				],
				"summary": "Récupère la liste de toutes les pathologies",
				"operationId": "ValueSet_GetAllPathologies",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					}
				],
				"responses": {
					"200": {
						"x-nullable": false,
						"description": "",
						"schema": {
							"$ref": "#/definitions/ValueSet"
						}
					}
				}
			}
		},
		"/Patient": {
			"post": {
				"tags": [
					"Patient"
				],
				"summary": "Création ou mise à jour d'un patient",
				"operationId": "Patient_CreateOrUpdatePatient",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"type": "string",
						"name": "idTechPsIdentifie",
						"in": "query",
						"required": true,
						"x-nullable": true
					},
					{
						"name": "request",
						"in": "body",
						"schema": {
							"$ref": "#/definitions/SticPatientRecord"
						},
						"x-nullable": true
					}
				],
				"responses": {
					"201": {
						"x-nullable": false,
						"description": "",
						"schema": {
							"type": "string"
						}
					},
					"500": {
						"description": ""
					}
				}
			}
		},
		"/Patient/search": {
			"post": {
				"tags": [
					"Patient"
				],
				"summary": "Recherche de patient selon certains critères",
				"operationId": "Patient_Search",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"type": "string",
						"name": "NomNaissance",
						"in": "query",
						"description": "Nom de naissance",
						"x-nullable": true
					},
					{
						"type": "string",
						"name": "NomUsuel",
						"in": "query",
						"description": "Nom usuel",
						"x-nullable": true
					},
					{
						"type": "string",
						"name": "Prenom",
						"in": "query",
						"description": "Prénom",
						"x-nullable": true
					},
					{
						"type": "string",
						"name": "DateNaissance",
						"in": "query",
						"description": "Date de naissance",
						"format": "date-time",
						"x-nullable": true
					},
					{
						"type": "integer",
						"name": "Sexe",
						"in": "query",
						"description": "Sexe",
						"x-schema": {
							"$ref": "#/definitions/SexeEnum"
						},
						"default": 2,
						"x-nullable": false,
						"enum": [
							0,
							1,
							2
						]
					},
					{
						"type": "string",
						"name": "Ville",
						"in": "query",
						"description": "Ville de naissance ou de résidence",
						"x-nullable": true
					},
					{
						"type": "string",
						"name": "CodePostal",
						"in": "query",
						"description": "Code postal de naissance ou de résidence",
						"x-nullable": true
					},
					{
						"type": "integer",
						"name": "codePaysNaissance",
						"in": "query",
						"description": "Code du pays de naissance (code INSEE)",
						"format": "int32",
						"x-nullable": true
					},
					{
						"type": "integer",
						"name": "offset",
						"in": "query",
						"description": "Index du premier élément à retourner (défaut : 0)",
						"format": "int32",
						"x-nullable": true
					},
					{
						"type": "integer",
						"name": "limit",
						"in": "query",
						"description": "Nombre maximum d'éléments à retourner (défaut : 100)",
						"format": "int32",
						"x-nullable": true
					}
				],
				"responses": {
					"200": {
						"x-nullable": false,
						"description": "",
						"schema": {
							"$ref": "#/definitions/Bundle"
						}
					},
					"404": {
						"description": ""
					}
				}
			}
		},
		"/Patient/{ippr}": {
			"get": {
				"tags": [
					"Patient"
				],
				"summary": "Récupération d'un patient FHIR à partir de son IPPR",
				"operationId": "Patient_GetByIppr",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"type": "string",
						"name": "ippr",
						"in": "path",
						"required": true,
						"description": "IPPR",
						"x-nullable": false
					}
				],
				"responses": {
					"200": {
						"x-nullable": false,
						"description": "Retourne une ressource Patient FHIR",
						"schema": {
							"$ref": "#/definitions/Patient2"
						}
					},
					"404": {
						"description": ""
					}
				}
			},
			"delete": {
				"tags": [
					"Patient"
				],
				"summary": "Désactivation d'un patient (suppression logique) à partir de son IPPR",
				"operationId": "Patient_DisablePatient",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"type": "string",
						"name": "ippr",
						"in": "path",
						"required": true,
						"description": "ippr",
						"x-nullable": false
					}
				],
				"responses": {
					"204": {
						"description": ""
					}
				}
			}
		},
		"/Patient/contact/{ippr}": {
			"get": {
				"tags": [
					"Patient"
				],
				"summary": "Récupération des informations de contact d'un patient =&gt; Le patient + son téléphone et son mail",
				"operationId": "Patient_GetPatientWithContactByIppr",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"type": "string",
						"name": "ippr",
						"in": "path",
						"required": true,
						"description": "Identifiant régional du patient",
						"x-nullable": false
					}
				],
				"responses": {
					"200": {
						"x-nullable": false,
						"description": "le patient",
						"schema": {
							"$ref": "#/definitions/Patient2"
						}
					},
					"404": {
						"description": ""
					}
				}
			}
		},
		"/Patient/{IPPL}": {
			"get": {
				"tags": [
					"Patient"
				],
				"summary": "Récupération d'un patient à partir de son IPPL et IdDomaine",
				"operationId": "Patient_GetByIppl",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"type": "string",
						"name": "ippl",
						"in": "path",
						"required": true,
						"description": "ippl",
						"x-nullable": false
					},
					{
						"type": "integer",
						"name": "IdDomaine",
						"in": "query",
						"required": true,
						"description": "IdDomaine",
						"format": "int32",
						"x-nullable": false
					}
				],
				"responses": {
					"200": {
						"x-nullable": false,
						"description": "Retourne une ressource Patient FHIR",
						"schema": {
							"$ref": "#/definitions/Patient2"
						}
					},
					"404": {
						"description": ""
					}
				}
			}
		},
		"/Patient/{ippr}/myhop": {
			"post": {
				"tags": [
					"Patient"
				],
				"summary": "Création d'un compte ViaPatient pour un patient donné",
				"operationId": "Patient_CreateMyHopAccount",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"type": "string",
						"name": "ippr",
						"in": "path",
						"required": true,
						"description": "IPPR du patient",
						"x-nullable": false
					},
					{
						"name": "patientUtilisateur",
						"in": "body",
						"required": true,
						"description": "Le patient et le compte utilisateur à associer (et à créer si besoin)",
						"schema": {
							"$ref": "#/definitions/MyHopPatientUtilisateur"
						},
						"x-nullable": false
					},
					{
						"type": "string",
						"name": "idTechPsIdentifie",
						"in": "query",
						"required": true,
						"description": "Identifiant du Professionnel de santé identifié",
						"x-nullable": true
					},
					{
						"type": "boolean",
						"name": "rattachementForce",
						"in": "query",
						"description": "Si on force le rattachement même si le compte utilisateur existe déja",
						"default": true,
						"x-nullable": false
					}
				],
				"responses": {
					"200": {
						"x-nullable": false,
						"description": "",
						"schema": {
							"$ref": "#/definitions/MyHopCreationCompteMscCodeRetour"
						}
					}
				}
			},
			"get": {
				"tags": [
					"Patient"
				],
				"summary": "Renvoie si un patient a un compte ViaPatient",
				"operationId": "Patient_HasMyHopAccount",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"type": "string",
						"name": "ippr",
						"in": "path",
						"required": true,
						"description": "IPPR du patient",
						"x-nullable": false
					},
					{
						"type": "string",
						"name": "idTechPsIdentifie",
						"in": "query",
						"required": true,
						"description": "Identifiant du Professionnel de santé identifié",
						"x-nullable": true
					}
				],
				"responses": {
					"200": {
						"x-nullable": false,
						"description": "",
						"schema": {
							"type": "boolean"
						}
					}
				}
			}
		},
		"/Patient/socle/{ippr}": {
			"get": {
				"tags": [
					"Patient"
				],
				"summary": "Récupération d'un patient à partir de son IPPR",
				"operationId": "Patient_RecupererPatient",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"type": "string",
						"name": "ippr",
						"in": "path",
						"required": true,
						"description": "IPPR",
						"x-nullable": false
					},
					{
						"type": "string",
						"name": "idTechPsIdentifie",
						"in": "query",
						"required": true,
						"x-nullable": true
					},
					{
						"type": "boolean",
						"name": "synchronizeTraitsEtendusWithFormulaire",
						"in": "query",
						"required": true,
						"description": "Synchronisation des traits étendus du patient dans le formulaire (UTILISE UNIQUEMENT POUR LE bandeau patient)",
						"x-nullable": false
					}
				],
				"responses": {
					"200": {
						"x-nullable": false,
						"description": "",
						"schema": {
							"$ref": "#/definitions/Patient"
						}
					},
					"404": {
						"description": ""
					}
				}
			}
		},
		"/Patient/inclusion/{ippr}": {
			"get": {
				"tags": [
					"Patient"
				],
				"summary": "Récupération de la date d'inclusion d'un patient dans la file active d'un PS",
				"operationId": "Patient_GetDateInclusionIfPsActeur",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"type": "string",
						"name": "ippr",
						"in": "path",
						"required": true,
						"description": "IPPR du patient",
						"x-nullable": false
					},
					{
						"type": "string",
						"name": "idTechPsIdentifie",
						"in": "query",
						"required": true,
						"x-nullable": true
					},
					{
						"type": "string",
						"name": "idTechPsCible",
						"in": "query",
						"required": true,
						"x-nullable": true
					}
				],
				"responses": {
					"200": {
						"x-nullable": false,
						"description": "",
						"schema": {
							"$ref": "#/definitions/InfoDateInclusion"
						}
					},
					"404": {
						"description": ""
					}
				}
			}
		},
		"/Patient/patient/notifierFinEchangePatient": {
			"post": {
				"tags": [
					"Patient"
				],
				"summary": "Envoi d'un message de FIN pour notifier MonEspaceSante que le PS\nne souhaite pas que le patient lui réponde",
				"operationId": "Patient_EnvoiMailFinEchangePatient",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"type": "string",
						"name": "emailMSSAuteur",
						"in": "query",
						"required": true,
						"x-nullable": true
					},
					{
						"type": "string",
						"name": "adresseMSSPatient",
						"in": "query",
						"required": true,
						"x-nullable": true
					},
					{
						"type": "integer",
						"name": "idEchange",
						"in": "query",
						"format": "int32",
						"default": 0,
						"x-nullable": false
					}
				],
				"responses": {
					"200": {
						"description": "Message de notification de FIN de l'échange avec le patient, envoyé avec succès"
					},
					"500": {
						"description": "Erreur lors de l'envoi du message de notification de FIN de l'échange avec le patient."
					}
				}
			}
		},
		"/Patient/encryptedParams": {
			"get": {
				"tags": [
					"Patient"
				],
				"summary": "Return string encodée relative au paramètres passés",
				"operationId": "Patient_GetEncryptedParams",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"type": "string",
						"name": "patientDetailString",
						"in": "query",
						"required": true,
						"x-nullable": true
					},
					{
						"type": "string",
						"name": "appName",
						"in": "query",
						"required": true,
						"x-nullable": true
					},
					{
						"type": "integer",
						"name": "codeFonction",
						"in": "query",
						"required": true,
						"format": "int32",
						"x-nullable": true
					},
					{
						"type": "string",
						"name": "idTechPsIdentifie",
						"in": "query",
						"required": true,
						"x-nullable": true
					},
					{
						"type": "boolean",
						"name": "paramsEnClair",
						"in": "query",
						"required": true,
						"x-nullable": false
					}
				],
				"responses": {
					"200": {
						"x-nullable": false,
						"description": "",
						"schema": {
							"type": "string"
						}
					},
					"404": {
						"description": ""
					},
					"500": {
						"description": ""
					}
				}
			}
		},
		"/Patient/{ippr}/traitsetendus": {
			"put": {
				"tags": [
					"Patient"
				],
				"summary": "Met à jour les traits étendu du patient",
				"operationId": "Patient_UpdateTraitEtenduPatient",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"type": "string",
						"name": "ippr",
						"in": "path",
						"required": true,
						"x-nullable": false
					},
					{
						"type": "string",
						"name": "idTechPsIdentifie",
						"in": "query",
						"required": true,
						"x-nullable": true
					},
					{
						"name": "request",
						"in": "body",
						"schema": {
							"$ref": "#/definitions/UpdateTraitsEtenduRequest"
						},
						"x-nullable": true
					}
				],
				"responses": {
					"200": {
						"description": ""
					},
					"500": {
						"description": ""
					}
				}
			}
		},
		"/Practitioner/{idTechPS}": {
			"get": {
				"tags": [
					"Practitioner"
				],
				"summary": "Recherche d'un professionnel de santé à partir son identifiant technique (IdTechPS)",
				"operationId": "Practitioner_Get",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"type": "string",
						"name": "idTechPS",
						"in": "path",
						"required": true,
						"description": "IdTechPS du professionnel recherché",
						"x-nullable": false
					},
					{
						"type": "string",
						"name": "idTechPSIdentifie",
						"in": "query",
						"description": "IdTechPSIdentifie du requeteur",
						"x-nullable": true
					}
				],
				"responses": {
					"200": {
						"x-nullable": false,
						"description": "",
						"schema": {
							"$ref": "#/definitions/Practitioner"
						}
					},
					"404": {
						"description": ""
					}
				}
			}
		},
		"/Practitioner/idnat/{idNational}": {
			"get": {
				"tags": [
					"Practitioner"
				],
				"summary": "Récupération d'un professionnel de santé par IdNational",
				"operationId": "Practitioner_GetByIdNat",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"type": "string",
						"name": "idNational",
						"in": "path",
						"required": true,
						"description": "IdNational du professionnel",
						"x-nullable": false
					},
					{
						"type": "string",
						"name": "idTechPSIdentifie",
						"in": "query",
						"description": "IdTechPsIdentifié du requeteur",
						"x-nullable": true
					}
				],
				"responses": {
					"200": {
						"x-nullable": false,
						"description": "",
						"schema": {
							"type": "string"
						}
					},
					"404": {
						"description": ""
					}
				}
			}
		},
		"/Practitioner/search": {
			"post": {
				"tags": [
					"Practitioner"
				],
				"summary": "Recherche d'un professionnel de santé selon certains critères",
				"operationId": "Practitioner_Search",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"type": "string",
						"name": "n",
						"in": "query",
						"description": "Nom et/ou prénom ",
						"x-nullable": true
					},
					{
						"type": "array",
						"name": "pro",
						"in": "query",
						"description": "Identifiants de profession",
						"collectionFormat": "multi",
						"x-nullable": true,
						"items": {
							"type": "integer",
							"format": "int32"
						}
					},
					{
						"type": "array",
						"name": "spe",
						"in": "query",
						"description": "Identifiants de spécialité",
						"collectionFormat": "multi",
						"x-nullable": true,
						"items": {
							"type": "integer",
							"format": "int32"
						}
					},
					{
						"type": "string",
						"name": "ville",
						"in": "query",
						"description": "Ville",
						"x-nullable": true
					},
					{
						"type": "string",
						"name": "codepostal",
						"in": "query",
						"description": "Code postal",
						"x-nullable": true
					},
					{
						"type": "boolean",
						"name": "morale",
						"in": "query",
						"description": "Recherche sur les personnes morales",
						"x-nullable": true
					},
					{
						"type": "integer",
						"name": "offset",
						"in": "query",
						"description": "Index du premier élément à retourner (défaut : 0)",
						"format": "int32",
						"x-nullable": true
					},
					{
						"type": "integer",
						"name": "limit",
						"in": "query",
						"description": "Nombre maximum d'éléments à retourner (défaut : 100)",
						"format": "int32",
						"x-nullable": true
					},
					{
						"type": "string",
						"name": "idTechPsIdentifie",
						"in": "query",
						"x-nullable": true
					}
				],
				"responses": {
					"200": {
						"x-nullable": false,
						"description": "Retourne un bundle contenant une collection de ressources Practitioner FHIR correspondants aux critères de recherche",
						"schema": {
							"$ref": "#/definitions/Bundle"
						}
					},
					"404": {
						"description": ""
					}
				}
			}
		},
		"/Practitioner": {
			"post": {
				"tags": [
					"Practitioner"
				],
				"summary": "Création d'un professionnel de santé à partir d'un modèle Practitioner FHIR",
				"description": "Les informations non prises en charge par le modèle FHIR sont dans le champ Extension de la ressource.\nLes informations sur les professions et spécialités d'un professionnel de santé sont accessible via les services ValueSet.\nLe professionnel doit au moins avoir les informations suivantes:\n             * Nom (Usuel ou de naissance)\n             * Prenom\n             * un IdProfession existant si une profession est spécifiée (cf ValueSet/professions)\n             * un IdProfession existant pour la spécialité correspondante si elle est spécifiée\n             ",
				"operationId": "Practitioner_Post",
				"parameters": [
					{
						"type": "string",
						"name": "x-idTechPsConnecte",
						"in": "header",
						"description": "Identifiant du Professionnel de santé connecté"
					},
					{
						"name": "value",
						"in": "body",
						"description": "Modèle de professionnel à modifier/compléter",
						"schema": {
							"$ref": "#/definitions/Practitioner"
						},
						"x-nullable": true
					}
				],
				"responses": {
					"201": {
						"x-nullable": false,
						"description": "",
						"schema": {
							"type": "file"
						}
					},
					"404": {
						"description": ""
					},
					"400": {
						"description": ""
					}
				}
			}
		}
	},
	"definitions": {
		"DocumentContenu": {
			"type": "object",
			"properties": {
				"Contenu": {
					"type": "string",
					"format": "byte"
				},
				"MimeType": {
					"type": "string"
				},
				"Extension": {
					"type": "string"
				}
			}
		},
		"GetContenuDocumentPayload": {
			"type": "object",
			"required": [
				"DomaineIdLocalDoc",
				"Format"
			],
			"properties": {
				"IdLocalDoc": {
					"type": "string",
					"description": "Identifiant local du document"
				},
				"DomaineIdLocalDoc": {
					"type": "integer",
					"description": "Domaine d'identification du document (idStic de l'établissement identificateur du document)",
					"format": "int32"
				},
				"Format": {
					"description": "Format contenu demandé",
					"allOf": [
						{
							"$ref": "#/definitions/FormatDocEnum"
						}
					]
				},
				"Metadata": {
					"description": "Métadonnées lié au document permettant de générer le PDF SARA avec entete et pied de page",
					"allOf": [
						{
							"$ref": "#/definitions/PieceDossierToPdfinfo"
						}
					]
				}
			}
		},
		"FormatDocEnum": {
			"type": "integer",
			"description": "",
			"x-enumNames": [
				"ORIGINAL",
				"PDF",
				"HTML",
				"IMAGES",
				"TEXT",
				"VIGNETTE",
				"PDF_PIVOT"
			],
			"enum": [
				0,
				1,
				2,
				3,
				4,
				5,
				6
			]
		},
		"PieceDossierToPdfinfo": {
			"type": "object",
			"required": [
				"Piece_ValideLe",
				"Piece_DateActe"
			],
			"properties": {
				"Patient_NomJeunefille": {
					"type": "string"
				},
				"Patient_Nom": {
					"type": "string"
				},
				"Patient_Prenom": {
					"type": "string"
				},
				"Patient_DateNaissance": {
					"type": "string",
					"format": "date-time"
				},
				"Patient_CodeSexe": {
					"type": "string"
				},
				"Piece_Id": {
					"type": "string"
				},
				"Piece_IdEtablissament": {
					"type": "string"
				},
				"Piece_IdLocalDocument": {
					"type": "string"
				},
				"Piece_NomEtablissement": {
					"type": "string"
				},
				"Piece_ValideLe": {
					"type": "string",
					"format": "date-time"
				},
				"Piece_CommentaireInvalidation": {
					"type": "string"
				},
				"Piece_NomPrenomAuteur": {
					"type": "string"
				},
				"Piece_DateActe": {
					"type": "string",
					"format": "date-time"
				},
				"Piece_LibellePiece": {
					"type": "string"
				}
			}
		},
		"MultiDoc": {
			"type": "object",
			"required": [
				"Contenu",
				"Libelle",
				"IdLocalDoc",
				"IdStic",
				"MimeType",
				"Extension",
				"Format"
			],
			"properties": {
				"Contenu": {
					"type": "string",
					"format": "byte",
					"minLength": 1
				},
				"Libelle": {
					"type": "string",
					"minLength": 1
				},
				"IdLocalDoc": {
					"type": "string",
					"minLength": 1
				},
				"IdStic": {
					"type": "integer",
					"format": "int32"
				},
				"MimeType": {
					"type": "string",
					"minLength": 1
				},
				"Extension": {
					"type": "string",
					"minLength": 1
				},
				"Format": {
					"$ref": "#/definitions/FormatDocEnum"
				},
				"NumeroImage": {
					"type": "integer",
					"format": "int32"
				},
				"TotalImages": {
					"type": "integer",
					"format": "int32"
				}
			}
		},
		"ProcessPriorityClass": {
			"type": "integer",
			"description": "",
			"x-enumNames": [
				"Normal",
				"Idle",
				"High",
				"RealTime",
				"BelowNormal",
				"AboveNormal"
			],
			"enum": [
				32,
				64,
				128,
				256,
				16384,
				32768
			]
		},
		"FullMetadataDoc": {
			"type": "object",
			"required": [
				"IdTypePiece",
				"DateCreation",
				"StatutReponseDmp",
				"DateValidation",
				"Importance",
				"Statut",
				"Prive"
			],
			"properties": {
				"IdPieceTechnique": {
					"type": "number",
					"format": "decimal"
				},
				"IdLocalDoc": {
					"type": "string"
				},
				"IdTypePiece": {
					"type": "number",
					"format": "decimal"
				},
				"LibelleTypePiece": {
					"type": "string"
				},
				"Libelle": {
					"type": "string"
				},
				"DateActe": {
					"type": "string",
					"format": "date-time"
				},
				"DateCreation": {
					"type": "string",
					"format": "date-time"
				},
				"DateMod": {
					"type": "string",
					"format": "date-time"
				},
				"DateCrea": {
					"type": "string",
					"format": "date-time"
				},
				"DateDemandePartageMsc": {
					"type": "string",
					"format": "date-time"
				},
				"DateDemandePartageDmp": {
					"type": "string",
					"format": "date-time"
				},
				"DatePartageDmp": {
					"type": "string",
					"format": "date-time"
				},
				"IdFicheHybrid": {
					"type": "number",
					"format": "decimal"
				},
				"StatutReponseDmp": {
					"$ref": "#/definitions/CodeStatutDmp"
				},
				"DateValidation": {
					"type": "string",
					"format": "date-time"
				},
				"Commentaire": {
					"type": "string"
				},
				"Importance": {
					"$ref": "#/definitions/ImportanceDocumentEnum"
				},
				"Statut": {
					"$ref": "#/definitions/StatutPieceDossierEnum"
				},
				"InvalidationDate": {
					"type": "string",
					"format": "date-time"
				},
				"InvalidationCommentaire": {
					"type": "string"
				},
				"Invalidateur": {
					"$ref": "#/definitions/InfoPS"
				},
				"Etablissement": {
					"$ref": "#/definitions/MetadonneesDocumentEtablissement"
				},
				"Auteur": {
					"$ref": "#/definitions/MetadonneesDocumentUtilisateur"
				},
				"Expediteur": {
					"$ref": "#/definitions/MetadonneesDocumentUtilisateur"
				},
				"UtilisateursHabilites": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MetadonneesDocumentUtilisateurHabilite"
					}
				},
				"Patient": {
					"$ref": "#/definitions/MetadataPatient"
				},
				"ImagerieIds": {
					"$ref": "#/definitions/ImagerieIds"
				},
				"PiecesLiees": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PieceLiee"
					}
				},
				"IdConversation": {
					"type": "integer",
					"format": "int32"
				},
				"Prive": {
					"type": "boolean"
				}
			}
		},
		"CodeStatutDmp": {
			"type": "integer",
			"description": "",
			"x-enumNames": [
				"SUCCES",
				"ERREUR_VERIFICATION_INS",
				"ERREUR_TEST_EXISTENCE_DMP",
				"ERREUR_PARTAGE_DMP",
				"DOCUMENTS_TOUS_FILTRES",
				"DOCUMENT_DMP_NON_TROUVE",
				"DMP_NON_OUVERT",
				"INTERRUPTION_DEDOUBLONNAGE",
				"ERREUR_VERIFICATION_ID_TYPE_PIECE",
				"ERREUR_VERIFICATION_PDF",
				"ERREUR_VERIFICATION_ID_DOMAINE",
				"ERREUR_TRACE_REQUETE_PARTAGE_DMP_INEXISTANT",
				"RECEPTION",
				"ERREUR_TRACE_RECEPTION",
				"ERREUR_DOMAINE_INEXISTANT",
				"ERREUR_COMBINAISON_CONFIDENTIALITY_CODE",
				"ION_INVALIDE_PARAMETRES",
				"ERREUR_RECEPTION_INVALIDE_PARAMETRES",
				"ERREUR_SYSTEME",
				"ERREUR_SYSTEME_DMP",
				"ERREUR_DMP_CLOSED",
				"ERREUR",
				"PENDING_RESPONSE"
			],
			"enum": [
				0,
				1,
				2,
				3,
				4,
				5,
				6,
				7,
				8,
				9,
				10,
				11,
				12,
				13,
				14,
				15,
				16,
				17,
				18,
				19,
				20,
				21,
				-1
			]
		},
		"ImportanceDocumentEnum": {
			"type": "integer",
			"description": "",
			"x-enumNames": [
				"Basse",
				"Normale",
				"Importante",
				"Vitale"
			],
			"enum": [
				0,
				1,
				2,
				3
			]
		},
		"StatutPieceDossierEnum": {
			"type": "integer",
			"description": "",
			"x-enumNames": [
				"IN",
				"VA",
				"TP"
			],
			"enum": [
				0,
				1,
				2
			]
		},
		"InfoPS": {
			"type": "object",
			"required": [
				"IdTechnique",
				"IdCarte",
				"Civilite",
				"Nom",
				"Prenom",
				"ZeroPapier",
				"EstMorale"
			],
			"properties": {
				"IdTechnique": {
					"type": "string",
					"minLength": 1
				},
				"IdCarte": {
					"type": "string",
					"minLength": 1
				},
				"Adeli": {
					"type": "string"
				},
				"Rpps": {
					"type": "string"
				},
				"Civilite": {
					"type": "string",
					"minLength": 1
				},
				"Nom": {
					"type": "string",
					"minLength": 1
				},
				"Prenom": {
					"type": "string",
					"minLength": 1
				},
				"Email": {
					"type": "string"
				},
				"IdSpecialite": {
					"type": "number",
					"format": "decimal"
				},
				"NomSpecialite": {
					"type": "string"
				},
				"Couleur": {
					"type": "string"
				},
				"IdProfession": {
					"type": "number",
					"format": "decimal"
				},
				"NomProfession": {
					"type": "string"
				},
				"Commune": {
					"type": "string"
				},
				"CodePostal": {
					"type": "string"
				},
				"ZeroPapier": {
					"type": "boolean"
				},
				"EmailMss": {
					"type": "string"
				},
				"EstMorale": {
					"type": "boolean"
				}
			}
		},
		"MetadonneesDocumentEtablissement": {
			"type": "object",
			"required": [
				"IdEtablissement"
			],
			"properties": {
				"IdEtablissement": {
					"type": "number",
					"format": "decimal"
				},
				"Finess": {
					"type": "string"
				},
				"Nom": {
					"type": "string"
				},
				"NomCourt": {
					"type": "string"
				},
				"Oid": {
					"type": "string"
				}
			}
		},
		"MetadonneesDocumentUtilisateur": {
			"type": "object",
			"required": [
				"IdSpecialite",
				"IdProfession"
			],
			"properties": {
				"IdTechnique": {
					"type": "string"
				},
				"IdCarte": {
					"type": "string"
				},
				"RPPS": {
					"type": "string"
				},
				"Adeli": {
					"type": "string"
				},
				"Nom": {
					"type": "string"
				},
				"Prenom": {
					"type": "string"
				},
				"Mail": {
					"type": "string"
				},
				"IdSpecialite": {
					"type": "number",
					"format": "decimal"
				},
				"LibelleSpecialite": {
					"type": "string"
				},
				"IdProfession": {
					"type": "number",
					"format": "decimal"
				},
				"LibelleProfession": {
					"type": "string"
				}
			}
		},
		"MetadonneesDocumentUtilisateurHabilite": {
			"type": "object",
			"properties": {
				"Nom": {
					"type": "string"
				},
				"Prenom": {
					"type": "string"
				},
				"LibelleSpecialite": {
					"type": "string"
				},
				"IdTechPs": {
					"type": "string"
				}
			}
		},
		"MetadataPatient": {
			"type": "object",
			"required": [
				"Sexe",
				"NomNaissanceFictif",
				"NomUsuelFictif",
				"PrenomFictif",
				"DateNaissanceFictif",
				"SexeFictif",
				"StatutIdentiteIns"
			],
			"properties": {
				"IPPR": {
					"type": "string"
				},
				"NomNaissance": {
					"type": "string"
				},
				"NomUsuel": {
					"type": "string"
				},
				"Prenom": {
					"type": "string"
				},
				"DateNaissance": {
					"type": "string",
					"format": "date-time"
				},
				"Sexe": {
					"$ref": "#/definitions/SexeEnum"
				},
				"CodePaysNaissance": {
					"type": "string"
				},
				"LibellePaysNaissance": {
					"type": "string"
				},
				"CodePostalNaissance": {
					"type": "string"
				},
				"VilleNaissance": {
					"type": "string"
				},
				"NomNaissanceFictif": {
					"type": "boolean"
				},
				"NomUsuelFictif": {
					"type": "boolean"
				},
				"PrenomFictif": {
					"type": "boolean"
				},
				"DateNaissanceFictif": {
					"type": "boolean"
				},
				"SexeFictif": {
					"type": "boolean"
				},
				"StatutIdentiteIns": {
					"$ref": "#/definitions/StatutIdentiteIns"
				},
				"Ins": {
					"type": "string"
				},
				"EstNia": {
					"type": "boolean"
				},
				"PrenomUsuel": {
					"type": "string"
				}
			}
		},
		"SexeEnum": {
			"type": "integer",
			"description": "",
			"x-enumNames": [
				"F",
				"M",
				"I"
			],
			"enum": [
				0,
				1,
				2
			]
		},
		"StatutIdentiteIns": {
			"type": "integer",
			"description": "",
			"x-enumNames": [
				"None",
				"Provisoire",
				"Recuperee",
				"Validee",
				"Qualifiee"
			],
			"enum": [
				0,
				1,
				2,
				3,
				4
			]
		},
		"ImagerieIds": {
			"type": "object",
			"properties": {
				"AccessionNumber": {
					"type": "string"
				},
				"StudyUid": {
					"type": "string"
				},
				"Idproducteur": {
					"type": "string"
				}
			}
		},
		"PieceLiee": {
			"type": "object",
			"required": [
				"IdPiece",
				"IdEts",
				"DateCreation"
			],
			"properties": {
				"IdPiece": {
					"type": "integer",
					"format": "int32"
				},
				"IdLocalDoc": {
					"type": "string"
				},
				"IdEts": {
					"type": "integer",
					"format": "int32"
				},
				"LibellePiece": {
					"type": "string"
				},
				"DateCreation": {
					"type": "string",
					"format": "date-time"
				}
			}
		},
		"Visio": {
			"allOf": [
				{
					"$ref": "#/definitions/BaseOfVisioAndVisioconference"
				},
				{
					"type": "object",
					"description": "Visioconférence",
					"required": [
						"DateCreation",
						"Id",
						"IdConversation"
					],
					"properties": {
						"DateCreation": {
							"type": "string",
							"description": "Date de création",
							"format": "date-time"
						},
						"Id": {
							"type": "integer",
							"description": "Identifiant",
							"format": "int32"
						},
						"IdConversation": {
							"type": "integer",
							"description": "Identifiant de la conversation liée",
							"format": "int32"
						},
						"RoomName": {
							"type": "string",
							"description": "Nom de la salle de visio"
						}
					}
				}
			]
		},
		"BaseOfVisioAndVisioconference": {
			"type": "object",
			"description": "Classe de base des objets du modèle",
			"x-abstract": true
		},
		"ConversationPatient": {
			"type": "object",
			"required": [
				"IdConversation",
				"IdDossierPatient",
				"DateDernierEchangeConversation",
				"Sujet",
				"Type",
				"Destinataires",
				"NombreNonLu",
				"PatientPeutRepondre"
			],
			"properties": {
				"IdConversation": {
					"type": "integer",
					"format": "int32"
				},
				"IdDossierPatient": {
					"type": "string",
					"minLength": 1
				},
				"DateDernierEchangeConversation": {
					"type": "string",
					"format": "date-time",
					"minLength": 1
				},
				"DateLecture": {
					"type": "string",
					"format": "date-time"
				},
				"Sujet": {
					"type": "string",
					"minLength": 1
				},
				"Type": {
					"type": "string",
					"minLength": 1
				},
				"Destinataires": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/InfoPSDestinataireWithPatientHimself"
					}
				},
				"NombreNonLu": {
					"type": "integer",
					"format": "int32"
				},
				"PatientPeutRepondre": {
					"type": "boolean"
				}
			}
		},
		"InfoPSDestinataireWithPatientHimself": {
			"allOf": [
				{
					"$ref": "#/definitions/InfoPSDestinataire"
				},
				{
					"type": "object",
					"required": [
						"IsPatientHimself"
					],
					"properties": {
						"IsPatientHimself": {
							"type": "boolean"
						}
					}
				}
			]
		},
		"InfoPSDestinataire": {
			"allOf": [
				{
					"$ref": "#/definitions/InfoPS"
				},
				{
					"type": "object",
					"required": [
						"EchangeEstLu"
					],
					"properties": {
						"DateLecture": {
							"type": "string",
							"format": "date-time"
						},
						"EchangeEstLu": {
							"type": "boolean"
						}
					}
				}
			]
		},
		"ConversationEchangesPatient": {
			"allOf": [
				{
					"$ref": "#/definitions/ConversationBase"
				},
				{
					"type": "object",
					"required": [
						"EchangeDetails",
						"Destinataires"
					],
					"properties": {
						"EchangeDetails": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/EchangeDetail"
							}
						},
						"Destinataires": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/InfoPSDestinataireWithPatientHimself"
							}
						}
					}
				}
			]
		},
		"EchangeDetail": {
			"allOf": [
				{
					"$ref": "#/definitions/EchangeBase"
				},
				{
					"type": "object",
					"properties": {
						"Documents": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/MetadonneesDoc"
							}
						},
						"IdSpecialiteAuteur": {
							"type": "number",
							"format": "decimal"
						},
						"CiviliteAuteur": {
							"type": "string"
						},
						"AuteurEMailMSS": {
							"type": "string"
						}
					}
				}
			]
		},
		"MetadonneesDoc": {
			"type": "object",
			"required": [
				"DateCreation",
				"Importance",
				"IsCommentaireOnly",
				"Synthese",
				"Urgence",
				"HabilitationDoc"
			],
			"properties": {
				"IdPieceTechnique": {
					"type": "number",
					"format": "decimal"
				},
				"IdEchange": {
					"type": "integer",
					"format": "int32"
				},
				"IdLocalDoc": {
					"type": "string"
				},
				"IdTypePiece": {
					"type": "number",
					"format": "decimal"
				},
				"LibelleTypePiece": {
					"type": "string"
				},
				"Libelle": {
					"type": "string"
				},
				"DateCreation": {
					"type": "string",
					"format": "date-time"
				},
				"Commentaire": {
					"type": "string"
				},
				"Importance": {
					"$ref": "#/definitions/ImportanceDocumentEnum"
				},
				"Statut": {
					"$ref": "#/definitions/StatutPieceDossierEnum"
				},
				"InvalidationDate": {
					"type": "string",
					"format": "date-time"
				},
				"InvalidationCommentaire": {
					"type": "string"
				},
				"Invalidateur": {
					"$ref": "#/definitions/InfoPS"
				},
				"Etablissement": {
					"$ref": "#/definitions/Etablissement"
				},
				"Auteur": {
					"$ref": "#/definitions/InfoPS"
				},
				"Expediteur": {
					"$ref": "#/definitions/InfoPS"
				},
				"Patient": {
					"$ref": "#/definitions/Patient"
				},
				"IsCommentaireOnly": {
					"type": "boolean"
				},
				"IdPiecePereReponse": {
					"type": "number",
					"format": "decimal"
				},
				"InfoMedicale": {
					"type": "string"
				},
				"Synthese": {
					"type": "boolean"
				},
				"Urgence": {
					"type": "boolean"
				},
				"UrlViewerDocument": {
					"type": "string"
				},
				"PieceEstStockee": {
					"type": "integer",
					"format": "int32"
				},
				"HabilitationDoc": {
					"$ref": "#/definitions/HabilitationDocEnum"
				}
			}
		},
		"Etablissement": {
			"type": "object",
			"required": [
				"Id",
				"ConnecteImagerie",
				"IsReintegrationCompatible",
				"AlimentProchainsRDV",
				"KeepInlineScriptsInDocuments",
				"DateCreation",
				"ReintegrationReceptionIpplFictif",
				"ZepraReponseHprim"
			],
			"properties": {
				"Id": {
					"type": "number",
					"format": "decimal"
				},
				"NumFiness": {
					"type": "string"
				},
				"NumSiret": {
					"type": "string"
				},
				"Nom": {
					"type": "string"
				},
				"NomCourt": {
					"type": "string"
				},
				"Adresse1": {
					"type": "string"
				},
				"Adresse2": {
					"type": "string"
				},
				"CodePostal": {
					"type": "string"
				},
				"Ville": {
					"type": "string"
				},
				"Oid": {
					"type": "string"
				},
				"AdresseMsmq": {
					"type": "string"
				},
				"UrlServiceWebbn": {
					"type": "string"
				},
				"FileMsmqDcc": {
					"type": "string"
				},
				"IpBoiteNoire": {
					"type": "string"
				},
				"ConnecteImagerie": {
					"type": "boolean"
				},
				"IsReintegrationCompatible": {
					"type": "boolean"
				},
				"AlimentProchainsRDV": {
					"type": "boolean"
				},
				"VersionViewerImg": {
					"type": "string"
				},
				"UserIw": {
					"type": "string"
				},
				"PasswordIw": {
					"type": "string"
				},
				"ServerIw": {
					"type": "string"
				},
				"VersionIw": {
					"type": "string"
				},
				"KeepInlineScriptsInDocuments": {
					"type": "boolean"
				},
				"DomainName": {
					"type": "string"
				},
				"FileMsmqAlertes": {
					"type": "string"
				},
				"EmailAlertes": {
					"type": "string"
				},
				"DateModification": {
					"type": "string",
					"format": "date-time"
				},
				"DateCreation": {
					"type": "string",
					"format": "date-time"
				},
				"CadreExerciceDefaut": {
					"type": "string"
				},
				"ModaliteExerciceDefaut": {
					"type": "string"
				},
				"ReintegrationFormat": {
					"type": "string"
				},
				"ReintegrationIsPjEncapsule": {
					"type": "boolean"
				},
				"ReintegrationFormatIdSejour": {
					"type": "string"
				},
				"ReintegrationIdSejourStatique": {
					"type": "string"
				},
				"ReintegrationSeparateurORU": {
					"type": "string"
				},
				"ReintegrationApplicationReceptrice": {
					"type": "string"
				},
				"ReintegrationBloquerEnvoi": {
					"type": "boolean"
				},
				"ReintegrationReceptionIpplFictif": {
					"type": "boolean"
				},
				"ZepraReponseHprim": {
					"type": "boolean"
				}
			}
		},
		"Patient": {
			"type": "object",
			"required": [
				"Sexe",
				"AccesBrisGlace",
				"NomNaissanceFictif",
				"NomUsuelFictif",
				"PrenomFictif",
				"DateNaissanceFictif",
				"SexeFictif",
				"StatutIdentiteIns",
				"CompteMscActif"
			],
			"properties": {
				"IPPR": {
					"type": "string"
				},
				"NomNaissance": {
					"type": "string"
				},
				"NomUsuel": {
					"type": "string"
				},
				"Prenom": {
					"type": "string"
				},
				"DateNaissance": {
					"type": "string",
					"format": "date-time"
				},
				"Sexe": {
					"$ref": "#/definitions/SexeEnum"
				},
				"CodePaysNaissance": {
					"type": "string"
				},
				"LibellePaysNaissance": {
					"type": "string"
				},
				"CodePostalNaissance": {
					"type": "string"
				},
				"VilleNaissance": {
					"type": "string"
				},
				"Supprime": {
					"type": "boolean"
				},
				"AccesBrisGlace": {
					"type": "boolean"
				},
				"NomNaissanceFictif": {
					"type": "boolean"
				},
				"NomUsuelFictif": {
					"type": "boolean"
				},
				"PrenomFictif": {
					"type": "boolean"
				},
				"DateNaissanceFictif": {
					"type": "boolean"
				},
				"SexeFictif": {
					"type": "boolean"
				},
				"Adresse": {
					"type": "string"
				},
				"CPVille": {
					"type": "string"
				},
				"ComplementAdresse": {
					"type": "string"
				},
				"TelephoneFixe": {
					"type": "string"
				},
				"TelephoneMobile": {
					"type": "string"
				},
				"Email": {
					"type": "string"
				},
				"StatutIdentiteIns": {
					"$ref": "#/definitions/StatutIdentiteIns"
				},
				"NirPatient": {
					"type": "string"
				},
				"IsNirPatientNia": {
					"type": "boolean"
				},
				"CompteMscActif": {
					"type": "boolean"
				},
				"PrenomUsuel": {
					"type": "string"
				}
			}
		},
		"HabilitationDocEnum": {
			"type": "integer",
			"description": "",
			"x-enumNames": [
				"NonHabilite",
				"HabiliteDossier",
				"HabiliteDocument"
			],
			"enum": [
				0,
				1,
				2
			]
		},
		"EchangeBase": {
			"type": "object",
			"required": [
				"IdEchange",
				"IdConversation",
				"DateEnvoi",
				"MessageIdWS"
			],
			"properties": {
				"IdEchange": {
					"type": "integer",
					"format": "int32"
				},
				"IdConversation": {
					"type": "integer",
					"format": "int32"
				},
				"Importance": {
					"type": "string"
				},
				"DateEnvoi": {
					"type": "string",
					"format": "date-time"
				},
				"Message": {
					"type": "string"
				},
				"MessageHtml": {
					"type": "string"
				},
				"IdAuteur": {
					"type": "string"
				},
				"NomAuteur": {
					"type": "string"
				},
				"PrenomAuteur": {
					"type": "string"
				},
				"EmailAuteur": {
					"type": "string"
				},
				"SpecialiteAuteur": {
					"type": "string"
				},
				"IdExpediteur": {
					"type": "string"
				},
				"NomExpediteur": {
					"type": "string"
				},
				"PrenomExpediteur": {
					"type": "string"
				},
				"EmailExpediteur": {
					"type": "string"
				},
				"SpecialiteExpediteur": {
					"type": "string"
				},
				"MessageID": {
					"type": "string"
				},
				"MessageIdWS": {
					"type": "integer",
					"format": "int32"
				},
				"AdresseMSSPatient": {
					"type": "string"
				}
			}
		},
		"ConversationBase": {
			"type": "object",
			"required": [
				"IdConversation",
				"IdTechPs",
				"IdDossierPatient",
				"EstATraiter",
				"EstArchive",
				"EstFavori",
				"DateDernierEchangeConversation",
				"Sujet",
				"EstPartagee",
				"Type",
				"PatientPeutRepondre"
			],
			"properties": {
				"IdConversation": {
					"type": "integer",
					"format": "int32"
				},
				"IdTechPs": {
					"type": "string",
					"minLength": 1
				},
				"IdDossierPatient": {
					"type": "string",
					"minLength": 1
				},
				"EstATraiter": {
					"type": "boolean"
				},
				"EstArchive": {
					"type": "boolean"
				},
				"EstFavori": {
					"type": "boolean"
				},
				"DateDernierEchangeConversation": {
					"type": "string",
					"format": "date-time",
					"minLength": 1
				},
				"DateLecture": {
					"type": "string",
					"format": "date-time"
				},
				"Sujet": {
					"type": "string",
					"minLength": 1
				},
				"EstPartagee": {
					"type": "boolean"
				},
				"Type": {
					"type": "string",
					"minLength": 1
				},
				"PatientPeutRepondre": {
					"type": "boolean"
				},
				"DernierMessage": {
					"type": "string"
				},
				"DernierAuteur": {
					"type": "string"
				}
			}
		},
		"ConversationUtilisateurDto": {
			"type": "object",
			"required": [
				"IdTechPsIdentifie"
			],
			"properties": {
				"IdTechPsIdentifie": {
					"type": "string",
					"minLength": 1
				},
				"Archiver": {
					"type": "boolean"
				},
				"Atraiter": {
					"type": "boolean"
				},
				"Favori": {
					"type": "boolean"
				},
				"EstLu": {
					"type": "boolean"
				},
				"EstActif": {
					"type": "boolean"
				}
			}
		},
		"AddEchangeInConversationPayload": {
			"type": "object",
			"properties": {
				"Files": {
					"type": "array",
					"description": "Fichiers à transmettre en base64",
					"items": {
						"$ref": "#/definitions/FileBase64EncodedExtended"
					}
				},
				"Message": {
					"type": "string",
					"description": "Message de l'échange"
				}
			}
		},
		"FileBase64EncodedExtended": {
			"allOf": [
				{
					"$ref": "#/definitions/FileBase64Encoded"
				},
				{
					"type": "object",
					"required": [
						"IsImage"
					],
					"properties": {
						"IsImage": {
							"type": "boolean"
						}
					}
				}
			]
		},
		"FileBase64Encoded": {
			"allOf": [
				{
					"$ref": "#/definitions/FileMetadata"
				},
				{
					"type": "object",
					"properties": {
						"Content": {
							"type": "string"
						}
					}
				}
			]
		},
		"FileMetadata": {
			"type": "object",
			"required": [
				"MimeType",
				"FileName"
			],
			"properties": {
				"MimeType": {
					"type": "string",
					"minLength": 1
				},
				"FileName": {
					"type": "string",
					"minLength": 1
				}
			}
		},
		"MyHopNotifyPayLoad": {
			"type": "object",
			"properties": {
				"Ippr": {
					"type": "string"
				},
				"CodeSite": {
					"type": "string"
				},
				"Expediteur": {
					"type": "string"
				},
				"Titre": {
					"type": "string"
				},
				"Corps": {
					"type": "string"
				},
				"DateExpiration": {
					"type": "string",
					"format": "date-time"
				}
			}
		},
		"AddMessageToConversationPayload": {
			"type": "object",
			"required": [
				"Message",
				"Finalized",
				"IdTechPsAuteur"
			],
			"properties": {
				"FileToSend": {
					"$ref": "#/definitions/FileBase64Encoded"
				},
				"Message": {
					"type": "string",
					"minLength": 1
				},
				"Finalized": {
					"type": "boolean"
				},
				"IdTechPsAuteur": {
					"type": "string",
					"minLength": 1
				}
			}
		},
		"InfoEchange": {
			"type": "object",
			"required": [
				"IsConvPrivee",
				"EstFavori",
				"EstATraiter"
			],
			"properties": {
				"Destinataires": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/InfoPSDestinataire"
					}
				},
				"DateEnvoi": {
					"type": "string",
					"format": "date-time"
				},
				"IsConvPrivee": {
					"type": "boolean"
				},
				"EstFavori": {
					"type": "boolean"
				},
				"EstATraiter": {
					"type": "boolean"
				}
			}
		},
		"ConversationTypeEnum": {
			"type": "integer",
			"description": "",
			"x-enumNames": [
				"Conversation",
				"Resultat",
				"RendezVous",
				"Courrier",
				"MSS",
				"EchangePatient",
				"MSSPatient",
				"CourrierPatient",
				"DGS",
				"TeleExpertise",
				"DemandeAppui"
			],
			"enum": [
				0,
				1,
				2,
				3,
				4,
				5,
				6,
				7,
				8,
				9,
				10
			]
		},
		"CountByConversationStatus": {
			"type": "object",
			"required": [
				"Tous",
				"EstArchive",
				"EstFavori",
				"EstATraiter"
			],
			"properties": {
				"Tous": {
					"type": "integer"
				},
				"EstArchive": {
					"type": "integer"
				},
				"EstFavori": {
					"type": "integer"
				},
				"EstATraiter": {
					"type": "integer"
				}
			}
		},
		"UpdateConversationsUtilisateurV2": {
			"type": "object",
			"required": [
				"Archiver",
				"MettreALu",
				"Filtres"
			],
			"properties": {
				"Archiver": {
					"type": "boolean"
				},
				"MettreALu": {
					"type": "boolean"
				},
				"Filtres": {
					"$ref": "#/definitions/ConversationFiltre"
				}
			}
		},
		"ConversationFiltre": {
			"type": "object",
			"required": [
				"Types",
				"IdTechPsCibles"
			],
			"properties": {
				"EstArchive": {
					"type": "boolean"
				},
				"EstNonLu": {
					"type": "boolean"
				},
				"EstATraiter": {
					"type": "boolean"
				},
				"EstFavori": {
					"type": "boolean"
				},
				"EstRecuOnly": {
					"type": "boolean"
				},
				"EstEnvoyeOnly": {
					"type": "boolean"
				},
				"Recherche": {
					"type": "string"
				},
				"Types": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ConversationTypeEnum"
					}
				},
				"IdTechPsCibles": {
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			}
		},
		"IPagedResultsOfDocumentTravail": {
			"type": "object",
			"description": "Résultats paginés",
			"x-abstract": true,
			"required": [
				"count",
				"offset",
				"results",
				"total"
			],
			"properties": {
				"count": {
					"type": "integer",
					"description": "Nombre d'éléments paginés renvoyés",
					"format": "int32"
				},
				"offset": {
					"type": "integer",
					"description": "Index du premier élément renvoyé",
					"format": "int32"
				},
				"results": {
					"type": "array",
					"description": "Eléments paginés",
					"items": {
						"$ref": "#/definitions/DocumentTravail"
					}
				},
				"total": {
					"type": "integer",
					"description": "Nombre total d'éléments",
					"format": "int32"
				}
			}
		},
		"DocumentTravail": {
			"allOf": [
				{
					"$ref": "#/definitions/BaseOfDocumentTravailAndDocumentTravail"
				},
				{
					"type": "object",
					"description": "Document de travail (ébauche de document à envoyer)",
					"required": [
						"Auteur",
						"Createur",
						"CreateurConnecte",
						"DateCreation",
						"EstPartage",
						"Id",
						"IdEtablissement",
						"IsCommentaireOnly",
						"IsSupprime",
						"Statut"
					],
					"properties": {
						"Auteur": {
							"description": "Informations relatives à l'auteur du document de travail",
							"allOf": [
								{
									"$ref": "#/definitions/InfoPS2"
								}
							]
						},
						"Commentaire": {
							"type": "string",
							"description": "Commentaire"
						},
						"Contenu": {
							"type": "string",
							"description": "Contenu HTML"
						},
						"Createur": {
							"description": "Informations relatives au créateur identifié du document de travail",
							"allOf": [
								{
									"$ref": "#/definitions/InfoPS2"
								}
							]
						},
						"CreateurConnecte": {
							"description": "Informations relatives au créateur connecté du document de travail",
							"allOf": [
								{
									"$ref": "#/definitions/InfoPS2"
								}
							]
						},
						"Date": {
							"type": "string",
							"description": "Date renseignée",
							"format": "date-time"
						},
						"DateCreation": {
							"type": "string",
							"description": "Date de création\n(renseignée automatiquement lors de la création)",
							"format": "date-time"
						},
						"DateModification": {
							"type": "string",
							"description": "Date de dernière modification\n(renseignée automatiquement lors de chaque mise à jour)",
							"format": "date-time"
						},
						"DatePartage": {
							"type": "string",
							"description": "Date du partage\n(renseignée automatiquement lors du partage)",
							"format": "date-time"
						},
						"DernierModificateur": {
							"description": "Informations relatives au dernier modificateur du document de travail",
							"allOf": [
								{
									"$ref": "#/definitions/InfoPS2"
								}
							]
						},
						"Destinataires": {
							"type": "array",
							"description": "Liste des idenfiants techniques des destinataires",
							"items": {
								"type": "string"
							}
						},
						"EstPartage": {
							"type": "boolean",
							"description": "Est partagé (cas d'un document lié à un dossier patient)"
						},
						"CopiePatient": {
							"type": "boolean",
							"description": "Est partagé (cas d'un document lié à un dossier patient)"
						},
						"Expediteur": {
							"description": "Informations relatives à l'expéditeur du document de travail",
							"allOf": [
								{
									"$ref": "#/definitions/InfoPS2"
								}
							]
						},
						"Id": {
							"type": "number",
							"description": "Identifiant du document de travail\n(renseigné automatiquement lors de la création)",
							"format": "decimal"
						},
						"IdConversation": {
							"type": "integer",
							"description": "Id de la conversation concernée par l'échange",
							"format": "int32"
						},
						"IdDossierPatient": {
							"type": "string",
							"description": "Identifiant régional du dossier patient (IPPR)"
						},
						"IdEtablissement": {
							"type": "number",
							"description": "Id du lieux",
							"format": "decimal"
						},
						"IdFichierTravail": {
							"type": "number",
							"description": "Id du fichier de travail (cas d'un upload de fichier)",
							"format": "decimal"
						},
						"IdLocalDocument": {
							"type": "string",
							"description": "Id local du document\n(renseigné automatiquement lors du partage)"
						},
						"IdModeleDocument": {
							"type": "string",
							"description": "Id du modèle de document"
						},
						"IdPathologie": {
							"type": "number",
							"description": "Id pathologie",
							"format": "decimal"
						},
						"IdPiecePereReponse": {
							"type": "number",
							"description": "Id de la pièce à laquelle on répond",
							"format": "decimal"
						},
						"IdTypePiece": {
							"type": "number",
							"description": "Id type de pièce",
							"format": "decimal"
						},
						"Importance": {
							"type": "string",
							"description": "Sujet de la conversation concernée par l'échange"
						},
						"IsCommentaireOnly": {
							"type": "boolean",
							"description": "Indique s'il s'agit d'une note :\nsi ce champ est à true, le contenu du message doit être\nrenseigné dans le champ Commentaire"
						},
						"IsDocumentFavori": {
							"type": "boolean",
							"description": "Booléen qui indique si le document est favori"
						},
						"IsDocumentSynthese": {
							"type": "boolean",
							"description": "Booléen qui indique si le document est de synthèse"
						},
						"IsSupprime": {
							"type": "boolean",
							"description": "Est supprimé"
						},
						"Libelle": {
							"type": "string",
							"description": "Libellé"
						},
						"LibelleDossierPatient": {
							"type": "string",
							"description": "Libellé du patient (prénom NOM)"
						},
						"NomFichierTravail": {
							"type": "string",
							"description": "Nom du fichier de travail (cas d'un upload de fichier)"
						},
						"Statut": {
							"description": "Statut",
							"allOf": [
								{
									"$ref": "#/definitions/StatutDocumentTravail"
								}
							]
						},
						"SujetConversation": {
							"type": "string",
							"description": "Sujet de la conversation concernée par l'échange"
						}
					}
				}
			]
		},
		"InfoPS2": {
			"allOf": [
				{
					"$ref": "#/definitions/BaseOfInfoPSAndInfosBasePs"
				},
				{
					"type": "object",
					"description": "Informations relative à un professionnel de santé",
					"required": [
						"IdTechnique"
					],
					"properties": {
						"Adeli": {
							"type": "string",
							"description": "Identifiant Adeli"
						},
						"IdCarte": {
							"type": "string",
							"description": "Identifiant de carte CPS"
						},
						"IdProfession": {
							"type": "number",
							"description": "Identifiant technique de la profession",
							"format": "decimal"
						},
						"IdSpecialite": {
							"type": "number",
							"description": "Identifiant technique de la spécialité",
							"format": "decimal"
						},
						"IdTechnique": {
							"type": "string",
							"description": "Identifiant technique du professionel de santé",
							"minLength": 1
						},
						"Civilite": {
							"type": "string",
							"description": "Civilité",
							"example": "Mr."
						},
						"Nom": {
							"type": "string",
							"description": "Nom de famille",
							"example": "DUPONT"
						},
						"NomProfession": {
							"type": "string",
							"description": "Libellé de la profession"
						},
						"NomSpecialite": {
							"type": "string",
							"description": "Libellé de la spécialité"
						},
						"Prenom": {
							"type": "string",
							"description": "Prénom",
							"example": "Jean"
						},
						"Couleur": {
							"type": "string",
							"description": "Code couleur (hexadécimal) correspondant à la spécialité"
						},
						"Email": {
							"type": "string",
							"description": "Adresse email"
						},
						"Rpps": {
							"type": "string",
							"description": "Identifiant Rpps"
						}
					}
				}
			]
		},
		"BaseOfInfoPSAndInfosBasePs": {
			"type": "object",
			"description": "Classe de base des objets du modèle",
			"x-abstract": true
		},
		"StatutDocumentTravail": {
			"type": "integer",
			"description": "Enumération des différents états possibles d'un document de travail",
			"x-enumNames": [
				"Brouillon",
				"PreparationEnvoi",
				"EnvoiEnCours",
				"EnvoiEchoue"
			],
			"enum": [
				0,
				1,
				2,
				3
			]
		},
		"BaseOfDocumentTravailAndDocumentTravail": {
			"type": "object",
			"description": "Classe de base des objets du modèle",
			"x-abstract": true
		},
		"DocumentTravail2": {
			"type": "object",
			"required": [
				"Id",
				"EstPartage",
				"IdEtablissement",
				"Statut",
				"IsCommentaireOnly",
				"DateCreation",
				"CopiePatient",
				"IsSupprime",
				"MessageId"
			],
			"properties": {
				"Id": {
					"type": "number",
					"format": "decimal"
				},
				"IdLocalDocument": {
					"type": "string"
				},
				"IdDossierPatient": {
					"type": "string"
				},
				"Ins": {
					"$ref": "#/definitions/Ins"
				},
				"LibelleDossierPatient": {
					"type": "string"
				},
				"EstPartage": {
					"type": "boolean"
				},
				"IdEtablissement": {
					"type": "number",
					"format": "decimal"
				},
				"Createur": {
					"$ref": "#/definitions/InfosBasePs"
				},
				"CreateurConnecte": {
					"$ref": "#/definitions/InfosBasePs"
				},
				"Expediteur": {
					"$ref": "#/definitions/InfosBasePs"
				},
				"DernierModificateur": {
					"$ref": "#/definitions/InfosBasePs"
				},
				"Auteur": {
					"$ref": "#/definitions/InfosBasePs"
				},
				"IdPathologie": {
					"type": "number",
					"format": "decimal"
				},
				"Libelle": {
					"type": "string"
				},
				"Date": {
					"type": "string",
					"format": "date-time"
				},
				"Commentaire": {
					"type": "string"
				},
				"IdConversation": {
					"type": "integer",
					"format": "int32"
				},
				"SujetConversation": {
					"type": "string"
				},
				"Importance": {
					"type": "string"
				},
				"IsDocumentFavori": {
					"type": "boolean"
				},
				"IsDocumentSynthese": {
					"type": "boolean"
				},
				"IdModeleDocument": {
					"type": "string"
				},
				"Statut": {
					"$ref": "#/definitions/StatutDocumentTravailEnum"
				},
				"IsCommentaireOnly": {
					"type": "boolean"
				},
				"DateCreation": {
					"type": "string",
					"format": "date-time"
				},
				"DateModification": {
					"type": "string",
					"format": "date-time"
				},
				"DatePartage": {
					"type": "string",
					"format": "date-time"
				},
				"Destinataires": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"DestinatairesMSS": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"CopiePatient": {
					"type": "boolean"
				},
				"IsSupprime": {
					"type": "boolean"
				},
				"FichiersTravail": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/FichierTravail"
					}
				},
				"MessageId": {
					"type": "integer",
					"format": "int32"
				},
				"IdTypeFormulaireHybrid": {
					"type": "integer",
					"format": "int32"
				},
				"IdFicheHybrid": {
					"type": "integer",
					"format": "int32"
				},
				"IsFormulaire": {
					"type": "boolean"
				},
				"IdAction": {
					"type": "integer",
					"format": "int32"
				},
				"TypeConversation": {
					"type": "string"
				},
				"IdTypePiece": {
					"type": "number",
					"format": "decimal"
				},
				"Contenu": {
					"type": "string"
				},
				"NomFichierTravail": {
					"type": "string"
				},
				"PartageDMP": {
					"type": "boolean"
				},
				"PartageMSC": {
					"type": "boolean"
				}
			}
		},
		"Ins": {
			"type": "object",
			"properties": {
				"Matricule": {
					"type": "string"
				},
				"OID": {
					"type": "string"
				}
			}
		},
		"InfosBasePs": {
			"type": "object",
			"properties": {
				"IdTechnique": {
					"type": "string"
				},
				"Civilite": {
					"type": "string"
				},
				"Nom": {
					"type": "string"
				},
				"Prenom": {
					"type": "string"
				},
				"IdSpecialite": {
					"type": "number",
					"format": "decimal"
				},
				"IdProfession": {
					"type": "number",
					"format": "decimal"
				}
			}
		},
		"StatutDocumentTravailEnum": {
			"type": "integer",
			"description": "",
			"x-enumNames": [
				"Brouillon",
				"PreparationEnvoi",
				"EnvoiEnCours",
				"EnvoiEchoue"
			],
			"enum": [
				0,
				1,
				2,
				3
			]
		},
		"FichierTravail": {
			"type": "object",
			"required": [
				"Id",
				"IdDocumentTravail"
			],
			"properties": {
				"Id": {
					"type": "number",
					"format": "decimal"
				},
				"ContenuFichierTravail": {
					"type": "string",
					"format": "byte"
				},
				"MimeType": {
					"type": "string"
				},
				"IdDocumentTravail": {
					"type": "number",
					"format": "decimal"
				},
				"NomFichierTravail": {
					"type": "string"
				},
				"IdLocalDocument": {
					"type": "string"
				},
				"IdTypePiece": {
					"type": "number",
					"format": "decimal"
				},
				"MessageId": {
					"type": "integer",
					"format": "int32"
				},
				"PartId": {
					"type": "integer",
					"format": "int32"
				},
				"IdEts": {
					"type": "number",
					"format": "decimal"
				},
				"Date": {
					"type": "string",
					"format": "date-time"
				}
			}
		},
		"DocumentTravailSendResult": {
			"allOf": [
				{
					"$ref": "#/definitions/BaseOfDocumentTravailSendResultAndDocumentTravailSendResult"
				},
				{
					"type": "object",
					"description": "Résultat de l'envoi d'un document de travail",
					"required": [
						"Success"
					],
					"properties": {
						"IdEchange": {
							"type": "integer",
							"description": "Identifiant de l'échange créé",
							"format": "int32"
						},
						"IdConversation": {
							"type": "integer",
							"description": "Identifiant de la conversation créé ou rapprochée",
							"format": "int32"
						},
						"Success": {
							"type": "boolean",
							"description": "Vrai si l'échange a été créé et envoyé correctement"
						}
					}
				}
			]
		},
		"BaseOfDocumentTravailSendResultAndDocumentTravailSendResult": {
			"type": "object",
			"description": "Classe de base des objets du modèle",
			"x-abstract": true
		},
		"SendDemandeAvisRequest": {
			"type": "object",
			"required": [
				"IdTechPsExpert",
				"ModeEquipeRessource",
				"StatutDansAnnuaire"
			],
			"properties": {
				"IdTechPsExpert": {
					"type": "string",
					"minLength": 1
				},
				"IdTechPsIdentifie": {
					"type": "string"
				},
				"ModeEquipeRessource": {
					"type": "boolean"
				},
				"StatutDansAnnuaire": {
					"type": "boolean"
				},
				"EchangeBullePrerequis": {
					"type": "string"
				}
			}
		},
		"ReponseInfos": {
			"type": "object",
			"required": [
				"DateDoc",
				"IdDocumentTravail"
			],
			"properties": {
				"IdTechPsAuteur": {
					"type": "string"
				},
				"IdLocalDoc": {
					"type": "string"
				},
				"IdEts": {
					"type": "integer",
					"format": "int32"
				},
				"IdPiece": {
					"type": "number",
					"format": "decimal"
				},
				"LibelleDoc": {
					"type": "string"
				},
				"DateDoc": {
					"type": "string",
					"format": "date-time"
				},
				"Ippr": {
					"type": "integer",
					"format": "int32"
				},
				"PatientLibelle": {
					"type": "string"
				},
				"IdDocumentTravail": {
					"type": "number",
					"format": "decimal"
				}
			}
		},
		"TypePiece": {
			"type": "object",
			"required": [
				"Id",
				"IsUrgence",
				"IsSynthese",
				"IsSupprime"
			],
			"properties": {
				"Id": {
					"type": "number",
					"format": "decimal"
				},
				"IdCategorie": {
					"type": "integer",
					"format": "int32"
				},
				"Nom": {
					"type": "string"
				},
				"NomCourt": {
					"type": "string"
				},
				"IsUrgence": {
					"type": "boolean"
				},
				"IsSynthese": {
					"type": "boolean"
				},
				"Commentaire": {
					"type": "string"
				},
				"NumOrdre": {
					"type": "number",
					"format": "decimal"
				},
				"IdPere": {
					"type": "number",
					"format": "decimal"
				},
				"VisibleMenu": {
					"type": "string"
				},
				"UrlAction": {
					"type": "string"
				},
				"IsSupprime": {
					"type": "boolean"
				}
			}
		},
		"CPAM": {
			"type": "object",
			"required": [
				"Id"
			],
			"properties": {
				"Id": {
					"type": "integer",
					"format": "int32"
				},
				"CodeCPAM": {
					"type": "string"
				},
				"LibelleCPAM": {
					"type": "string"
				},
				"RegionCPAM": {
					"type": "string"
				}
			}
		},
		"CategorieTypePiece": {
			"type": "object",
			"required": [
				"Id"
			],
			"properties": {
				"Id": {
					"type": "number",
					"format": "decimal"
				},
				"Libelle": {
					"type": "string"
				}
			}
		},
		"TypeIntervention": {
			"type": "object",
			"required": [
				"Id",
				"IdCategorieIntervention"
			],
			"properties": {
				"Id": {
					"type": "number",
					"format": "decimal"
				},
				"Libelle": {
					"type": "string"
				},
				"Norme": {
					"type": "string"
				},
				"IdCategorieIntervention": {
					"type": "integer",
					"format": "int32"
				}
			}
		},
		"CategorieIntervention": {
			"type": "object",
			"required": [
				"Id"
			],
			"properties": {
				"Id": {
					"type": "integer",
					"format": "int32"
				},
				"Libelle": {
					"type": "string"
				}
			}
		},
		"StatutActeur": {
			"type": "object",
			"required": [
				"Id"
			],
			"properties": {
				"Id": {
					"type": "integer",
					"format": "int32"
				},
				"Libelle": {
					"type": "string"
				}
			}
		},
		"Planification": {
			"type": "object",
			"required": [
				"Id",
				"Ordre"
			],
			"properties": {
				"Id": {
					"type": "integer",
					"format": "int32"
				},
				"Periodicite": {
					"type": "string"
				},
				"Libelle": {
					"type": "string"
				},
				"Ordre": {
					"type": "integer",
					"format": "int32"
				}
			}
		},
		"Pathologie": {
			"type": "object",
			"required": [
				"Id"
			],
			"properties": {
				"Id": {
					"type": "number",
					"format": "decimal"
				},
				"Nom": {
					"type": "string"
				},
				"Commentaire": {
					"type": "string"
				},
				"Code": {
					"type": "string"
				}
			}
		},
		"ModaliteExercice": {
			"type": "object",
			"required": [
				"DateCreation"
			],
			"properties": {
				"Code": {
					"type": "string"
				},
				"Libelle": {
					"type": "string"
				},
				"DateCreation": {
					"type": "string",
					"format": "date-time"
				},
				"DateModification": {
					"type": "string",
					"format": "date-time"
				},
				"SystemeCodage": {
					"type": "string"
				}
			}
		},
		"CadreExercice": {
			"type": "object",
			"properties": {
				"Code": {
					"type": "string"
				},
				"Libelle": {
					"type": "string"
				},
				"SystemeCodage": {
					"type": "string"
				}
			}
		},
		"Profession": {
			"type": "object",
			"required": [
				"EstMorale",
				"IdProfession",
				"ProNiveauHabilitation"
			],
			"properties": {
				"EstMorale": {
					"type": "boolean"
				},
				"IdProfession": {
					"type": "number",
					"format": "decimal"
				},
				"NomProfession": {
					"type": "string"
				},
				"CodeXDS": {
					"type": "string"
				},
				"Ordre": {
					"type": "integer",
					"format": "int32"
				},
				"ProNiveauHabilitation": {
					"type": "integer",
					"format": "int32"
				}
			}
		},
		"Specialite": {
			"type": "object",
			"required": [
				"IdSpecialite",
				"IdProfession",
				"CodeSpecialite",
				"EstPremierRecours"
			],
			"properties": {
				"IdSpecialite": {
					"type": "number",
					"format": "decimal"
				},
				"IdGroupeSpecialite": {
					"type": "number",
					"format": "decimal"
				},
				"IdProfession": {
					"type": "number",
					"format": "decimal"
				},
				"CodeSpecialite": {
					"type": "number",
					"format": "decimal"
				},
				"Couleur": {
					"type": "string"
				},
				"NomSpecialite": {
					"type": "string"
				},
				"CodeXDS": {
					"type": "string"
				},
				"Ordre": {
					"type": "integer",
					"format": "int32"
				},
				"EstPremierRecours": {
					"type": "boolean"
				}
			}
		},
		"Etiquette": {
			"type": "object",
			"required": [
				"Id",
				"DateCreation",
				"DateModification",
				"NbPatientConcerne"
			],
			"properties": {
				"Id": {
					"type": "integer",
					"format": "int32"
				},
				"Libelle": {
					"type": "string"
				},
				"DateCreation": {
					"type": "string",
					"format": "date-time"
				},
				"DateModification": {
					"type": "string",
					"format": "date-time"
				},
				"LoginUtilisateur": {
					"type": "string"
				},
				"NbPatientConcerne": {
					"type": "integer",
					"format": "int32"
				}
			}
		},
		"CoordonneesGPS": {
			"type": "object",
			"required": [
				"Latitude",
				"Longitude"
			],
			"properties": {
				"IdTechPs": {
					"type": "string"
				},
				"Latitude": {
					"type": "number",
					"format": "double"
				},
				"Longitude": {
					"type": "number",
					"format": "double"
				}
			}
		},
		"GetCoordonneesGPSByIdTechPsRequest": {
			"type": "object",
			"description": "Model object for GetCoordonneesGPSByIdTechPs method",
			"properties": {
				"IdsTechPs": {
					"type": "array",
					"description": "List of techPs ids",
					"items": {
						"type": "string"
					}
				}
			}
		},
		"ActionUtilisateur": {
			"type": "object",
			"required": [
				"DateEvenement"
			],
			"properties": {
				"CodeTypeEvenement": {
					"type": "string"
				},
				"DateEvenement": {
					"type": "string",
					"format": "date-time"
				},
				"Ippr": {
					"type": "string"
				},
				"PatientNomPrenom": {
					"type": "string"
				},
				"IdPiece": {
					"type": "number",
					"format": "decimal"
				},
				"Commentaire": {
					"type": "string"
				},
				"IdTechPSConnecte": {
					"type": "string"
				},
				"IdTechPSIdentifie": {
					"type": "string"
				},
				"NomUtilisateur": {
					"type": "string"
				},
				"IdProvenance": {
					"type": "number",
					"format": "decimal"
				},
				"TypeProvenance": {
					"type": "string"
				},
				"IdIntervention": {
					"type": "integer",
					"format": "int32"
				},
				"IdActeurConcerne": {
					"type": "integer",
					"format": "int32"
				},
				"IdTechPSCible": {
					"type": "string"
				},
				"Idformulaire": {
					"type": "integer",
					"format": "int32"
				},
				"IdEchange": {
					"type": "integer",
					"format": "int32"
				},
				"IdEvenementPlanning": {
					"type": "integer",
					"format": "int32"
				},
				"IdProgramme": {
					"type": "integer",
					"format": "int32"
				},
				"TypeProgramme": {
					"type": "string"
				},
				"SecurityToken": {
					"type": "string"
				},
				"IdAction": {
					"type": "integer",
					"format": "int32"
				},
				"DestinatairesIdGipCps": {
					"type": "string"
				}
			}
		},
		"UtilisateurActeurLight": {
			"type": "object",
			"description": "Description d'un utilisateur/acteur réduit",
			"required": [
				"HabilitationDossierPatient"
			],
			"properties": {
				"IdTechPS": {
					"type": "string",
					"description": "Identifiant technique de l'utilisateur"
				},
				"Civilite": {
					"type": "string",
					"description": "Civilité de l'utilisateur"
				},
				"NomNaissance": {
					"type": "string",
					"description": "Nom de naissance de l'utilisateur"
				},
				"NomUsuel": {
					"type": "string",
					"description": "Nom d'usage de l'utilisateur"
				},
				"Prenom": {
					"type": "string",
					"description": "Prénom de l'utilisateur"
				},
				"CodePostal": {
					"type": "string",
					"description": "Code postal de résidence de l'utilisateur"
				},
				"Ville": {
					"type": "string",
					"description": "Ville de résidence de l'utilisateur"
				},
				"NomSpecialite": {
					"type": "string",
					"description": "Nom de la spécialité de l'utilisateur"
				},
				"NomsEtablissements": {
					"type": "array",
					"description": "Nom des établissements de l'utilisateur",
					"items": {
						"type": "string"
					}
				},
				"Ippr": {
					"type": "string",
					"description": "Identifiant régional du patient"
				},
				"isActeurDossier": {
					"type": "boolean",
					"description": "L'utilisateur est-il acteur du dossier patient d'Ippr"
				},
				"HabilitationDossierPatient": {
					"description": "L'utilisateur est-il acteur du dossier patient d'Ippr",
					"allOf": [
						{
							"$ref": "#/definitions/HabilitationDossierPatient"
						}
					]
				}
			}
		},
		"HabilitationDossierPatient": {
			"type": "integer",
			"description": "",
			"x-enumNames": [
				"HabiliteComplet",
				"HabiliteLimite",
				"HabiliteSynthese",
				"NonHabilitable",
				"Desactivee",
				"Proscrit",
				"NonHabilite"
			],
			"enum": [
				0,
				1,
				2,
				3,
				4,
				5,
				6
			]
		},
		"SearchRequestModel": {
			"type": "object",
			"required": [
				"maxResults"
			],
			"properties": {
				"nomsPrenom": {
					"type": "string"
				},
				"maxResults": {
					"type": "integer",
					"format": "int32"
				},
				"idsTechAexclure": {
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			}
		},
		"UtilisateurExtended": {
			"type": "object",
			"description": "Description d'un utilisateur enrichi",
			"required": [
				"IdTechPS",
				"Civilite",
				"NomNaissance",
				"NomUsuel",
				"Prenom",
				"EstMorale",
				"ZeroPapier"
			],
			"properties": {
				"IdTechPS": {
					"type": "string",
					"description": "IdTechPS",
					"minLength": 1
				},
				"Rpps": {
					"type": "string",
					"description": "Rpps"
				},
				"Adeli": {
					"type": "string",
					"description": "Adeli"
				},
				"Civilite": {
					"type": "string",
					"description": "Civilite",
					"minLength": 1
				},
				"NomNaissance": {
					"type": "string",
					"description": "NomNaissance",
					"minLength": 1
				},
				"NomUsuel": {
					"type": "string",
					"description": "NomUsuel",
					"minLength": 1
				},
				"Prenom": {
					"type": "string",
					"description": "Prenom",
					"minLength": 1
				},
				"CodePostal": {
					"type": "string",
					"description": "CodePostal"
				},
				"Ville": {
					"type": "string",
					"description": "Ville"
				},
				"EstMorale": {
					"type": "boolean",
					"description": "Si le PS est une personne morale"
				},
				"Adresse": {
					"type": "string",
					"description": "Adresse"
				},
				"Email": {
					"type": "string",
					"description": "Email"
				},
				"TelephoneMobile": {
					"type": "string",
					"description": "TelephoneMobile"
				},
				"TelephoneFixe": {
					"type": "string",
					"description": "TelephoneFixe"
				},
				"TelephoneSecretariat": {
					"type": "string",
					"description": "TelephoneSecretariat"
				},
				"IdSpecialite": {
					"type": "number",
					"description": "Specialite",
					"format": "decimal"
				},
				"SpecialiteNom": {
					"type": "string",
					"description": "Specialite"
				},
				"Etablissements": {
					"type": "array",
					"description": "Liste Etablissements",
					"items": {
						"$ref": "#/definitions/EtablissementLight"
					}
				},
				"ZeroPapier": {
					"type": "boolean",
					"description": "ZeroPapier"
				}
			}
		},
		"EtablissementLight": {
			"type": "object",
			"required": [
				"Id"
			],
			"properties": {
				"Id": {
					"type": "number",
					"format": "decimal"
				},
				"Nom": {
					"type": "string"
				}
			}
		},
		"Utilisateur": {
			"type": "object",
			"required": [
				"IdTechPs",
				"NomUsuel",
				"Prenom",
				"GestionnaireHabilitation",
				"AccesBrisGlace",
				"EstAdministrateur",
				"EstGestionnaireEquipe",
				"EnvoiMailInactif",
				"AdministrateurFonctionnelAlias",
				"AdministrateurTechniqueAlias",
				"ZeroPapier",
				"Actif",
				"DateCreation",
				"EstMorale",
				"TypeUtilisateur",
				"EstHotliner",
				"HasEmail",
				"HasTelephoneFixe",
				"EstGestionnairePreference"
			],
			"properties": {
				"IdTechPs": {
					"type": "string",
					"minLength": 1
				},
				"IdCarte": {
					"type": "string"
				},
				"Rpps": {
					"type": "string"
				},
				"Adeli": {
					"type": "string"
				},
				"Civilite": {
					"type": "string"
				},
				"NomNaissance": {
					"type": "string"
				},
				"NomUsuel": {
					"type": "string",
					"minLength": 1
				},
				"Prenom": {
					"type": "string",
					"minLength": 1
				},
				"CodePostal": {
					"type": "string"
				},
				"Ville": {
					"type": "string"
				},
				"Adresse": {
					"type": "string"
				},
				"Email": {
					"type": "string"
				},
				"TelephoneMobile": {
					"type": "string"
				},
				"GestionnaireHabilitation": {
					"type": "boolean"
				},
				"AccesBrisGlace": {
					"type": "boolean"
				},
				"Specialite": {
					"$ref": "#/definitions/Specialite"
				},
				"Profession": {
					"$ref": "#/definitions/Profession"
				},
				"Etablissements": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Etablissement"
					}
				},
				"EstAdministrateur": {
					"type": "boolean"
				},
				"EstGestionnaireEquipe": {
					"type": "boolean"
				},
				"EnvoiMailInactif": {
					"type": "boolean"
				},
				"AdministrateurFonctionnelAlias": {
					"type": "boolean"
				},
				"AdministrateurTechniqueAlias": {
					"type": "boolean"
				},
				"TypeEcranDossier": {
					"type": "string"
				},
				"ZeroPapier": {
					"type": "boolean"
				},
				"Actif": {
					"type": "boolean"
				},
				"DateCreation": {
					"type": "string",
					"format": "date-time"
				},
				"DateModification": {
					"type": "string",
					"format": "date-time"
				},
				"EstMorale": {
					"type": "boolean"
				},
				"TypeUtilisateur": {
					"$ref": "#/definitions/TypeUtilisateur"
				},
				"EstHotliner": {
					"type": "boolean"
				},
				"TelephoneFixe": {
					"type": "string"
				},
				"TelephoneSecretariat": {
					"type": "string"
				},
				"PartageAdressePostale": {
					"type": "boolean"
				},
				"PartageAdresseEmail": {
					"type": "boolean"
				},
				"PartageTelephoneFixe": {
					"type": "boolean"
				},
				"PartageTelephoneMobile": {
					"type": "boolean"
				},
				"PartageTelephoneSecretariat": {
					"type": "boolean"
				},
				"HasAdressePostale": {
					"type": "boolean"
				},
				"HasEmail": {
					"type": "boolean"
				},
				"HasTelephoneFixe": {
					"type": "boolean"
				},
				"HasTelephoneMobile": {
					"type": "boolean"
				},
				"HasTelephoneSecretariat": {
					"type": "boolean"
				},
				"MailMss": {
					"type": "string"
				},
				"EstGestionnairePreference": {
					"type": "boolean"
				}
			}
		},
		"TypeUtilisateur": {
			"type": "integer",
			"description": "",
			"x-enumNames": [
				"PS",
				"US"
			],
			"enum": [
				0,
				1
			]
		},
		"UtilisateurVisionneuse": {
			"type": "object",
			"required": [
				"IdTechPs",
				"Civilite",
				"NomUsuel",
				"Prenom"
			],
			"properties": {
				"IdTechPs": {
					"type": "string",
					"minLength": 1
				},
				"IdCarte": {
					"type": "string"
				},
				"Rpps": {
					"type": "string"
				},
				"Adeli": {
					"type": "string"
				},
				"Civilite": {
					"type": "string",
					"minLength": 1
				},
				"NomUsuel": {
					"type": "string",
					"minLength": 1
				},
				"Prenom": {
					"type": "string",
					"minLength": 1
				}
			}
		},
		"PatientFileActive": {
			"type": "object",
			"required": [
				"IdActeurPatient",
				"IdSpecialiteActeur",
				"IdStatutActeur",
				"DelaiRecurrenceJour",
				"DateCreation",
				"Supprime"
			],
			"properties": {
				"Ippr": {
					"type": "string"
				},
				"NomNaissance": {
					"type": "string"
				},
				"NomUsuel": {
					"type": "string"
				},
				"Prenom": {
					"type": "string"
				},
				"PrenomUsuel": {
					"type": "string"
				},
				"CodeSexe": {
					"type": "string"
				},
				"CommentairePatient": {
					"type": "string"
				},
				"DateNaissance": {
					"type": "string",
					"format": "date-time"
				},
				"IdActeurPatient": {
					"type": "number",
					"format": "decimal"
				},
				"IdSpecialiteActeur": {
					"type": "integer",
					"format": "int32"
				},
				"IdStatutActeur": {
					"type": "integer",
					"format": "int32"
				},
				"DateDernierSuivi": {
					"type": "string",
					"format": "date-time"
				},
				"DelaiRecurrenceJour": {
					"type": "integer",
					"format": "int32"
				},
				"DateCreation": {
					"type": "string",
					"format": "date-time"
				},
				"DateDerniereActivite": {
					"type": "string",
					"format": "date-time"
				},
				"Supprime": {
					"type": "boolean"
				}
			}
		},
		"HabilitationsActusPatient": {
			"allOf": [
				{
					"$ref": "#/definitions/HabilitationDossierComplete"
				},
				{
					"type": "object",
					"properties": {
						"HabilitationsByCodeActus": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/HabilitationActualitePatient"
							}
						}
					}
				}
			]
		},
		"HabilitationActualitePatient": {
			"type": "object",
			"properties": {
				"CodeActualite": {
					"type": "string"
				},
				"DateLimite": {
					"type": "string",
					"format": "date-time"
				}
			}
		},
		"HabilitationDossierComplete": {
			"type": "object",
			"required": [
				"StatutHabiliteDossier",
				"StatutHabiliteDossierV2",
				"IsGestionnaireHabilitations"
			],
			"properties": {
				"StatutHabiliteDossier": {
					"$ref": "#/definitions/HabiliteDossierEnum"
				},
				"StatutHabiliteDossierV2": {
					"$ref": "#/definitions/HabilitationDossierPatient"
				},
				"DateDebutHabilitation": {
					"type": "string",
					"format": "date-time"
				},
				"DateFinHabilitation": {
					"type": "string",
					"format": "date-time"
				},
				"IsGestionnaireHabilitations": {
					"type": "boolean"
				}
			}
		},
		"HabiliteDossierEnum": {
			"type": "integer",
			"description": "",
			"x-enumNames": [
				"Non",
				"Oui",
				"Proscrit",
				"NonApplicable",
				"OuiViaPasseDroit"
			],
			"enum": [
				0,
				1,
				2,
				3,
				4
			]
		},
		"ProvideAndRegisterDocumentSetRequestType": {
			"type": "object",
			"properties": {
				"SubmitObjectsRequest": {
					"$ref": "#/definitions/SubmitObjectsRequest"
				},
				"Document": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ProvideAndRegisterDocumentSetRequestTypeDocument"
					}
				}
			}
		},
		"SubmitObjectsRequest": {
			"allOf": [
				{
					"$ref": "#/definitions/RegistryRequestType"
				},
				{
					"type": "object",
					"properties": {
						"RegistryObjectList": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/IdentifiableType"
							}
						}
					}
				}
			]
		},
		"IdentifiableType": {
			"type": "object",
			"properties": {
				"Slot": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SlotType1"
					}
				},
				"id": {
					"type": "string"
				},
				"home": {
					"type": "string"
				}
			}
		},
		"SlotType1": {
			"type": "object",
			"properties": {
				"ValueList": {
					"$ref": "#/definitions/ValueListType"
				},
				"name": {
					"type": "string"
				},
				"slotType": {
					"type": "string"
				}
			}
		},
		"ValueListType": {
			"type": "object",
			"properties": {
				"Value": {
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			}
		},
		"RegistryRequestType": {
			"type": "object",
			"properties": {
				"RequestSlotList": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SlotType1"
					}
				},
				"id": {
					"type": "string"
				},
				"comment": {
					"type": "string"
				}
			}
		},
		"ProvideAndRegisterDocumentSetRequestTypeDocument": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"Value": {
					"type": "string",
					"format": "byte"
				}
			}
		},
		"POCD_MT000040ClinicalDocument": {
			"type": "object",
			"required": [
				"classCode",
				"classCodeSpecified"
			],
			"properties": {
				"realmCode": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CS"
					}
				},
				"typeId": {
					"$ref": "#/definitions/POCD_MT000040InfrastructureRoottypeId"
				},
				"templateId": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/II"
					}
				},
				"id": {
					"$ref": "#/definitions/II"
				},
				"code": {
					"$ref": "#/definitions/CE"
				},
				"title": {
					"$ref": "#/definitions/ST"
				},
				"effectiveTime": {
					"$ref": "#/definitions/TS"
				},
				"confidentialityCode": {
					"$ref": "#/definitions/CE"
				},
				"languageCode": {
					"$ref": "#/definitions/CS"
				},
				"setId": {
					"$ref": "#/definitions/II"
				},
				"versionNumber": {
					"$ref": "#/definitions/INT"
				},
				"copyTime": {
					"$ref": "#/definitions/TS"
				},
				"recordTarget": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/POCD_MT000040RecordTarget"
					}
				},
				"author": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/POCD_MT000040Author"
					}
				},
				"dataEnterer": {
					"$ref": "#/definitions/POCD_MT000040DataEnterer"
				},
				"informant": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/POCD_MT000040Informant12"
					}
				},
				"custodian": {
					"$ref": "#/definitions/POCD_MT000040Custodian"
				},
				"informationRecipient": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/POCD_MT000040InformationRecipient"
					}
				},
				"legalAuthenticator": {
					"$ref": "#/definitions/POCD_MT000040LegalAuthenticator"
				},
				"authenticator": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/POCD_MT000040Authenticator"
					}
				},
				"participant": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/POCD_MT000040Participant1"
					}
				},
				"inFulfillmentOf": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/POCD_MT000040InFulfillmentOf"
					}
				},
				"documentationOf": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/POCD_MT000040DocumentationOf"
					}
				},
				"relatedDocument": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/POCD_MT000040RelatedDocument"
					}
				},
				"authorization": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/POCD_MT000040Authorization"
					}
				},
				"componentOf": {
					"$ref": "#/definitions/POCD_MT000040Component1"
				},
				"component": {
					"$ref": "#/definitions/POCD_MT000040Component2"
				},
				"nullFlavor": {
					"type": "string"
				},
				"classCode": {
					"$ref": "#/definitions/ActClinicalDocument"
				},
				"classCodeSpecified": {
					"type": "boolean"
				},
				"moodCode": {
					"type": "string"
				}
			}
		},
		"CS": {
			"allOf": [
				{
					"$ref": "#/definitions/CV"
				},
				{
					"type": "object"
				}
			]
		},
		"CV": {
			"allOf": [
				{
					"$ref": "#/definitions/CE"
				},
				{
					"type": "object"
				}
			]
		},
		"CE": {
			"allOf": [
				{
					"$ref": "#/definitions/CD"
				},
				{
					"type": "object"
				}
			]
		},
		"CD": {
			"allOf": [
				{
					"$ref": "#/definitions/ANY"
				},
				{
					"type": "object",
					"properties": {
						"originalText": {
							"$ref": "#/definitions/ED"
						},
						"qualifier": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/CR"
							}
						},
						"translation": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/CD"
							}
						},
						"code": {
							"type": "string"
						},
						"codeSystem": {
							"type": "string"
						},
						"codeSystemName": {
							"type": "string"
						},
						"codeSystemVersion": {
							"type": "string"
						},
						"displayName": {
							"type": "string"
						}
					}
				}
			]
		},
		"ED": {
			"allOf": [
				{
					"$ref": "#/definitions/BIN"
				},
				{
					"type": "object",
					"required": [
						"compression",
						"compressionSpecified",
						"integrityCheckAlgorithm"
					],
					"properties": {
						"reference": {
							"$ref": "#/definitions/TEL"
						},
						"thumbnail": {
							"$ref": "#/definitions/Thumbnail"
						},
						"mediaType": {
							"type": "string",
							"default": "text/plain"
						},
						"language": {
							"type": "string"
						},
						"compression": {
							"$ref": "#/definitions/CompressionAlgorithm"
						},
						"compressionSpecified": {
							"type": "boolean"
						},
						"integrityCheck": {
							"type": "string",
							"format": "byte"
						},
						"integrityCheckAlgorithm": {
							"default": 0,
							"allOf": [
								{
									"$ref": "#/definitions/IntegrityCheckAlgorithm"
								}
							]
						}
					}
				}
			]
		},
		"TEL": {
			"allOf": [
				{
					"$ref": "#/definitions/URL"
				},
				{
					"type": "object",
					"properties": {
						"useablePeriod": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/SXCM_TS"
							}
						},
						"use": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				}
			]
		},
		"SXCM_TS": {
			"allOf": [
				{
					"$ref": "#/definitions/TS"
				},
				{
					"type": "object",
					"required": [
						"operator"
					],
					"properties": {
						"operator": {
							"default": 3,
							"allOf": [
								{
									"$ref": "#/definitions/SetOperator"
								}
							]
						}
					}
				}
			]
		},
		"SetOperator": {
			"type": "integer",
			"description": "",
			"x-enumNames": [
				"A",
				"E",
				"H",
				"I",
				"P"
			],
			"enum": [
				0,
				1,
				2,
				3,
				4
			]
		},
		"TS": {
			"allOf": [
				{
					"$ref": "#/definitions/QTY"
				},
				{
					"type": "object",
					"properties": {
						"value": {
							"type": "string"
						}
					}
				}
			]
		},
		"QTY": {
			"allOf": [
				{
					"$ref": "#/definitions/ANY"
				},
				{
					"type": "object",
					"x-abstract": true
				}
			]
		},
		"ANY": {
			"type": "object",
			"x-abstract": true,
			"properties": {
				"nullFlavor": {
					"type": "string"
				}
			}
		},
		"URL": {
			"allOf": [
				{
					"$ref": "#/definitions/ANY"
				},
				{
					"type": "object",
					"x-abstract": true,
					"properties": {
						"value": {
							"type": "string"
						}
					}
				}
			]
		},
		"Thumbnail": {
			"allOf": [
				{
					"$ref": "#/definitions/ED"
				},
				{
					"type": "object"
				}
			]
		},
		"CompressionAlgorithm": {
			"type": "integer",
			"description": "",
			"x-enumNames": [
				"DF",
				"GZ",
				"Z",
				"ZL"
			],
			"enum": [
				0,
				1,
				2,
				3
			]
		},
		"IntegrityCheckAlgorithm": {
			"type": "integer",
			"description": "",
			"x-enumNames": [
				"SHA1",
				"SHA256"
			],
			"enum": [
				0,
				1
			]
		},
		"BIN": {
			"allOf": [
				{
					"$ref": "#/definitions/ANY"
				},
				{
					"type": "object",
					"x-abstract": true,
					"required": [
						"representation"
					],
					"properties": {
						"representation": {
							"default": 1,
							"allOf": [
								{
									"$ref": "#/definitions/BinaryDataEncoding"
								}
							]
						},
						"Text": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				}
			]
		},
		"BinaryDataEncoding": {
			"type": "integer",
			"description": "",
			"x-enumNames": [
				"B64",
				"TXT"
			],
			"enum": [
				0,
				1
			]
		},
		"CR": {
			"allOf": [
				{
					"$ref": "#/definitions/ANY"
				},
				{
					"type": "object",
					"required": [
						"inverted"
					],
					"properties": {
						"name": {
							"$ref": "#/definitions/CV"
						},
						"value": {
							"$ref": "#/definitions/CD"
						},
						"inverted": {
							"type": "boolean",
							"default": false
						}
					}
				}
			]
		},
		"POCD_MT000040InfrastructureRoottypeId": {
			"allOf": [
				{
					"$ref": "#/definitions/II"
				},
				{
					"type": "object"
				}
			]
		},
		"II": {
			"allOf": [
				{
					"$ref": "#/definitions/ANY"
				},
				{
					"type": "object",
					"required": [
						"displayable",
						"displayableSpecified"
					],
					"properties": {
						"root": {
							"type": "string"
						},
						"extension": {
							"type": "string"
						},
						"assigningAuthorityName": {
							"type": "string"
						},
						"displayable": {
							"type": "boolean"
						},
						"displayableSpecified": {
							"type": "boolean"
						}
					}
				}
			]
		},
		"ST": {
			"allOf": [
				{
					"$ref": "#/definitions/ED"
				},
				{
					"type": "object"
				}
			]
		},
		"INT": {
			"allOf": [
				{
					"$ref": "#/definitions/QTY"
				},
				{
					"type": "object",
					"properties": {
						"value": {
							"type": "string"
						}
					}
				}
			]
		},
		"POCD_MT000040RecordTarget": {
			"type": "object",
			"properties": {
				"realmCode": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CS"
					}
				},
				"typeId": {
					"$ref": "#/definitions/POCD_MT000040InfrastructureRoottypeId"
				},
				"templateId": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/II"
					}
				},
				"patientRole": {
					"$ref": "#/definitions/POCD_MT000040PatientRole"
				},
				"nullFlavor": {
					"type": "string"
				},
				"typeCode": {
					"type": "string"
				},
				"contextControlCode": {
					"type": "string"
				}
			}
		},
		"POCD_MT000040PatientRole": {
			"type": "object",
			"properties": {
				"realmCode": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CS"
					}
				},
				"typeId": {
					"$ref": "#/definitions/POCD_MT000040InfrastructureRoottypeId"
				},
				"templateId": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/II"
					}
				},
				"id": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/II"
					}
				},
				"addr": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/AD"
					}
				},
				"telecom": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TEL"
					}
				},
				"patient": {
					"$ref": "#/definitions/POCD_MT000040Patient"
				},
				"providerOrganization": {
					"$ref": "#/definitions/POCD_MT000040Organization"
				},
				"nullFlavor": {
					"type": "string"
				},
				"classCode": {
					"type": "string"
				}
			}
		},
		"AD": {
			"allOf": [
				{
					"$ref": "#/definitions/ANY"
				},
				{
					"type": "object",
					"required": [
						"isNotOrdered",
						"isNotOrderedSpecified"
					],
					"properties": {
						"Items": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/ADXP"
							}
						},
						"useablePeriod": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/SXCM_TS"
							}
						},
						"Text": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"use": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"isNotOrdered": {
							"type": "boolean"
						},
						"isNotOrderedSpecified": {
							"type": "boolean"
						}
					}
				}
			]
		},
		"ADXP": {
			"allOf": [
				{
					"$ref": "#/definitions/ST"
				},
				{
					"type": "object",
					"properties": {
						"partType": {
							"type": "string"
						}
					}
				}
			]
		},
		"POCD_MT000040Patient": {
			"type": "object",
			"properties": {
				"realmCode": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CS"
					}
				},
				"typeId": {
					"$ref": "#/definitions/POCD_MT000040InfrastructureRoottypeId"
				},
				"templateId": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/II"
					}
				},
				"id": {
					"$ref": "#/definitions/II"
				},
				"name": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PN"
					}
				},
				"administrativeGenderCode": {
					"$ref": "#/definitions/CE"
				},
				"birthTime": {
					"$ref": "#/definitions/TS"
				},
				"maritalStatusCode": {
					"$ref": "#/definitions/CE"
				},
				"religiousAffiliationCode": {
					"$ref": "#/definitions/CE"
				},
				"raceCode": {
					"$ref": "#/definitions/CE"
				},
				"ethnicGroupCode": {
					"$ref": "#/definitions/CE"
				},
				"guardian": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/POCD_MT000040Guardian"
					}
				},
				"birthplace": {
					"$ref": "#/definitions/POCD_MT000040Birthplace"
				},
				"languageCommunication": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/POCD_MT000040LanguageCommunication"
					}
				},
				"nullFlavor": {
					"type": "string"
				},
				"classCode": {
					"type": "string"
				},
				"determinerCode": {
					"type": "string"
				}
			}
		},
		"PN": {
			"allOf": [
				{
					"$ref": "#/definitions/EN"
				},
				{
					"type": "object"
				}
			]
		},
		"EN": {
			"allOf": [
				{
					"$ref": "#/definitions/ANY"
				},
				{
					"type": "object",
					"properties": {
						"Items": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/ENXP"
							}
						},
						"validTime": {
							"$ref": "#/definitions/IVL_TS"
						},
						"Text": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"use": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				}
			]
		},
		"ENXP": {
			"allOf": [
				{
					"$ref": "#/definitions/ST"
				},
				{
					"type": "object",
					"properties": {
						"partType": {
							"type": "string"
						},
						"qualifier": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				}
			]
		},
		"IVL_TS": {
			"allOf": [
				{
					"$ref": "#/definitions/SXCM_TS"
				},
				{
					"type": "object",
					"properties": {
						"Items": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/QTY"
							}
						},
						"ItemsElementName": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/ItemsChoiceType2"
							}
						}
					}
				}
			]
		},
		"ItemsChoiceType2": {
			"type": "integer",
			"description": "",
			"x-enumNames": [
				"center",
				"high",
				"low",
				"width"
			],
			"enum": [
				0,
				1,
				2,
				3
			]
		},
		"POCD_MT000040Guardian": {
			"type": "object",
			"properties": {
				"realmCode": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CS"
					}
				},
				"typeId": {
					"$ref": "#/definitions/POCD_MT000040InfrastructureRoottypeId"
				},
				"templateId": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/II"
					}
				},
				"id": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/II"
					}
				},
				"code": {
					"$ref": "#/definitions/CE"
				},
				"addr": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/AD"
					}
				},
				"telecom": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TEL"
					}
				},
				"Item": {},
				"nullFlavor": {
					"type": "string"
				},
				"classCode": {
					"type": "string"
				}
			}
		},
		"POCD_MT000040Birthplace": {
			"type": "object",
			"properties": {
				"realmCode": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CS"
					}
				},
				"typeId": {
					"$ref": "#/definitions/POCD_MT000040InfrastructureRoottypeId"
				},
				"templateId": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/II"
					}
				},
				"place": {
					"$ref": "#/definitions/POCD_MT000040Place"
				},
				"nullFlavor": {
					"type": "string"
				},
				"classCode": {
					"type": "string"
				}
			}
		},
		"POCD_MT000040Place": {
			"type": "object",
			"required": [
				"classCode",
				"classCodeSpecified"
			],
			"properties": {
				"realmCode": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CS"
					}
				},
				"typeId": {
					"$ref": "#/definitions/POCD_MT000040InfrastructureRoottypeId"
				},
				"templateId": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/II"
					}
				},
				"name": {
					"$ref": "#/definitions/EN"
				},
				"addr": {
					"$ref": "#/definitions/AD"
				},
				"nullFlavor": {
					"type": "string"
				},
				"classCode": {
					"$ref": "#/definitions/EntityClassPlace"
				},
				"classCodeSpecified": {
					"type": "boolean"
				},
				"determinerCode": {
					"type": "string"
				}
			}
		},
		"EntityClassPlace": {
			"type": "integer",
			"description": "",
			"x-enumNames": [
				"PLC",
				"CITY",
				"COUNTRY",
				"COUNTY",
				"PROVINCE"
			],
			"enum": [
				0,
				1,
				2,
				3,
				4
			]
		},
		"POCD_MT000040LanguageCommunication": {
			"type": "object",
			"properties": {
				"realmCode": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CS"
					}
				},
				"typeId": {
					"$ref": "#/definitions/POCD_MT000040InfrastructureRoottypeId"
				},
				"templateId": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/II"
					}
				},
				"languageCode": {
					"$ref": "#/definitions/CS"
				},
				"modeCode": {
					"$ref": "#/definitions/CE"
				},
				"proficiencyLevelCode": {
					"$ref": "#/definitions/CE"
				},
				"preferenceInd": {
					"$ref": "#/definitions/BL"
				},
				"nullFlavor": {
					"type": "string"
				}
			}
		},
		"BL": {
			"allOf": [
				{
					"$ref": "#/definitions/ANY"
				},
				{
					"type": "object",
					"required": [
						"value",
						"valueSpecified"
					],
					"properties": {
						"value": {
							"type": "boolean"
						},
						"valueSpecified": {
							"type": "boolean"
						}
					}
				}
			]
		},
		"POCD_MT000040Organization": {
			"type": "object",
			"properties": {
				"realmCode": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CS"
					}
				},
				"typeId": {
					"$ref": "#/definitions/POCD_MT000040InfrastructureRoottypeId"
				},
				"templateId": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/II"
					}
				},
				"id": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/II"
					}
				},
				"name": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ON"
					}
				},
				"telecom": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TEL"
					}
				},
				"addr": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/AD"
					}
				},
				"standardIndustryClassCode": {
					"$ref": "#/definitions/CE"
				},
				"asOrganizationPartOf": {
					"$ref": "#/definitions/POCD_MT000040OrganizationPartOf"
				},
				"nullFlavor": {
					"type": "string"
				},
				"classCode": {
					"type": "string"
				},
				"determinerCode": {
					"type": "string"
				}
			}
		},
		"ON": {
			"allOf": [
				{
					"$ref": "#/definitions/EN"
				},
				{
					"type": "object"
				}
			]
		},
		"POCD_MT000040OrganizationPartOf": {
			"type": "object",
			"properties": {
				"realmCode": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CS"
					}
				},
				"typeId": {
					"$ref": "#/definitions/POCD_MT000040InfrastructureRoottypeId"
				},
				"templateId": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/II"
					}
				},
				"id": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/II"
					}
				},
				"code": {
					"$ref": "#/definitions/CE"
				},
				"statusCode": {
					"$ref": "#/definitions/CS"
				},
				"effectiveTime": {
					"$ref": "#/definitions/IVL_TS"
				},
				"wholeOrganization": {
					"$ref": "#/definitions/POCD_MT000040Organization"
				},
				"nullFlavor": {
					"type": "string"
				},
				"classCode": {
					"type": "string"
				}
			}
		},
		"POCD_MT000040Author": {
			"type": "object",
			"properties": {
				"realmCode": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CS"
					}
				},
				"typeId": {
					"$ref": "#/definitions/POCD_MT000040InfrastructureRoottypeId"
				},
				"templateId": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/II"
					}
				},
				"functionCode": {
					"$ref": "#/definitions/CE"
				},
				"time": {
					"$ref": "#/definitions/TS"
				},
				"assignedAuthor": {
					"$ref": "#/definitions/POCD_MT000040AssignedAuthor"
				},
				"nullFlavor": {
					"type": "string"
				},
				"typeCode": {
					"type": "string"
				},
				"contextControlCode": {
					"type": "string"
				}
			}
		},
		"POCD_MT000040AssignedAuthor": {
			"type": "object",
			"properties": {
				"realmCode": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CS"
					}
				},
				"typeId": {
					"$ref": "#/definitions/POCD_MT000040InfrastructureRoottypeId"
				},
				"templateId": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/II"
					}
				},
				"id": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/II"
					}
				},
				"code": {
					"$ref": "#/definitions/CE"
				},
				"addr": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/AD"
					}
				},
				"telecom": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TEL"
					}
				},
				"Item": {},
				"representedOrganization": {
					"$ref": "#/definitions/POCD_MT000040Organization"
				},
				"nullFlavor": {
					"type": "string"
				},
				"classCode": {
					"type": "string"
				}
			}
		},
		"POCD_MT000040DataEnterer": {
			"type": "object",
			"properties": {
				"realmCode": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CS"
					}
				},
				"typeId": {
					"$ref": "#/definitions/POCD_MT000040InfrastructureRoottypeId"
				},
				"templateId": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/II"
					}
				},
				"time": {
					"$ref": "#/definitions/TS"
				},
				"assignedEntity": {
					"$ref": "#/definitions/POCD_MT000040AssignedEntity"
				},
				"nullFlavor": {
					"type": "string"
				},
				"typeCode": {
					"type": "string"
				},
				"contextControlCode": {
					"type": "string"
				}
			}
		},
		"POCD_MT000040AssignedEntity": {
			"type": "object",
			"properties": {
				"realmCode": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CS"
					}
				},
				"typeId": {
					"$ref": "#/definitions/POCD_MT000040InfrastructureRoottypeId"
				},
				"templateId": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/II"
					}
				},
				"id": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/II"
					}
				},
				"code": {
					"$ref": "#/definitions/CE"
				},
				"addr": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/AD"
					}
				},
				"telecom": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TEL"
					}
				},
				"assignedPerson": {
					"$ref": "#/definitions/POCD_MT000040Person"
				},
				"representedOrganization": {
					"$ref": "#/definitions/POCD_MT000040Organization"
				},
				"nullFlavor": {
					"type": "string"
				},
				"classCode": {
					"type": "string"
				}
			}
		},
		"POCD_MT000040Person": {
			"type": "object",
			"properties": {
				"realmCode": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CS"
					}
				},
				"typeId": {
					"$ref": "#/definitions/POCD_MT000040InfrastructureRoottypeId"
				},
				"templateId": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/II"
					}
				},
				"name": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PN"
					}
				},
				"nullFlavor": {
					"type": "string"
				},
				"classCode": {
					"type": "string"
				},
				"determinerCode": {
					"type": "string"
				}
			}
		},
		"POCD_MT000040Informant12": {
			"type": "object",
			"properties": {
				"realmCode": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CS"
					}
				},
				"typeId": {
					"$ref": "#/definitions/POCD_MT000040InfrastructureRoottypeId"
				},
				"templateId": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/II"
					}
				},
				"Item": {},
				"nullFlavor": {
					"type": "string"
				},
				"typeCode": {
					"type": "string"
				},
				"contextControlCode": {
					"type": "string"
				}
			}
		},
		"POCD_MT000040Custodian": {
			"type": "object",
			"properties": {
				"realmCode": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CS"
					}
				},
				"typeId": {
					"$ref": "#/definitions/POCD_MT000040InfrastructureRoottypeId"
				},
				"templateId": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/II"
					}
				},
				"assignedCustodian": {
					"$ref": "#/definitions/POCD_MT000040AssignedCustodian"
				},
				"nullFlavor": {
					"type": "string"
				},
				"typeCode": {
					"type": "string"
				}
			}
		},
		"POCD_MT000040AssignedCustodian": {
			"type": "object",
			"properties": {
				"realmCode": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CS"
					}
				},
				"typeId": {
					"$ref": "#/definitions/POCD_MT000040InfrastructureRoottypeId"
				},
				"templateId": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/II"
					}
				},
				"representedCustodianOrganization": {
					"$ref": "#/definitions/POCD_MT000040CustodianOrganization"
				},
				"nullFlavor": {
					"type": "string"
				},
				"classCode": {
					"type": "string"
				}
			}
		},
		"POCD_MT000040CustodianOrganization": {
			"type": "object",
			"properties": {
				"realmCode": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CS"
					}
				},
				"typeId": {
					"$ref": "#/definitions/POCD_MT000040InfrastructureRoottypeId"
				},
				"templateId": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/II"
					}
				},
				"id": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/II"
					}
				},
				"name": {
					"$ref": "#/definitions/ON"
				},
				"telecom": {
					"$ref": "#/definitions/TEL"
				},
				"addr": {
					"$ref": "#/definitions/AD"
				},
				"nullFlavor": {
					"type": "string"
				},
				"classCode": {
					"type": "string"
				},
				"determinerCode": {
					"type": "string"
				}
			}
		},
		"POCD_MT000040InformationRecipient": {
			"type": "object",
			"required": [
				"typeCode"
			],
			"properties": {
				"realmCode": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CS"
					}
				},
				"typeId": {
					"$ref": "#/definitions/POCD_MT000040InfrastructureRoottypeId"
				},
				"templateId": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/II"
					}
				},
				"intendedRecipient": {
					"$ref": "#/definitions/POCD_MT000040IntendedRecipient"
				},
				"nullFlavor": {
					"type": "string"
				},
				"typeCode": {
					"default": 0,
					"allOf": [
						{
							"$ref": "#/definitions/X_InformationRecipient"
						}
					]
				}
			}
		},
		"POCD_MT000040IntendedRecipient": {
			"type": "object",
			"required": [
				"classCode"
			],
			"properties": {
				"realmCode": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CS"
					}
				},
				"typeId": {
					"$ref": "#/definitions/POCD_MT000040InfrastructureRoottypeId"
				},
				"templateId": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/II"
					}
				},
				"id": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/II"
					}
				},
				"addr": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/AD"
					}
				},
				"telecom": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TEL"
					}
				},
				"informationRecipient": {
					"$ref": "#/definitions/POCD_MT000040Person"
				},
				"receivedOrganization": {
					"$ref": "#/definitions/POCD_MT000040Organization"
				},
				"nullFlavor": {
					"type": "string"
				},
				"classCode": {
					"default": 0,
					"allOf": [
						{
							"$ref": "#/definitions/X_InformationRecipientRole"
						}
					]
				}
			}
		},
		"X_InformationRecipientRole": {
			"type": "integer",
			"description": "",
			"x-enumNames": [
				"ASSIGNED",
				"HLTHCHRT"
			],
			"enum": [
				0,
				1
			]
		},
		"X_InformationRecipient": {
			"type": "integer",
			"description": "",
			"x-enumNames": [
				"PRCP",
				"TRC"
			],
			"enum": [
				0,
				1
			]
		},
		"POCD_MT000040LegalAuthenticator": {
			"type": "object",
			"properties": {
				"realmCode": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CS"
					}
				},
				"typeId": {
					"$ref": "#/definitions/POCD_MT000040InfrastructureRoottypeId"
				},
				"templateId": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/II"
					}
				},
				"time": {
					"$ref": "#/definitions/TS"
				},
				"signatureCode": {
					"$ref": "#/definitions/CS"
				},
				"assignedEntity": {
					"$ref": "#/definitions/POCD_MT000040AssignedEntity"
				},
				"nullFlavor": {
					"type": "string"
				},
				"typeCode": {
					"type": "string"
				},
				"contextControlCode": {
					"type": "string"
				}
			}
		},
		"POCD_MT000040Authenticator": {
			"type": "object",
			"properties": {
				"realmCode": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CS"
					}
				},
				"typeId": {
					"$ref": "#/definitions/POCD_MT000040InfrastructureRoottypeId"
				},
				"templateId": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/II"
					}
				},
				"time": {
					"$ref": "#/definitions/TS"
				},
				"signatureCode": {
					"$ref": "#/definitions/CS"
				},
				"assignedEntity": {
					"$ref": "#/definitions/POCD_MT000040AssignedEntity"
				},
				"nullFlavor": {
					"type": "string"
				},
				"typeCode": {
					"type": "string"
				}
			}
		},
		"POCD_MT000040Participant1": {
			"type": "object",
			"properties": {
				"realmCode": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CS"
					}
				},
				"typeId": {
					"$ref": "#/definitions/POCD_MT000040InfrastructureRoottypeId"
				},
				"templateId": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/II"
					}
				},
				"functionCode": {
					"$ref": "#/definitions/CE"
				},
				"time": {
					"$ref": "#/definitions/IVL_TS"
				},
				"associatedEntity": {
					"$ref": "#/definitions/POCD_MT000040AssociatedEntity"
				},
				"nullFlavor": {
					"type": "string"
				},
				"typeCode": {
					"type": "string"
				},
				"contextControlCode": {
					"type": "string"
				}
			}
		},
		"POCD_MT000040AssociatedEntity": {
			"type": "object",
			"properties": {
				"realmCode": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CS"
					}
				},
				"typeId": {
					"$ref": "#/definitions/POCD_MT000040InfrastructureRoottypeId"
				},
				"templateId": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/II"
					}
				},
				"id": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/II"
					}
				},
				"code": {
					"$ref": "#/definitions/CE"
				},
				"addr": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/AD"
					}
				},
				"telecom": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TEL"
					}
				},
				"associatedPerson": {
					"$ref": "#/definitions/POCD_MT000040Person"
				},
				"scopingOrganization": {
					"$ref": "#/definitions/POCD_MT000040Organization"
				},
				"nullFlavor": {
					"type": "string"
				},
				"classCode": {
					"type": "string"
				}
			}
		},
		"POCD_MT000040InFulfillmentOf": {
			"type": "object",
			"required": [
				"typeCode",
				"typeCodeSpecified"
			],
			"properties": {
				"realmCode": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CS"
					}
				},
				"typeId": {
					"$ref": "#/definitions/POCD_MT000040InfrastructureRoottypeId"
				},
				"templateId": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/II"
					}
				},
				"order": {
					"$ref": "#/definitions/POCD_MT000040Order"
				},
				"nullFlavor": {
					"type": "string"
				},
				"typeCode": {
					"$ref": "#/definitions/ActRelationshipFulfills"
				},
				"typeCodeSpecified": {
					"type": "boolean"
				}
			}
		},
		"POCD_MT000040Order": {
			"type": "object",
			"properties": {
				"realmCode": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CS"
					}
				},
				"typeId": {
					"$ref": "#/definitions/POCD_MT000040InfrastructureRoottypeId"
				},
				"templateId": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/II"
					}
				},
				"id": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/II"
					}
				},
				"code": {
					"$ref": "#/definitions/CE"
				},
				"priorityCode": {
					"$ref": "#/definitions/CE"
				},
				"nullFlavor": {
					"type": "string"
				},
				"classCode": {
					"type": "string",
					"default": "ACT"
				},
				"moodCode": {
					"type": "string"
				}
			}
		},
		"ActRelationshipFulfills": {
			"type": "integer",
			"description": "",
			"x-enumNames": [
				"FLFS",
				"OCCR",
				"OREF",
				"SCH"
			],
			"enum": [
				0,
				1,
				2,
				3
			]
		},
		"POCD_MT000040DocumentationOf": {
			"type": "object",
			"properties": {
				"realmCode": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CS"
					}
				},
				"typeId": {
					"$ref": "#/definitions/POCD_MT000040InfrastructureRoottypeId"
				},
				"templateId": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/II"
					}
				},
				"serviceEvent": {
					"$ref": "#/definitions/POCD_MT000040ServiceEvent"
				},
				"nullFlavor": {
					"type": "string"
				},
				"typeCode": {
					"type": "string"
				}
			}
		},
		"POCD_MT000040ServiceEvent": {
			"type": "object",
			"properties": {
				"realmCode": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CS"
					}
				},
				"typeId": {
					"$ref": "#/definitions/POCD_MT000040InfrastructureRoottypeId"
				},
				"templateId": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/II"
					}
				},
				"id": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/II"
					}
				},
				"code": {
					"$ref": "#/definitions/CE"
				},
				"effectiveTime": {
					"$ref": "#/definitions/IVL_TS"
				},
				"performer": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/POCD_MT000040Performer1"
					}
				},
				"nullFlavor": {
					"type": "string"
				},
				"classCode": {
					"type": "string",
					"default": "ACT"
				},
				"moodCode": {
					"type": "string"
				}
			}
		},
		"POCD_MT000040Performer1": {
			"type": "object",
			"required": [
				"typeCode"
			],
			"properties": {
				"realmCode": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CS"
					}
				},
				"typeId": {
					"$ref": "#/definitions/POCD_MT000040InfrastructureRoottypeId"
				},
				"templateId": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/II"
					}
				},
				"functionCode": {
					"$ref": "#/definitions/CE"
				},
				"time": {
					"$ref": "#/definitions/IVL_TS"
				},
				"assignedEntity": {
					"$ref": "#/definitions/POCD_MT000040AssignedEntity"
				},
				"nullFlavor": {
					"type": "string"
				},
				"typeCode": {
					"$ref": "#/definitions/X_ServiceEventPerformer"
				}
			}
		},
		"X_ServiceEventPerformer": {
			"type": "integer",
			"description": "",
			"x-enumNames": [
				"PRF",
				"PPRF",
				"SPRF"
			],
			"enum": [
				0,
				1,
				2
			]
		},
		"POCD_MT000040RelatedDocument": {
			"type": "object",
			"required": [
				"typeCode"
			],
			"properties": {
				"realmCode": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CS"
					}
				},
				"typeId": {
					"$ref": "#/definitions/POCD_MT000040InfrastructureRoottypeId"
				},
				"templateId": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/II"
					}
				},
				"parentDocument": {
					"$ref": "#/definitions/POCD_MT000040ParentDocument"
				},
				"nullFlavor": {
					"type": "string"
				},
				"typeCode": {
					"$ref": "#/definitions/X_ActRelationshipDocument"
				}
			}
		},
		"POCD_MT000040ParentDocument": {
			"type": "object",
			"required": [
				"classCode",
				"classCodeSpecified"
			],
			"properties": {
				"realmCode": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CS"
					}
				},
				"typeId": {
					"$ref": "#/definitions/POCD_MT000040InfrastructureRoottypeId"
				},
				"templateId": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/II"
					}
				},
				"id": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/II"
					}
				},
				"code": {
					"$ref": "#/definitions/CD"
				},
				"text": {
					"$ref": "#/definitions/ED"
				},
				"setId": {
					"$ref": "#/definitions/II"
				},
				"versionNumber": {
					"$ref": "#/definitions/INT"
				},
				"nullFlavor": {
					"type": "string"
				},
				"classCode": {
					"$ref": "#/definitions/ActClinicalDocument"
				},
				"classCodeSpecified": {
					"type": "boolean"
				},
				"moodCode": {
					"type": "string"
				}
			}
		},
		"ActClinicalDocument": {
			"type": "integer",
			"description": "",
			"x-enumNames": [
				"DOCCLIN",
				"CDALVLONE"
			],
			"enum": [
				0,
				1
			]
		},
		"X_ActRelationshipDocument": {
			"type": "integer",
			"description": "",
			"x-enumNames": [
				"RPLC",
				"APND",
				"XFRM"
			],
			"enum": [
				0,
				1,
				2
			]
		},
		"POCD_MT000040Authorization": {
			"type": "object",
			"properties": {
				"realmCode": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CS"
					}
				},
				"typeId": {
					"$ref": "#/definitions/POCD_MT000040InfrastructureRoottypeId"
				},
				"templateId": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/II"
					}
				},
				"consent": {
					"$ref": "#/definitions/POCD_MT000040Consent"
				},
				"nullFlavor": {
					"type": "string"
				},
				"typeCode": {
					"type": "string"
				}
			}
		},
		"POCD_MT000040Consent": {
			"type": "object",
			"properties": {
				"realmCode": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CS"
					}
				},
				"typeId": {
					"$ref": "#/definitions/POCD_MT000040InfrastructureRoottypeId"
				},
				"templateId": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/II"
					}
				},
				"id": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/II"
					}
				},
				"code": {
					"$ref": "#/definitions/CE"
				},
				"statusCode": {
					"$ref": "#/definitions/CS"
				},
				"nullFlavor": {
					"type": "string"
				},
				"classCode": {
					"type": "string"
				},
				"moodCode": {
					"type": "string"
				}
			}
		},
		"POCD_MT000040Component1": {
			"type": "object",
			"required": [
				"typeCode",
				"typeCodeSpecified"
			],
			"properties": {
				"realmCode": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CS"
					}
				},
				"typeId": {
					"$ref": "#/definitions/POCD_MT000040InfrastructureRoottypeId"
				},
				"templateId": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/II"
					}
				},
				"encompassingEncounter": {
					"$ref": "#/definitions/POCD_MT000040EncompassingEncounter"
				},
				"nullFlavor": {
					"type": "string"
				},
				"typeCode": {
					"$ref": "#/definitions/ActRelationshipHasComponent"
				},
				"typeCodeSpecified": {
					"type": "boolean"
				}
			}
		},
		"POCD_MT000040EncompassingEncounter": {
			"type": "object",
			"properties": {
				"realmCode": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CS"
					}
				},
				"typeId": {
					"$ref": "#/definitions/POCD_MT000040InfrastructureRoottypeId"
				},
				"templateId": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/II"
					}
				},
				"id": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/II"
					}
				},
				"code": {
					"$ref": "#/definitions/CE"
				},
				"effectiveTime": {
					"$ref": "#/definitions/IVL_TS"
				},
				"dischargeDispositionCode": {
					"$ref": "#/definitions/CE"
				},
				"responsibleParty": {
					"$ref": "#/definitions/POCD_MT000040ResponsibleParty"
				},
				"encounterParticipant": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/POCD_MT000040EncounterParticipant"
					}
				},
				"location": {
					"$ref": "#/definitions/POCD_MT000040Location"
				},
				"nullFlavor": {
					"type": "string"
				},
				"classCode": {
					"type": "string"
				},
				"moodCode": {
					"type": "string"
				}
			}
		},
		"POCD_MT000040ResponsibleParty": {
			"type": "object",
			"properties": {
				"realmCode": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CS"
					}
				},
				"typeId": {
					"$ref": "#/definitions/POCD_MT000040InfrastructureRoottypeId"
				},
				"templateId": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/II"
					}
				},
				"assignedEntity": {
					"$ref": "#/definitions/POCD_MT000040AssignedEntity"
				},
				"nullFlavor": {
					"type": "string"
				},
				"typeCode": {
					"type": "string"
				}
			}
		},
		"POCD_MT000040EncounterParticipant": {
			"type": "object",
			"required": [
				"typeCode"
			],
			"properties": {
				"realmCode": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CS"
					}
				},
				"typeId": {
					"$ref": "#/definitions/POCD_MT000040InfrastructureRoottypeId"
				},
				"templateId": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/II"
					}
				},
				"time": {
					"$ref": "#/definitions/IVL_TS"
				},
				"assignedEntity": {
					"$ref": "#/definitions/POCD_MT000040AssignedEntity"
				},
				"nullFlavor": {
					"type": "string"
				},
				"typeCode": {
					"$ref": "#/definitions/X_EncounterParticipant"
				}
			}
		},
		"X_EncounterParticipant": {
			"type": "integer",
			"description": "",
			"x-enumNames": [
				"ADM",
				"ATND",
				"CON",
				"DIS",
				"REF"
			],
			"enum": [
				0,
				1,
				2,
				3,
				4
			]
		},
		"POCD_MT000040Location": {
			"type": "object",
			"required": [
				"typeCode",
				"typeCodeSpecified"
			],
			"properties": {
				"realmCode": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CS"
					}
				},
				"typeId": {
					"$ref": "#/definitions/POCD_MT000040InfrastructureRoottypeId"
				},
				"templateId": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/II"
					}
				},
				"healthCareFacility": {
					"$ref": "#/definitions/POCD_MT000040HealthCareFacility"
				},
				"nullFlavor": {
					"type": "string"
				},
				"typeCode": {
					"$ref": "#/definitions/ParticipationTargetLocation"
				},
				"typeCodeSpecified": {
					"type": "boolean"
				}
			}
		},
		"POCD_MT000040HealthCareFacility": {
			"type": "object",
			"required": [
				"classCode"
			],
			"properties": {
				"realmCode": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CS"
					}
				},
				"typeId": {
					"$ref": "#/definitions/POCD_MT000040InfrastructureRoottypeId"
				},
				"templateId": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/II"
					}
				},
				"id": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/II"
					}
				},
				"code": {
					"$ref": "#/definitions/CE"
				},
				"location": {
					"$ref": "#/definitions/POCD_MT000040Place"
				},
				"serviceProviderOrganization": {
					"$ref": "#/definitions/POCD_MT000040Organization"
				},
				"nullFlavor": {
					"type": "string"
				},
				"classCode": {
					"default": 0,
					"allOf": [
						{
							"$ref": "#/definitions/RoleClassServiceDeliveryLocation"
						}
					]
				}
			}
		},
		"RoleClassServiceDeliveryLocation": {
			"type": "integer",
			"description": "",
			"x-enumNames": [
				"SDLOC",
				"DSDLOC",
				"ISDLOC"
			],
			"enum": [
				0,
				1,
				2
			]
		},
		"ParticipationTargetLocation": {
			"type": "integer",
			"description": "",
			"x-enumNames": [
				"LOC",
				"DST",
				"ELOC",
				"ORG",
				"RML",
				"VIA"
			],
			"enum": [
				0,
				1,
				2,
				3,
				4,
				5
			]
		},
		"ActRelationshipHasComponent": {
			"type": "integer",
			"description": "",
			"x-enumNames": [
				"COMP",
				"ARR",
				"CTRLV",
				"DEP"
			],
			"enum": [
				0,
				1,
				2,
				3
			]
		},
		"POCD_MT000040Component2": {
			"type": "object",
			"required": [
				"typeCode",
				"typeCodeSpecified",
				"contextConductionInd",
				"contextConductionIndSpecified"
			],
			"properties": {
				"realmCode": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CS"
					}
				},
				"typeId": {
					"$ref": "#/definitions/POCD_MT000040InfrastructureRoottypeId"
				},
				"templateId": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/II"
					}
				},
				"Item": {},
				"nullFlavor": {
					"type": "string"
				},
				"typeCode": {
					"$ref": "#/definitions/ActRelationshipHasComponent"
				},
				"typeCodeSpecified": {
					"type": "boolean"
				},
				"contextConductionInd": {
					"type": "boolean"
				},
				"contextConductionIndSpecified": {
					"type": "boolean"
				}
			}
		},
		"FichierNomme": {
			"type": "object",
			"properties": {
				"Contenu": {
					"type": "string",
					"format": "byte"
				},
				"Nom": {
					"type": "string"
				},
				"TypeMime": {
					"type": "string"
				}
			}
		},
		"TypeSectionExportPDF": {
			"type": "integer",
			"description": "",
			"x-enumNames": [
				"CVDS",
				"DS",
				"DSOC",
				"PINV",
				"CONCB"
			],
			"enum": [
				0,
				1,
				2,
				3,
				4
			]
		},
		"DocumentTravailSendResult2": {
			"type": "object",
			"required": [
				"Success"
			],
			"properties": {
				"IdEchange": {
					"type": "integer",
					"format": "int32"
				},
				"IdConversation": {
					"type": "integer",
					"format": "int32"
				},
				"Success": {
					"type": "boolean"
				}
			}
		},
		"SendExportSynthesePDFRequest": {
			"type": "object",
			"description": "Fichier de travail",
			"properties": {
				"idTechPsDestinataires": {
					"type": "array",
					"description": "Liste destinataires",
					"items": {
						"type": "string"
					}
				},
				"listeSections": {
					"type": "array",
					"description": "listeSections",
					"items": {
						"$ref": "#/definitions/TypeSectionExportPDF"
					}
				}
			}
		},
		"VisioParticipant": {
			"allOf": [
				{
					"$ref": "#/definitions/BaseOfVisioParticipantAndVisioParticipant"
				},
				{
					"type": "object",
					"required": [
						"Id",
						"DateModification",
						"IdVisio",
						"DateCreation"
					],
					"properties": {
						"Id": {
							"type": "integer",
							"format": "int32"
						},
						"DateModification": {
							"type": "string",
							"format": "date-time"
						},
						"Login": {
							"type": "string"
						},
						"IdVisio": {
							"type": "integer",
							"format": "int32"
						},
						"DateCreation": {
							"type": "string",
							"format": "date-time"
						}
					}
				}
			]
		},
		"BaseOfVisioParticipantAndVisioParticipant": {
			"type": "object",
			"description": "Classe de base des objets du modèle",
			"x-abstract": true
		},
		"ValueSet": {
			"allOf": [
				{
					"$ref": "#/definitions/DomainResource"
				},
				{
					"type": "object",
					"properties": {
						"UrlElement": {
							"$ref": "#/definitions/FhirUri"
						},
						"Identifier": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Identifier"
							}
						},
						"VersionElement": {
							"$ref": "#/definitions/FhirString"
						},
						"NameElement": {
							"$ref": "#/definitions/FhirString"
						},
						"TitleElement": {
							"$ref": "#/definitions/FhirString"
						},
						"StatusElement": {
							"$ref": "#/definitions/CodeOfPublicationStatus"
						},
						"ExperimentalElement": {
							"$ref": "#/definitions/FhirBoolean"
						},
						"DateElement": {
							"$ref": "#/definitions/FhirDateTime"
						},
						"PublisherElement": {
							"$ref": "#/definitions/FhirString"
						},
						"Contact": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/ContactDetail"
							}
						},
						"Description": {
							"$ref": "#/definitions/Markdown"
						},
						"UseContext": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/UsageContext"
							}
						},
						"Jurisdiction": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/CodeableConcept"
							}
						},
						"ImmutableElement": {
							"$ref": "#/definitions/FhirBoolean"
						},
						"Purpose": {
							"$ref": "#/definitions/Markdown"
						},
						"Copyright": {
							"$ref": "#/definitions/Markdown"
						},
						"ExtensibleElement": {
							"$ref": "#/definitions/FhirBoolean"
						},
						"Compose": {
							"$ref": "#/definitions/ComposeComponent"
						},
						"Expansion": {
							"$ref": "#/definitions/ExpansionComponent"
						}
					}
				}
			]
		},
		"FhirUri": {
			"allOf": [
				{
					"$ref": "#/definitions/PrimitiveOfString"
				},
				{
					"type": "object",
					"properties": {
						"Value": {
							"type": "string"
						}
					}
				}
			]
		},
		"PrimitiveOfString": {
			"allOf": [
				{
					"$ref": "#/definitions/Primitive"
				},
				{
					"type": "object",
					"x-abstract": true
				}
			]
		},
		"Primitive": {
			"allOf": [
				{
					"$ref": "#/definitions/Element"
				},
				{
					"type": "object",
					"x-abstract": true
				}
			]
		},
		"Element": {
			"allOf": [
				{
					"$ref": "#/definitions/Base"
				},
				{
					"type": "object",
					"x-abstract": true,
					"properties": {
						"ElementId": {
							"type": "string"
						},
						"Extension": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Extension"
							}
						}
					}
				}
			]
		},
		"Extension": {
			"allOf": [
				{
					"$ref": "#/definitions/Element"
				},
				{
					"type": "object",
					"properties": {
						"Url": {
							"type": "string"
						},
						"Value": {
							"$ref": "#/definitions/Element"
						}
					}
				}
			]
		},
		"Base": {
			"type": "object",
			"x-abstract": true
		},
		"Identifier": {
			"allOf": [
				{
					"$ref": "#/definitions/Element"
				},
				{
					"type": "object",
					"properties": {
						"UseElement": {
							"$ref": "#/definitions/CodeOfIdentifierUse"
						},
						"Type": {
							"$ref": "#/definitions/CodeableConcept"
						},
						"SystemElement": {
							"$ref": "#/definitions/FhirUri"
						},
						"ValueElement": {
							"$ref": "#/definitions/FhirString"
						},
						"Period": {
							"$ref": "#/definitions/Period"
						},
						"Assigner": {
							"$ref": "#/definitions/ResourceReference"
						}
					}
				}
			]
		},
		"CodeOfIdentifierUse": {
			"allOf": [
				{
					"$ref": "#/definitions/PrimitiveOfIdentifierUse"
				},
				{
					"type": "object",
					"properties": {
						"Value": {
							"$ref": "#/definitions/IdentifierUse"
						}
					}
				}
			]
		},
		"IdentifierUse": {
			"type": "integer",
			"description": "",
			"x-enumNames": [
				"Usual",
				"Official",
				"Temp",
				"Secondary"
			],
			"enum": [
				0,
				1,
				2,
				3
			]
		},
		"PrimitiveOfIdentifierUse": {
			"allOf": [
				{
					"$ref": "#/definitions/Primitive"
				},
				{
					"type": "object",
					"x-abstract": true
				}
			]
		},
		"CodeableConcept": {
			"allOf": [
				{
					"$ref": "#/definitions/Element"
				},
				{
					"type": "object",
					"properties": {
						"Coding": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Coding"
							}
						},
						"TextElement": {
							"$ref": "#/definitions/FhirString"
						}
					}
				}
			]
		},
		"Coding": {
			"allOf": [
				{
					"$ref": "#/definitions/Element"
				},
				{
					"type": "object",
					"properties": {
						"SystemElement": {
							"$ref": "#/definitions/FhirUri"
						},
						"VersionElement": {
							"$ref": "#/definitions/FhirString"
						},
						"CodeElement": {
							"$ref": "#/definitions/Code"
						},
						"DisplayElement": {
							"$ref": "#/definitions/FhirString"
						},
						"UserSelectedElement": {
							"$ref": "#/definitions/FhirBoolean"
						}
					}
				}
			]
		},
		"FhirString": {
			"allOf": [
				{
					"$ref": "#/definitions/PrimitiveOfString"
				},
				{
					"type": "object",
					"properties": {
						"Value": {
							"type": "string"
						}
					}
				}
			]
		},
		"Code": {
			"allOf": [
				{
					"$ref": "#/definitions/PrimitiveOfString"
				},
				{
					"type": "object",
					"properties": {
						"Value": {
							"type": "string"
						}
					}
				}
			]
		},
		"FhirBoolean": {
			"allOf": [
				{
					"$ref": "#/definitions/PrimitiveOfNullableBoolean"
				},
				{
					"type": "object",
					"properties": {
						"Value": {
							"type": "boolean"
						}
					}
				}
			]
		},
		"PrimitiveOfNullableBoolean": {
			"allOf": [
				{
					"$ref": "#/definitions/Primitive"
				},
				{
					"type": "object",
					"x-abstract": true
				}
			]
		},
		"Period": {
			"allOf": [
				{
					"$ref": "#/definitions/Element"
				},
				{
					"type": "object",
					"properties": {
						"StartElement": {
							"$ref": "#/definitions/FhirDateTime"
						},
						"EndElement": {
							"$ref": "#/definitions/FhirDateTime"
						}
					}
				}
			]
		},
		"FhirDateTime": {
			"allOf": [
				{
					"$ref": "#/definitions/PrimitiveOfString"
				},
				{
					"type": "object",
					"properties": {
						"Value": {
							"type": "string"
						}
					}
				}
			]
		},
		"ResourceReference": {
			"allOf": [
				{
					"$ref": "#/definitions/Element"
				},
				{
					"type": "object",
					"properties": {
						"ReferenceElement": {
							"$ref": "#/definitions/FhirString"
						},
						"Identifier": {
							"$ref": "#/definitions/Identifier"
						},
						"DisplayElement": {
							"$ref": "#/definitions/FhirString"
						}
					}
				}
			]
		},
		"CodeOfPublicationStatus": {
			"allOf": [
				{
					"$ref": "#/definitions/PrimitiveOfPublicationStatus"
				},
				{
					"type": "object",
					"properties": {
						"Value": {
							"$ref": "#/definitions/PublicationStatus"
						}
					}
				}
			]
		},
		"PublicationStatus": {
			"type": "integer",
			"description": "",
			"x-enumNames": [
				"Draft",
				"Active",
				"Retired",
				"Unknown"
			],
			"enum": [
				0,
				1,
				2,
				3
			]
		},
		"PrimitiveOfPublicationStatus": {
			"allOf": [
				{
					"$ref": "#/definitions/Primitive"
				},
				{
					"type": "object",
					"x-abstract": true
				}
			]
		},
		"ContactDetail": {
			"allOf": [
				{
					"$ref": "#/definitions/Element"
				},
				{
					"type": "object",
					"properties": {
						"NameElement": {
							"$ref": "#/definitions/FhirString"
						},
						"Telecom": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/ContactPoint"
							}
						}
					}
				}
			]
		},
		"ContactPoint": {
			"allOf": [
				{
					"$ref": "#/definitions/Element"
				},
				{
					"type": "object",
					"properties": {
						"SystemElement": {
							"$ref": "#/definitions/CodeOfContactPointSystem"
						},
						"ValueElement": {
							"$ref": "#/definitions/FhirString"
						},
						"UseElement": {
							"$ref": "#/definitions/CodeOfContactPointUse"
						},
						"RankElement": {
							"$ref": "#/definitions/PositiveInt"
						},
						"Period": {
							"$ref": "#/definitions/Period"
						}
					}
				}
			]
		},
		"CodeOfContactPointSystem": {
			"allOf": [
				{
					"$ref": "#/definitions/PrimitiveOfContactPointSystem"
				},
				{
					"type": "object",
					"properties": {
						"Value": {
							"$ref": "#/definitions/ContactPointSystem"
						}
					}
				}
			]
		},
		"ContactPointSystem": {
			"type": "integer",
			"description": "",
			"x-enumNames": [
				"Phone",
				"Fax",
				"Email",
				"Pager",
				"Url",
				"Sms",
				"Other"
			],
			"enum": [
				0,
				1,
				2,
				3,
				4,
				5,
				6
			]
		},
		"PrimitiveOfContactPointSystem": {
			"allOf": [
				{
					"$ref": "#/definitions/Primitive"
				},
				{
					"type": "object",
					"x-abstract": true
				}
			]
		},
		"CodeOfContactPointUse": {
			"allOf": [
				{
					"$ref": "#/definitions/PrimitiveOfContactPointUse"
				},
				{
					"type": "object",
					"properties": {
						"Value": {
							"$ref": "#/definitions/ContactPointUse"
						}
					}
				}
			]
		},
		"ContactPointUse": {
			"type": "integer",
			"description": "",
			"x-enumNames": [
				"Home",
				"Work",
				"Temp",
				"Old",
				"Mobile"
			],
			"enum": [
				0,
				1,
				2,
				3,
				4
			]
		},
		"PrimitiveOfContactPointUse": {
			"allOf": [
				{
					"$ref": "#/definitions/Primitive"
				},
				{
					"type": "object",
					"x-abstract": true
				}
			]
		},
		"PositiveInt": {
			"allOf": [
				{
					"$ref": "#/definitions/PrimitiveOfNullableInteger"
				},
				{
					"type": "object",
					"properties": {
						"Value": {
							"type": "integer",
							"format": "int32"
						}
					}
				}
			]
		},
		"PrimitiveOfNullableInteger": {
			"allOf": [
				{
					"$ref": "#/definitions/Primitive"
				},
				{
					"type": "object",
					"x-abstract": true
				}
			]
		},
		"Markdown": {
			"allOf": [
				{
					"$ref": "#/definitions/PrimitiveOfString"
				},
				{
					"type": "object",
					"properties": {
						"Value": {
							"type": "string"
						}
					}
				}
			]
		},
		"UsageContext": {
			"allOf": [
				{
					"$ref": "#/definitions/Element"
				},
				{
					"type": "object",
					"properties": {
						"Code": {
							"$ref": "#/definitions/Coding"
						},
						"Value": {
							"$ref": "#/definitions/Element"
						}
					}
				}
			]
		},
		"ComposeComponent": {
			"allOf": [
				{
					"$ref": "#/definitions/BackboneElement"
				},
				{
					"type": "object",
					"properties": {
						"LockedDateElement": {
							"$ref": "#/definitions/Date"
						},
						"InactiveElement": {
							"$ref": "#/definitions/FhirBoolean"
						},
						"Include": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/ConceptSetComponent"
							}
						},
						"Exclude": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/ConceptSetComponent"
							}
						}
					}
				}
			]
		},
		"Date": {
			"allOf": [
				{
					"$ref": "#/definitions/PrimitiveOfString"
				},
				{
					"type": "object",
					"properties": {
						"Value": {
							"type": "string"
						}
					}
				}
			]
		},
		"ConceptSetComponent": {
			"allOf": [
				{
					"$ref": "#/definitions/BackboneElement"
				},
				{
					"type": "object",
					"properties": {
						"SystemElement": {
							"$ref": "#/definitions/FhirUri"
						},
						"VersionElement": {
							"$ref": "#/definitions/FhirString"
						},
						"Concept": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/ConceptReferenceComponent"
							}
						},
						"Filter": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/FilterComponent"
							}
						},
						"ValueSetElement": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/FhirUri"
							}
						}
					}
				}
			]
		},
		"ConceptReferenceComponent": {
			"allOf": [
				{
					"$ref": "#/definitions/BackboneElement"
				},
				{
					"type": "object",
					"properties": {
						"CodeElement": {
							"$ref": "#/definitions/Code"
						},
						"DisplayElement": {
							"$ref": "#/definitions/FhirString"
						},
						"Designation": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/DesignationComponent"
							}
						}
					}
				}
			]
		},
		"DesignationComponent": {
			"allOf": [
				{
					"$ref": "#/definitions/BackboneElement"
				},
				{
					"type": "object",
					"properties": {
						"LanguageElement": {
							"$ref": "#/definitions/Code"
						},
						"Use": {
							"$ref": "#/definitions/Coding"
						},
						"ValueElement": {
							"$ref": "#/definitions/FhirString"
						}
					}
				}
			]
		},
		"BackboneElement": {
			"allOf": [
				{
					"$ref": "#/definitions/Element"
				},
				{
					"type": "object",
					"x-abstract": true,
					"properties": {
						"ModifierExtension": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Extension"
							}
						}
					}
				}
			]
		},
		"FilterComponent": {
			"allOf": [
				{
					"$ref": "#/definitions/BackboneElement"
				},
				{
					"type": "object",
					"properties": {
						"PropertyElement": {
							"$ref": "#/definitions/Code"
						},
						"OpElement": {
							"$ref": "#/definitions/CodeOfFilterOperator"
						},
						"ValueElement": {
							"$ref": "#/definitions/Code"
						}
					}
				}
			]
		},
		"CodeOfFilterOperator": {
			"allOf": [
				{
					"$ref": "#/definitions/PrimitiveOfFilterOperator"
				},
				{
					"type": "object",
					"properties": {
						"Value": {
							"$ref": "#/definitions/FilterOperator"
						}
					}
				}
			]
		},
		"FilterOperator": {
			"type": "integer",
			"description": "",
			"x-enumNames": [
				"Equal",
				"IsA",
				"DescendentOf",
				"IsNotA",
				"Regex",
				"In",
				"NotIn",
				"Generalizes",
				"Exists"
			],
			"enum": [
				0,
				1,
				2,
				3,
				4,
				5,
				6,
				7,
				8
			]
		},
		"PrimitiveOfFilterOperator": {
			"allOf": [
				{
					"$ref": "#/definitions/Primitive"
				},
				{
					"type": "object",
					"x-abstract": true
				}
			]
		},
		"ExpansionComponent": {
			"allOf": [
				{
					"$ref": "#/definitions/BackboneElement"
				},
				{
					"type": "object",
					"properties": {
						"IdentifierElement": {
							"$ref": "#/definitions/FhirUri"
						},
						"TimestampElement": {
							"$ref": "#/definitions/FhirDateTime"
						},
						"TotalElement": {
							"$ref": "#/definitions/Integer"
						},
						"OffsetElement": {
							"$ref": "#/definitions/Integer"
						},
						"Parameter": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/ParameterComponent"
							}
						},
						"Contains": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/ContainsComponent"
							}
						}
					}
				}
			]
		},
		"Integer": {
			"allOf": [
				{
					"$ref": "#/definitions/PrimitiveOfNullableInteger"
				},
				{
					"type": "object",
					"properties": {
						"Value": {
							"type": "integer",
							"format": "int32"
						}
					}
				}
			]
		},
		"ParameterComponent": {
			"allOf": [
				{
					"$ref": "#/definitions/BackboneElement"
				},
				{
					"type": "object",
					"properties": {
						"NameElement": {
							"$ref": "#/definitions/FhirString"
						},
						"Value": {
							"$ref": "#/definitions/Element"
						}
					}
				}
			]
		},
		"ContainsComponent": {
			"allOf": [
				{
					"$ref": "#/definitions/BackboneElement"
				},
				{
					"type": "object",
					"properties": {
						"SystemElement": {
							"$ref": "#/definitions/FhirUri"
						},
						"AbstractElement": {
							"$ref": "#/definitions/FhirBoolean"
						},
						"InactiveElement": {
							"$ref": "#/definitions/FhirBoolean"
						},
						"VersionElement": {
							"$ref": "#/definitions/FhirString"
						},
						"CodeElement": {
							"$ref": "#/definitions/Code"
						},
						"DisplayElement": {
							"$ref": "#/definitions/FhirString"
						},
						"Designation": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/DesignationComponent"
							}
						},
						"Contains": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/ContainsComponent"
							}
						}
					}
				}
			]
		},
		"DomainResource": {
			"allOf": [
				{
					"$ref": "#/definitions/Resource"
				},
				{
					"type": "object",
					"x-abstract": true,
					"properties": {
						"Text": {
							"$ref": "#/definitions/Narrative"
						},
						"Contained": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Resource"
							}
						},
						"Extension": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Extension"
							}
						},
						"ModifierExtension": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Extension"
							}
						}
					}
				}
			]
		},
		"Narrative": {
			"allOf": [
				{
					"$ref": "#/definitions/Element"
				},
				{
					"type": "object",
					"properties": {
						"StatusElement": {
							"$ref": "#/definitions/CodeOfNarrativeStatus"
						},
						"Div": {
							"type": "string"
						}
					}
				}
			]
		},
		"CodeOfNarrativeStatus": {
			"allOf": [
				{
					"$ref": "#/definitions/PrimitiveOfNarrativeStatus"
				},
				{
					"type": "object",
					"properties": {
						"Value": {
							"$ref": "#/definitions/NarrativeStatus"
						}
					}
				}
			]
		},
		"NarrativeStatus": {
			"type": "integer",
			"description": "",
			"x-enumNames": [
				"Generated",
				"Extensions",
				"Additional",
				"Empty"
			],
			"enum": [
				0,
				1,
				2,
				3
			]
		},
		"PrimitiveOfNarrativeStatus": {
			"allOf": [
				{
					"$ref": "#/definitions/Primitive"
				},
				{
					"type": "object",
					"x-abstract": true
				}
			]
		},
		"Resource": {
			"allOf": [
				{
					"$ref": "#/definitions/Base"
				},
				{
					"type": "object",
					"x-abstract": true,
					"properties": {
						"IdElement": {
							"$ref": "#/definitions/Id"
						},
						"Meta": {
							"$ref": "#/definitions/Meta"
						},
						"ImplicitRulesElement": {
							"$ref": "#/definitions/FhirUri"
						},
						"LanguageElement": {
							"$ref": "#/definitions/Code"
						}
					}
				}
			]
		},
		"Id": {
			"allOf": [
				{
					"$ref": "#/definitions/PrimitiveOfString"
				},
				{
					"type": "object",
					"properties": {
						"Value": {
							"type": "string"
						}
					}
				}
			]
		},
		"Meta": {
			"allOf": [
				{
					"$ref": "#/definitions/Element"
				},
				{
					"type": "object",
					"properties": {
						"VersionIdElement": {
							"$ref": "#/definitions/Id"
						},
						"LastUpdatedElement": {
							"$ref": "#/definitions/Instant"
						},
						"ProfileElement": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/FhirUri"
							}
						},
						"Security": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Coding"
							}
						},
						"Tag": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Coding"
							}
						}
					}
				}
			]
		},
		"Instant": {
			"allOf": [
				{
					"$ref": "#/definitions/PrimitiveOfNullableDateTimeOffset"
				},
				{
					"type": "object",
					"properties": {
						"Value": {
							"type": "string",
							"format": "date-time"
						}
					}
				}
			]
		},
		"PrimitiveOfNullableDateTimeOffset": {
			"allOf": [
				{
					"$ref": "#/definitions/Primitive"
				},
				{
					"type": "object",
					"x-abstract": true
				}
			]
		},
		"SticPatientRecord": {
			"type": "object",
			"required": [
				"DateNaissance",
				"Statut",
				"Attribut"
			],
			"properties": {
				"Ippr": {
					"type": "string"
				},
				"NomNaissance": {
					"type": "string"
				},
				"NomUsuel": {
					"type": "string"
				},
				"Prenom": {
					"type": "string"
				},
				"PrenomUsuel": {
					"type": "string"
				},
				"DateNaissance": {
					"type": "string",
					"format": "date-time"
				},
				"Sexe": {
					"type": "string"
				},
				"CodePaysNaissance": {
					"type": "string"
				},
				"CodePostalNaissance": {
					"type": "string"
				},
				"VilleNaissance": {
					"type": "string"
				},
				"CodePostalResidence": {
					"type": "string"
				},
				"VilleResidence": {
					"type": "string"
				},
				"CodePaysResidence": {
					"type": "string"
				},
				"AdresseResidence": {
					"type": "string"
				},
				"TelephoneResidence": {
					"type": "string"
				},
				"TelephonePortable": {
					"type": "string"
				},
				"Email": {
					"type": "string"
				},
				"ListePrenoms": {
					"type": "string"
				},
				"LieuNaissanceCog": {
					"type": "string"
				},
				"Statut": {
					"$ref": "#/definitions/StatutIdentiteIns"
				},
				"Ins": {
					"$ref": "#/definitions/IdentifiantNational"
				},
				"Attribut": {
					"$ref": "#/definitions/AttributIns"
				},
				"DateDerniereVerificationINS": {
					"type": "string",
					"format": "date-time"
				},
				"PsQualif": {
					"type": "string"
				},
				"DateDernierAppelINS": {
					"type": "string",
					"format": "date-time"
				}
			}
		},
		"IdentifiantNational": {
			"type": "object",
			"required": [
				"EstNia"
			],
			"properties": {
				"Nir": {
					"type": "string"
				},
				"EstNia": {
					"type": "boolean"
				}
			}
		},
		"AttributIns": {
			"type": "integer",
			"description": "",
			"x-enumNames": [
				"None",
				"Homonyme",
				"Fictive",
				"Anonyme",
				"Douteux"
			],
			"enum": [
				0,
				1,
				2,
				3,
				4
			]
		},
		"Bundle": {
			"allOf": [
				{
					"$ref": "#/definitions/Resource"
				},
				{
					"type": "object",
					"properties": {
						"Identifier": {
							"$ref": "#/definitions/Identifier"
						},
						"TypeElement": {
							"$ref": "#/definitions/CodeOfBundleType"
						},
						"TotalElement": {
							"$ref": "#/definitions/UnsignedInt"
						},
						"Link": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/LinkComponent"
							}
						},
						"Entry": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/EntryComponent"
							}
						},
						"Signature": {
							"$ref": "#/definitions/Signature"
						}
					}
				}
			]
		},
		"CodeOfBundleType": {
			"allOf": [
				{
					"$ref": "#/definitions/PrimitiveOfBundleType"
				},
				{
					"type": "object",
					"properties": {
						"Value": {
							"$ref": "#/definitions/BundleType"
						}
					}
				}
			]
		},
		"BundleType": {
			"type": "integer",
			"description": "",
			"x-enumNames": [
				"Document",
				"Message",
				"Transaction",
				"TransactionResponse",
				"Batch",
				"BatchResponse",
				"History",
				"Searchset",
				"Collection"
			],
			"enum": [
				0,
				1,
				2,
				3,
				4,
				5,
				6,
				7,
				8
			]
		},
		"PrimitiveOfBundleType": {
			"allOf": [
				{
					"$ref": "#/definitions/Primitive"
				},
				{
					"type": "object",
					"x-abstract": true
				}
			]
		},
		"UnsignedInt": {
			"allOf": [
				{
					"$ref": "#/definitions/PrimitiveOfNullableInteger"
				},
				{
					"type": "object",
					"properties": {
						"Value": {
							"type": "integer",
							"format": "int32"
						}
					}
				}
			]
		},
		"LinkComponent": {
			"allOf": [
				{
					"$ref": "#/definitions/BackboneElement"
				},
				{
					"type": "object",
					"properties": {
						"RelationElement": {
							"$ref": "#/definitions/FhirString"
						},
						"UrlElement": {
							"$ref": "#/definitions/FhirUri"
						}
					}
				}
			]
		},
		"EntryComponent": {
			"allOf": [
				{
					"$ref": "#/definitions/BackboneElement"
				},
				{
					"type": "object",
					"properties": {
						"Link": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/LinkComponent"
							}
						},
						"FullUrlElement": {
							"$ref": "#/definitions/FhirUri"
						},
						"Resource": {
							"$ref": "#/definitions/Resource"
						},
						"Search": {
							"$ref": "#/definitions/SearchComponent"
						},
						"Request": {
							"$ref": "#/definitions/RequestComponent"
						},
						"Response": {
							"$ref": "#/definitions/ResponseComponent"
						}
					}
				}
			]
		},
		"SearchComponent": {
			"allOf": [
				{
					"$ref": "#/definitions/BackboneElement"
				},
				{
					"type": "object",
					"properties": {
						"ModeElement": {
							"$ref": "#/definitions/CodeOfSearchEntryMode"
						},
						"ScoreElement": {
							"$ref": "#/definitions/FhirDecimal"
						}
					}
				}
			]
		},
		"CodeOfSearchEntryMode": {
			"allOf": [
				{
					"$ref": "#/definitions/PrimitiveOfSearchEntryMode"
				},
				{
					"type": "object",
					"properties": {
						"Value": {
							"$ref": "#/definitions/SearchEntryMode"
						}
					}
				}
			]
		},
		"SearchEntryMode": {
			"type": "integer",
			"description": "",
			"x-enumNames": [
				"Match",
				"Include",
				"Outcome"
			],
			"enum": [
				0,
				1,
				2
			]
		},
		"PrimitiveOfSearchEntryMode": {
			"allOf": [
				{
					"$ref": "#/definitions/Primitive"
				},
				{
					"type": "object",
					"x-abstract": true
				}
			]
		},
		"FhirDecimal": {
			"allOf": [
				{
					"$ref": "#/definitions/PrimitiveOfNullableDecimal"
				},
				{
					"type": "object",
					"properties": {
						"Value": {
							"type": "number",
							"format": "decimal"
						}
					}
				}
			]
		},
		"PrimitiveOfNullableDecimal": {
			"allOf": [
				{
					"$ref": "#/definitions/Primitive"
				},
				{
					"type": "object",
					"x-abstract": true
				}
			]
		},
		"RequestComponent": {
			"allOf": [
				{
					"$ref": "#/definitions/BackboneElement"
				},
				{
					"type": "object",
					"properties": {
						"MethodElement": {
							"$ref": "#/definitions/CodeOfHTTPVerb"
						},
						"UrlElement": {
							"$ref": "#/definitions/FhirUri"
						},
						"IfNoneMatchElement": {
							"$ref": "#/definitions/FhirString"
						},
						"IfModifiedSinceElement": {
							"$ref": "#/definitions/Instant"
						},
						"IfMatchElement": {
							"$ref": "#/definitions/FhirString"
						},
						"IfNoneExistElement": {
							"$ref": "#/definitions/FhirString"
						}
					}
				}
			]
		},
		"CodeOfHTTPVerb": {
			"allOf": [
				{
					"$ref": "#/definitions/PrimitiveOfHTTPVerb"
				},
				{
					"type": "object",
					"properties": {
						"Value": {
							"$ref": "#/definitions/HTTPVerb"
						}
					}
				}
			]
		},
		"HTTPVerb": {
			"type": "integer",
			"description": "",
			"x-enumNames": [
				"GET",
				"POST",
				"PUT",
				"DELETE"
			],
			"enum": [
				0,
				1,
				2,
				3
			]
		},
		"PrimitiveOfHTTPVerb": {
			"allOf": [
				{
					"$ref": "#/definitions/Primitive"
				},
				{
					"type": "object",
					"x-abstract": true
				}
			]
		},
		"ResponseComponent": {
			"allOf": [
				{
					"$ref": "#/definitions/BackboneElement"
				},
				{
					"type": "object",
					"properties": {
						"StatusElement": {
							"$ref": "#/definitions/FhirString"
						},
						"LocationElement": {
							"$ref": "#/definitions/FhirUri"
						},
						"EtagElement": {
							"$ref": "#/definitions/FhirString"
						},
						"LastModifiedElement": {
							"$ref": "#/definitions/Instant"
						},
						"Outcome": {
							"$ref": "#/definitions/Resource"
						}
					}
				}
			]
		},
		"Signature": {
			"allOf": [
				{
					"$ref": "#/definitions/Element"
				},
				{
					"type": "object",
					"properties": {
						"Type": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Coding"
							}
						},
						"WhenElement": {
							"$ref": "#/definitions/Instant"
						},
						"Who": {
							"$ref": "#/definitions/Element"
						},
						"OnBehalfOf": {
							"$ref": "#/definitions/Element"
						},
						"ContentTypeElement": {
							"$ref": "#/definitions/Code"
						},
						"BlobElement": {
							"$ref": "#/definitions/Base64Binary"
						}
					}
				}
			]
		},
		"Base64Binary": {
			"allOf": [
				{
					"$ref": "#/definitions/PrimitiveOfByteOf"
				},
				{
					"type": "object",
					"properties": {
						"Value": {
							"type": "string",
							"format": "byte"
						}
					}
				}
			]
		},
		"PrimitiveOfByteOf": {
			"allOf": [
				{
					"$ref": "#/definitions/Primitive"
				},
				{
					"type": "object",
					"x-abstract": true
				}
			]
		},
		"Patient2": {
			"allOf": [
				{
					"$ref": "#/definitions/DomainResource"
				},
				{
					"type": "object",
					"properties": {
						"Identifier": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Identifier"
							}
						},
						"ActiveElement": {
							"$ref": "#/definitions/FhirBoolean"
						},
						"Name": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/HumanName"
							}
						},
						"Telecom": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/ContactPoint"
							}
						},
						"GenderElement": {
							"$ref": "#/definitions/CodeOfAdministrativeGender"
						},
						"BirthDateElement": {
							"$ref": "#/definitions/Date"
						},
						"Deceased": {
							"$ref": "#/definitions/Element"
						},
						"Address": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Address"
							}
						},
						"MaritalStatus": {
							"$ref": "#/definitions/CodeableConcept"
						},
						"MultipleBirth": {
							"$ref": "#/definitions/Element"
						},
						"Photo": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Attachment"
							}
						},
						"Contact": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/ContactComponent"
							}
						},
						"Animal": {
							"$ref": "#/definitions/AnimalComponent"
						},
						"Communication": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/CommunicationComponent"
							}
						},
						"GeneralPractitioner": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/ResourceReference"
							}
						},
						"ManagingOrganization": {
							"$ref": "#/definitions/ResourceReference"
						},
						"Link": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/LinkComponent2"
							}
						}
					}
				}
			]
		},
		"HumanName": {
			"allOf": [
				{
					"$ref": "#/definitions/Element"
				},
				{
					"type": "object",
					"properties": {
						"UseElement": {
							"$ref": "#/definitions/CodeOfNameUse"
						},
						"TextElement": {
							"$ref": "#/definitions/FhirString"
						},
						"FamilyElement": {
							"$ref": "#/definitions/FhirString"
						},
						"GivenElement": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/FhirString"
							}
						},
						"PrefixElement": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/FhirString"
							}
						},
						"SuffixElement": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/FhirString"
							}
						},
						"Period": {
							"$ref": "#/definitions/Period"
						}
					}
				}
			]
		},
		"CodeOfNameUse": {
			"allOf": [
				{
					"$ref": "#/definitions/PrimitiveOfNameUse"
				},
				{
					"type": "object",
					"properties": {
						"Value": {
							"$ref": "#/definitions/NameUse"
						}
					}
				}
			]
		},
		"NameUse": {
			"type": "integer",
			"description": "",
			"x-enumNames": [
				"Usual",
				"Official",
				"Temp",
				"Nickname",
				"Anonymous",
				"Old",
				"Maiden"
			],
			"enum": [
				0,
				1,
				2,
				3,
				4,
				5,
				6
			]
		},
		"PrimitiveOfNameUse": {
			"allOf": [
				{
					"$ref": "#/definitions/Primitive"
				},
				{
					"type": "object",
					"x-abstract": true
				}
			]
		},
		"CodeOfAdministrativeGender": {
			"allOf": [
				{
					"$ref": "#/definitions/PrimitiveOfAdministrativeGender"
				},
				{
					"type": "object",
					"properties": {
						"Value": {
							"$ref": "#/definitions/AdministrativeGender"
						}
					}
				}
			]
		},
		"AdministrativeGender": {
			"type": "integer",
			"description": "",
			"x-enumNames": [
				"Male",
				"Female",
				"Other",
				"Unknown"
			],
			"enum": [
				0,
				1,
				2,
				3
			]
		},
		"PrimitiveOfAdministrativeGender": {
			"allOf": [
				{
					"$ref": "#/definitions/Primitive"
				},
				{
					"type": "object",
					"x-abstract": true
				}
			]
		},
		"Address": {
			"allOf": [
				{
					"$ref": "#/definitions/Element"
				},
				{
					"type": "object",
					"properties": {
						"UseElement": {
							"$ref": "#/definitions/CodeOfAddressUse"
						},
						"TypeElement": {
							"$ref": "#/definitions/CodeOfAddressType"
						},
						"TextElement": {
							"$ref": "#/definitions/FhirString"
						},
						"LineElement": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/FhirString"
							}
						},
						"CityElement": {
							"$ref": "#/definitions/FhirString"
						},
						"DistrictElement": {
							"$ref": "#/definitions/FhirString"
						},
						"StateElement": {
							"$ref": "#/definitions/FhirString"
						},
						"PostalCodeElement": {
							"$ref": "#/definitions/FhirString"
						},
						"CountryElement": {
							"$ref": "#/definitions/FhirString"
						},
						"Period": {
							"$ref": "#/definitions/Period"
						}
					}
				}
			]
		},
		"CodeOfAddressUse": {
			"allOf": [
				{
					"$ref": "#/definitions/PrimitiveOfAddressUse"
				},
				{
					"type": "object",
					"properties": {
						"Value": {
							"$ref": "#/definitions/AddressUse"
						}
					}
				}
			]
		},
		"AddressUse": {
			"type": "integer",
			"description": "",
			"x-enumNames": [
				"Home",
				"Work",
				"Temp",
				"Old"
			],
			"enum": [
				0,
				1,
				2,
				3
			]
		},
		"PrimitiveOfAddressUse": {
			"allOf": [
				{
					"$ref": "#/definitions/Primitive"
				},
				{
					"type": "object",
					"x-abstract": true
				}
			]
		},
		"CodeOfAddressType": {
			"allOf": [
				{
					"$ref": "#/definitions/PrimitiveOfAddressType"
				},
				{
					"type": "object",
					"properties": {
						"Value": {
							"$ref": "#/definitions/AddressType"
						}
					}
				}
			]
		},
		"AddressType": {
			"type": "integer",
			"description": "",
			"x-enumNames": [
				"Postal",
				"Physical",
				"Both"
			],
			"enum": [
				0,
				1,
				2
			]
		},
		"PrimitiveOfAddressType": {
			"allOf": [
				{
					"$ref": "#/definitions/Primitive"
				},
				{
					"type": "object",
					"x-abstract": true
				}
			]
		},
		"Attachment": {
			"allOf": [
				{
					"$ref": "#/definitions/Element"
				},
				{
					"type": "object",
					"properties": {
						"ContentTypeElement": {
							"$ref": "#/definitions/Code"
						},
						"LanguageElement": {
							"$ref": "#/definitions/Code"
						},
						"DataElement": {
							"$ref": "#/definitions/Base64Binary"
						},
						"UrlElement": {
							"$ref": "#/definitions/FhirUri"
						},
						"SizeElement": {
							"$ref": "#/definitions/UnsignedInt"
						},
						"HashElement": {
							"$ref": "#/definitions/Base64Binary"
						},
						"TitleElement": {
							"$ref": "#/definitions/FhirString"
						},
						"CreationElement": {
							"$ref": "#/definitions/FhirDateTime"
						}
					}
				}
			]
		},
		"ContactComponent": {
			"allOf": [
				{
					"$ref": "#/definitions/BackboneElement"
				},
				{
					"type": "object",
					"properties": {
						"Relationship": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/CodeableConcept"
							}
						},
						"Name": {
							"$ref": "#/definitions/HumanName"
						},
						"Telecom": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/ContactPoint"
							}
						},
						"Address": {
							"$ref": "#/definitions/Address"
						},
						"GenderElement": {
							"$ref": "#/definitions/CodeOfAdministrativeGender"
						},
						"Organization": {
							"$ref": "#/definitions/ResourceReference"
						},
						"Period": {
							"$ref": "#/definitions/Period"
						}
					}
				}
			]
		},
		"AnimalComponent": {
			"allOf": [
				{
					"$ref": "#/definitions/BackboneElement"
				},
				{
					"type": "object",
					"properties": {
						"Species": {
							"$ref": "#/definitions/CodeableConcept"
						},
						"Breed": {
							"$ref": "#/definitions/CodeableConcept"
						},
						"GenderStatus": {
							"$ref": "#/definitions/CodeableConcept"
						}
					}
				}
			]
		},
		"CommunicationComponent": {
			"allOf": [
				{
					"$ref": "#/definitions/BackboneElement"
				},
				{
					"type": "object",
					"properties": {
						"Language": {
							"$ref": "#/definitions/CodeableConcept"
						},
						"PreferredElement": {
							"$ref": "#/definitions/FhirBoolean"
						}
					}
				}
			]
		},
		"LinkComponent2": {
			"allOf": [
				{
					"$ref": "#/definitions/BackboneElement"
				},
				{
					"type": "object",
					"properties": {
						"Other": {
							"$ref": "#/definitions/ResourceReference"
						},
						"TypeElement": {
							"$ref": "#/definitions/CodeOfLinkType"
						}
					}
				}
			]
		},
		"CodeOfLinkType": {
			"allOf": [
				{
					"$ref": "#/definitions/PrimitiveOfLinkType"
				},
				{
					"type": "object",
					"properties": {
						"Value": {
							"$ref": "#/definitions/LinkType"
						}
					}
				}
			]
		},
		"LinkType": {
			"type": "integer",
			"description": "",
			"x-enumNames": [
				"ReplacedBy",
				"Replaces",
				"Refer",
				"Seealso"
			],
			"enum": [
				0,
				1,
				2,
				3
			]
		},
		"PrimitiveOfLinkType": {
			"allOf": [
				{
					"$ref": "#/definitions/Primitive"
				},
				{
					"type": "object",
					"x-abstract": true
				}
			]
		},
		"MyHopCreationCompteMscCodeRetour": {
			"type": "integer",
			"description": "Codes de retour de l'appel InscriptionPatientDefinitif du connecteur ViaPatient",
			"x-enumNames": [
				"None",
				"Doublon",
				"PatientDejaInscrit",
				"PatientInscritCompteExistant",
				"PatientInscritCompteCree",
				"PatientInscritSansCompte",
				"PatientIntrouvableDpi",
				"TraitStrictManquant",
				"TelephoneNeCorrespondPas",
				"MotDePasseNeCorrespondPas"
			],
			"enum": [
				0,
				1,
				2,
				3,
				4,
				5,
				9,
				10,
				12,
				13
			]
		},
		"MyHopPatientUtilisateur": {
			"type": "object",
			"description": "La classe PatientUtilisateur est une classe composite dont l’objectif est de faciliter les appels aux services.",
			"required": [
				"Patient",
				"Utilisateur",
				"LienPatientUtilisateur"
			],
			"properties": {
				"Patient": {
					"$ref": "#/definitions/MyHopPatient"
				},
				"Utilisateur": {
					"$ref": "#/definitions/MyHopUtilisateur"
				},
				"LienPatientUtilisateur": {
					"description": "Relation entre le patient et l'utilisateur ",
					"allOf": [
						{
							"$ref": "#/definitions/MyHopLienPatientUtilisateurEnum"
						}
					]
				}
			}
		},
		"MyHopPatient": {
			"allOf": [
				{
					"$ref": "#/definitions/BaseOfMyHopPatientAndPatient"
				},
				{
					"type": "object",
					"description": "La classe Patient assure l’unicité des données par son identifiant. Un patient peut avoir une même identité pour plusieurs site",
					"required": [
						"DateDeNaissance",
						"Email",
						"IdRegion",
						"Nom",
						"NomDeNaissance",
						"Prenom",
						"Sexe",
						"TelephoneMobile"
					],
					"properties": {
						"CodePostalDeNaissance": {
							"type": "string",
							"description": "Code postal de naissance du patient, obligatoire si Pays de naissance = France"
						},
						"DateDeNaissance": {
							"type": "string",
							"description": "Date de naissance du patient",
							"format": "date-time",
							"minLength": 1
						},
						"Email": {
							"type": "string",
							"description": "Adresse e-mail du patient",
							"minLength": 1
						},
						"IPPR": {
							"type": "string",
							"description": "Identifiant régional du patient"
						},
						"IdRegion": {
							"type": "integer",
							"format": "int32"
						},
						"Nom": {
							"type": "string",
							"description": "Nom usuel du patient",
							"minLength": 1
						},
						"NomDeNaissance": {
							"type": "string",
							"description": "Nom de naissance du patient",
							"minLength": 1
						},
						"PaysDeNaissance": {
							"type": "string",
							"description": "Libellé du pays de naissance du patient"
						},
						"Prenom": {
							"type": "string",
							"description": "Prénom du patient",
							"minLength": 1
						},
						"Sexe": {
							"type": "string",
							"description": "Sexe du patient",
							"minLength": 1
						},
						"TelephoneMobile": {
							"type": "string",
							"description": "Numéro de téléphone mobile du patient",
							"minLength": 1
						},
						"VilleDeNaissance": {
							"type": "string",
							"description": "Ville de naissance du patient"
						}
					}
				}
			]
		},
		"BaseOfMyHopPatientAndPatient": {
			"type": "object",
			"description": "Classe de base des objets du modèle",
			"x-abstract": true
		},
		"MyHopUtilisateur": {
			"allOf": [
				{
					"$ref": "#/definitions/BaseOfMyHopUtilisateurAndUtilisateurViaPatient"
				},
				{
					"type": "object",
					"description": "La classe Utilisateur permet de gérer le compte utilisateur. \nUn utilisateur est identifié par son adresse mail (champ Email). \nLes patients sont libres de créer des comptes sur le site viaPatient, mais le rattachement se fait uniquement si le patient possède un Email valide ou un numéro de téléphone portable (champs Email et TelephoneMobile). \nL’OTP permet d’assurer l’identification croisée entre l’utilisateur et le patient.\nL’Email de l’utilisateur est l’identifiant utilisé lors de la connexion dans viaPatient.",
					"required": [
						"Email",
						"Nom",
						"Prenom",
						"Mobile"
					],
					"properties": {
						"Email": {
							"type": "string",
							"description": "Email de l'utilisateur : identifiant utilisé par l'utilisateur",
							"minLength": 1
						},
						"Nom": {
							"type": "string",
							"description": "Nom de l'utilsateur",
							"minLength": 1
						},
						"Prenom": {
							"type": "string",
							"description": "Prénom de l'utilsateur",
							"minLength": 1
						},
						"Mobile": {
							"type": "string",
							"description": "Numéro de téléphone mobile de l'utilsateur",
							"minLength": 1
						}
					}
				}
			]
		},
		"BaseOfMyHopUtilisateurAndUtilisateurViaPatient": {
			"type": "object",
			"description": "Classe de base des objets du modèle",
			"x-abstract": true
		},
		"MyHopLienPatientUtilisateurEnum": {
			"type": "integer",
			"description": "",
			"x-enumNames": [
				"PersonneConcernee",
				"Pere",
				"Mere",
				"ResponsableLegal",
				"PersonneDeConfiance"
			],
			"enum": [
				1,
				2,
				3,
				4,
				5
			]
		},
		"InfoDateInclusion": {
			"type": "object",
			"required": [
				"IdActeur"
			],
			"properties": {
				"IdActeur": {
					"type": "integer",
					"format": "int32"
				},
				"IdTechPs": {
					"type": "string"
				},
				"LastDateInclusion": {
					"type": "string"
				}
			}
		},
		"UpdateTraitsEtenduRequest": {
			"type": "object",
			"properties": {
				"Code": {
					"type": "string"
				},
				"Valeur": {
					"type": "string"
				}
			}
		},
		"Practitioner": {
			"allOf": [
				{
					"$ref": "#/definitions/DomainResource"
				},
				{
					"type": "object",
					"properties": {
						"Identifier": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Identifier"
							}
						},
						"ActiveElement": {
							"$ref": "#/definitions/FhirBoolean"
						},
						"Name": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/HumanName"
							}
						},
						"Telecom": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/ContactPoint"
							}
						},
						"Address": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Address"
							}
						},
						"GenderElement": {
							"$ref": "#/definitions/CodeOfAdministrativeGender"
						},
						"BirthDateElement": {
							"$ref": "#/definitions/Date"
						},
						"Photo": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Attachment"
							}
						},
						"Qualification": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/QualificationComponent"
							}
						},
						"Communication": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/CodeableConcept"
							}
						}
					}
				}
			]
		},
		"QualificationComponent": {
			"allOf": [
				{
					"$ref": "#/definitions/BackboneElement"
				},
				{
					"type": "object",
					"properties": {
						"Identifier": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Identifier"
							}
						},
						"Code": {
							"$ref": "#/definitions/CodeableConcept"
						},
						"Period": {
							"$ref": "#/definitions/Period"
						},
						"Issuer": {
							"$ref": "#/definitions/ResourceReference"
						}
					}
				}
			]
		}
	}
}